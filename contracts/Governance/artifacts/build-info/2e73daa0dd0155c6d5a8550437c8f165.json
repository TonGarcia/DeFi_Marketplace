{
	"id": "2e73daa0dd0155c6d5a8550437c8f165",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Governance/Niu.sol": {
				"content": "pragma solidity ^0.5.16;\n//pragma experimental ABIEncoderV2;\n\ncontract Niu {\n    /// @notice EIP-20 token name for this token\n    string public constant name = \"Niural\";\n\n    /// @notice EIP-20 token symbol for this token\n    string public constant symbol = \"NIU\";\n\n    /// @notice EIP-20 token decimals for this token\n    uint8 public constant decimals = 18;\n\n    /// @notice Total number of tokens in circulation\n    uint public constant totalSupply = 10000000e18; // 10 million Niu\n\n    /// @notice Allowance amounts on behalf of others\n    mapping (address => mapping (address => uint96)) internal allowances;\n\n    /// @notice Official record of token balances for each account\n    mapping (address => uint96) internal balances;\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint96 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /// @notice The standard EIP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard EIP-20 approval event\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /**\n     * @notice Construct a new Niu token\n     * @param account The initial account to grant all the tokens\n     */\n    constructor(address account) public {\n        balances[account] = uint96(totalSupply);\n        emit Transfer(address(0), account, totalSupply);\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param account The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address account, address spender) external view returns (uint) {\n        return allowances[account][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n     * @param spender The address of the account which may transfer tokens\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint rawAmount) external returns (bool) {\n        uint96 amount;\n        if (rawAmount == uint(-1)) {\n            amount = uint96(-1);\n        } else {\n            amount = safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\");\n        }\n\n        allowances[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint) {\n        return balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address dst, uint rawAmount) external returns (bool) {\n        uint96 amount = safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\");\n        _transferTokens(msg.sender, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param src The address of the source account\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\n        address spender = msg.sender;\n        uint96 spenderAllowance = allowances[src][spender];\n        uint96 amount = safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\");\n\n        if (spender != src && spenderAllowance != uint96(-1)) {\n            uint96 newAllowance = sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\");\n            allowances[src][spender] = newAllowance;\n\n            emit Approval(src, spender, newAllowance);\n        }\n\n        _transferTokens(src, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Niu::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"Niu::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"Niu::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\n        require(blockNumber < block.number, \"Niu::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint96 delegatorBalance = balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _transferTokens(address src, address dst, uint96 amount) internal {\n        require(src != address(0), \"Niu::_transferTokens: cannot transfer from the zero address\");\n        require(dst != address(0), \"Niu::_transferTokens: cannot transfer to the zero address\");\n\n        balances[src] = sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\");\n        balances[dst] = add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\");\n        emit Transfer(src, dst, amount);\n\n        _moveDelegates(delegates[src], delegates[dst], amount);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint96 srcRepNew = sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\");\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint96 dstRepNew = add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\");\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {\n      uint32 blockNumber = safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\");\n\n      if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n          checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n      } else {\n          checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n          numCheckpoints[delegatee] = nCheckpoints + 1;\n      }\n\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {\n        require(n < 2**96, errorMessage);\n        return uint96(n);\n    }\n\n    function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        uint96 c = a + b;\n        require(c >= a, errorMessage);\n        return c;\n    }\n\n    function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Governance/Niu.sol": {
				"Niu": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint96",
									"name": "votes",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"params": {
									"account": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"return": "The number of tokens approved"
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
								"params": {
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"return": "The number of tokens held"
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens"
								}
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"return": "The number of current votes for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"return": "The number of votes the account had as of the given block"
							},
							"transfer(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer",
									"src": "The address of the source account"
								},
								"return": "Whether or not the transfer succeeded"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"Governance/Niu.sol\":62:12576  contract Niu {... */\n  mstore(0x40, 0x80)\n    /* \"Governance/Niu.sol\":2540:2689  constructor(address account) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Governance/Niu.sol\":2540:2689  constructor(address account) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"Governance/Niu.sol\":2540:2689  constructor(address account) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Governance/Niu.sol\":454:465  10000000e18 */\n  0x084595161401484a000000\n    /* \"Governance/Niu.sol\":2586:2594  balances */\n  0x01\n    /* \"Governance/Niu.sol\":2586:2603  balances[account] */\n  0x00\n    /* \"Governance/Niu.sol\":2595:2602  account */\n  dup4\n    /* \"Governance/Niu.sol\":2586:2603  balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"Governance/Niu.sol\":2586:2625  balances[account] = uint96(totalSupply) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Governance/Niu.sol\":2661:2668  account */\n  dup1\n    /* \"Governance/Niu.sol\":2640:2682  Transfer(address(0), account, totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Governance/Niu.sol\":2657:2658  0 */\n  0x00\n    /* \"Governance/Niu.sol\":2640:2682  Transfer(address(0), account, totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"Governance/Niu.sol\":454:465  10000000e18 */\n  0x084595161401484a000000\n    /* \"Governance/Niu.sol\":2640:2682  Transfer(address(0), account, totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Governance/Niu.sol\":2540:2689  constructor(address account) public {... */\n  pop\n    /* \"Governance/Niu.sol\":62:12576  contract Niu {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Governance/Niu.sol\":62:12576  contract Niu {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Governance/Niu.sol\":62:12576  contract Niu {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb4b5ea57\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Governance/Niu.sol\":130:168  string public constant name = \"Niural\" */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_27:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_27)\n    tag_29:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Governance/Niu.sol\":130:168  string public constant name = \"Niural\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_30:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":3587:3993  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"Governance/Niu.sol\":3587:3993  function approve(address spender, uint rawAmount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":419:465  uint public constant totalSupply = 10000000e18 */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":1324:1446  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":5085:5741  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"Governance/Niu.sol\":5085:5741  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":323:358  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":789:834  mapping (address => address) public delegates */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"Governance/Niu.sol\":789:834  mapping (address => address) public delegates */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":5883:5983  function delegate(address delegatee) public {... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"Governance/Niu.sol\":5883:5983  function delegate(address delegatee) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"Governance/Niu.sol\":1205:1254  mapping (address => uint32) public numCheckpoints */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"Governance/Niu.sol\":1205:1254  mapping (address => uint32) public numCheckpoints */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":4189:4295  function balanceOf(address account) external view returns (uint) {... */\n    tag_12:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n        /* \"Governance/Niu.sol\":4189:4295  function balanceOf(address account) external view returns (uint) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":8018:9203  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_13:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n        /* \"Governance/Niu.sol\":8018:9203  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":1732:1771  mapping (address => uint) public nonces */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_59:\n        /* \"Governance/Niu.sol\":1732:1771  mapping (address => uint) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":226:263  string public constant symbol = \"NIU\" */\n    tag_15:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_63:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_63)\n    tag_65:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Governance/Niu.sol\":226:263  string public constant symbol = \"NIU\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_66:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":4551:4784  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_16:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n        /* \"Governance/Niu.sol\":4551:4784  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":7377:7596  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_17:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_71:\n        /* \"Governance/Niu.sol\":7377:7596  function getCurrentVotes(address account) external view returns (uint96) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":6406:7183  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_18:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"Governance/Niu.sol\":6406:7183  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"Governance/Niu.sol\":2985:3119  function allowance(address account, address spender) external view returns (uint) {... */\n    tag_19:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n        /* \"Governance/Niu.sol\":2985:3119  function allowance(address account, address spender) external view returns (uint) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":1537:1654  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_20:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":1069:1139  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_21:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_82:\n        /* \"Governance/Niu.sol\":1069:1139  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":130:168  string public constant name = \"Niural\" */\n    tag_26:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4e697572616c0000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":3587:3993  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_33:\n        /* \"Governance/Niu.sol\":3655:3659  bool */\n      0x00\n        /* \"Governance/Niu.sol\":3671:3684  uint96 amount */\n      dup1\n        /* \"Governance/Niu.sol\":3716:3718  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Governance/Niu.sol\":3698:3707  rawAmount */\n      dup4\n        /* \"Governance/Niu.sol\":3698:3719  rawAmount == uint(-1) */\n      eq\n        /* \"Governance/Niu.sol\":3694:3862  if (rawAmount == uint(-1)) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"Governance/Niu.sol\":3751:3753  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Governance/Niu.sol\":3735:3754  amount = uint96(-1) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":3694:3862  if (rawAmount == uint(-1)) {... */\n      jump(tag_86)\n    tag_85:\n        /* \"Governance/Niu.sol\":3794:3851  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      tag_87\n        /* \"Governance/Niu.sol\":3801:3810  rawAmount */\n      dup4\n        /* \"Governance/Niu.sol\":3794:3851  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302\n      0x24\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":3794:3800  safe96 */\n      tag_88\n        /* \"Governance/Niu.sol\":3794:3851  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_87:\n        /* \"Governance/Niu.sol\":3785:3851  amount = safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":3694:3862  if (rawAmount == uint(-1)) {... */\n    tag_86:\n        /* \"Governance/Niu.sol\":3906:3912  amount */\n      dup1\n        /* \"Governance/Niu.sol\":3872:3882  allowances */\n      0x00\n        /* \"Governance/Niu.sol\":3872:3894  allowances[msg.sender] */\n      dup1\n        /* \"Governance/Niu.sol\":3883:3893  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":3872:3894  allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":3872:3903  allowances[msg.sender][spender] */\n      0x00\n        /* \"Governance/Niu.sol\":3895:3902  spender */\n      dup7\n        /* \"Governance/Niu.sol\":3872:3903  allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":3872:3912  allowances[msg.sender][spender] = amount */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":3949:3956  spender */\n      dup4\n        /* \"Governance/Niu.sol\":3928:3965  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":3937:3947  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":3928:3965  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Governance/Niu.sol\":3958:3964  amount */\n      dup4\n        /* \"Governance/Niu.sol\":3928:3965  Approval(msg.sender, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Governance/Niu.sol\":3982:3986  true */\n      0x01\n        /* \"Governance/Niu.sol\":3975:3986  return true */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":3587:3993  function approve(address spender, uint rawAmount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":419:465  uint public constant totalSupply = 10000000e18 */\n    tag_35:\n        /* \"Governance/Niu.sol\":454:465  10000000e18 */\n      0x084595161401484a000000\n        /* \"Governance/Niu.sol\":419:465  uint public constant totalSupply = 10000000e18 */\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":1324:1446  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_37:\n        /* \"Governance/Niu.sol\":1366:1446  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      0x43\n      swap2\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Governance/Niu.sol\":1324:1446  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":5085:5741  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_40:\n        /* \"Governance/Niu.sol\":5167:5171  bool */\n      0x00\n        /* \"Governance/Niu.sol\":5183:5198  address spender */\n      dup1\n        /* \"Governance/Niu.sol\":5201:5211  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":5183:5211  address spender = msg.sender */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":5221:5244  uint96 spenderAllowance */\n      0x00\n        /* \"Governance/Niu.sol\":5247:5257  allowances */\n      dup1\n        /* \"Governance/Niu.sol\":5247:5262  allowances[src] */\n      0x00\n        /* \"Governance/Niu.sol\":5258:5261  src */\n      dup8\n        /* \"Governance/Niu.sol\":5247:5262  allowances[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":5247:5271  allowances[src][spender] */\n      0x00\n        /* \"Governance/Niu.sol\":5263:5270  spender */\n      dup4\n        /* \"Governance/Niu.sol\":5247:5271  allowances[src][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":5221:5271  uint96 spenderAllowance = allowances[src][spender] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":5281:5294  uint96 amount */\n      0x00\n        /* \"Governance/Niu.sol\":5297:5354  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      tag_90\n        /* \"Governance/Niu.sol\":5304:5313  rawAmount */\n      dup6\n        /* \"Governance/Niu.sol\":5297:5354  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302\n      0x24\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":5297:5303  safe96 */\n      tag_88\n        /* \"Governance/Niu.sol\":5297:5354  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_90:\n        /* \"Governance/Niu.sol\":5281:5354  uint96 amount = safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":5380:5383  src */\n      dup7\n        /* \"Governance/Niu.sol\":5369:5383  spender != src */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":5369:5376  spender */\n      dup4\n        /* \"Governance/Niu.sol\":5369:5383  spender != src */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":5369:5417  spender != src && spenderAllowance != uint96(-1) */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"Governance/Niu.sol\":5414:5416  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Governance/Niu.sol\":5387:5417  spenderAllowance != uint96(-1) */\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":5387:5403  spenderAllowance */\n      dup3\n        /* \"Governance/Niu.sol\":5387:5417  spenderAllowance != uint96(-1) */\n      0xffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":5369:5417  spender != src && spenderAllowance != uint96(-1) */\n    tag_91:\n        /* \"Governance/Niu.sol\":5365:5670  if (spender != src && spenderAllowance != uint96(-1)) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"Governance/Niu.sol\":5433:5452  uint96 newAllowance */\n      0x00\n        /* \"Governance/Niu.sol\":5455:5550  sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\") */\n      tag_93\n        /* \"Governance/Niu.sol\":5461:5477  spenderAllowance */\n      dup4\n        /* \"Governance/Niu.sol\":5479:5485  amount */\n      dup4\n        /* \"Governance/Niu.sol\":5455:5550  sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x3c\n      dup2\n      mstore\n      0x20\n      add\n      data_286b94815ef9c969765b740f7c02d7497dec20279d87a9d16db942ad7a7e336f\n      0x3c\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":5455:5460  sub96 */\n      tag_94\n        /* \"Governance/Niu.sol\":5455:5550  sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\") */\n      jump\t// in\n    tag_93:\n        /* \"Governance/Niu.sol\":5433:5550  uint96 newAllowance = sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":5591:5603  newAllowance */\n      dup1\n        /* \"Governance/Niu.sol\":5564:5574  allowances */\n      0x00\n        /* \"Governance/Niu.sol\":5564:5579  allowances[src] */\n      dup1\n        /* \"Governance/Niu.sol\":5575:5578  src */\n      dup11\n        /* \"Governance/Niu.sol\":5564:5579  allowances[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":5564:5588  allowances[src][spender] */\n      0x00\n        /* \"Governance/Niu.sol\":5580:5587  spender */\n      dup7\n        /* \"Governance/Niu.sol\":5564:5588  allowances[src][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":5564:5603  allowances[src][spender] = newAllowance */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":5637:5644  spender */\n      dup4\n        /* \"Governance/Niu.sol\":5623:5659  Approval(src, spender, newAllowance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":5632:5635  src */\n      dup9\n        /* \"Governance/Niu.sol\":5623:5659  Approval(src, spender, newAllowance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Governance/Niu.sol\":5646:5658  newAllowance */\n      dup4\n        /* \"Governance/Niu.sol\":5623:5659  Approval(src, spender, newAllowance) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Governance/Niu.sol\":5365:5670  if (spender != src && spenderAllowance != uint96(-1)) {... */\n      pop\n    tag_92:\n        /* \"Governance/Niu.sol\":5680:5713  _transferTokens(src, dst, amount) */\n      tag_95\n        /* \"Governance/Niu.sol\":5696:5699  src */\n      dup8\n        /* \"Governance/Niu.sol\":5701:5704  dst */\n      dup8\n        /* \"Governance/Niu.sol\":5706:5712  amount */\n      dup4\n        /* \"Governance/Niu.sol\":5680:5695  _transferTokens */\n      tag_96\n        /* \"Governance/Niu.sol\":5680:5713  _transferTokens(src, dst, amount) */\n      jump\t// in\n    tag_95:\n        /* \"Governance/Niu.sol\":5730:5734  true */\n      0x01\n        /* \"Governance/Niu.sol\":5723:5734  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Governance/Niu.sol\":5085:5741  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":323:358  uint8 public constant decimals = 18 */\n    tag_42:\n        /* \"Governance/Niu.sol\":356:358  18 */\n      0x12\n        /* \"Governance/Niu.sol\":323:358  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":789:834  mapping (address => address) public delegates */\n    tag_45:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":5883:5983  function delegate(address delegatee) public {... */\n    tag_48:\n        /* \"Governance/Niu.sol\":5944:5976  _delegate(msg.sender, delegatee) */\n      tag_98\n        /* \"Governance/Niu.sol\":5954:5964  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":5966:5975  delegatee */\n      dup3\n        /* \"Governance/Niu.sol\":5944:5953  _delegate */\n      tag_99\n        /* \"Governance/Niu.sol\":5944:5976  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_98:\n        /* \"Governance/Niu.sol\":5883:5983  function delegate(address delegatee) public {... */\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":1205:1254  mapping (address => uint32) public numCheckpoints */\n    tag_51:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":4189:4295  function balanceOf(address account) external view returns (uint) {... */\n    tag_54:\n        /* \"Governance/Niu.sol\":4248:4252  uint */\n      0x00\n        /* \"Governance/Niu.sol\":4271:4279  balances */\n      0x01\n        /* \"Governance/Niu.sol\":4271:4288  balances[account] */\n      0x00\n        /* \"Governance/Niu.sol\":4280:4287  account */\n      dup4\n        /* \"Governance/Niu.sol\":4271:4288  balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":4264:4288  return balances[account] */\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":4189:4295  function balanceOf(address account) external view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":8018:9203  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_57:\n        /* \"Governance/Niu.sol\":8097:8103  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":8137:8149  block.number */\n      number\n        /* \"Governance/Niu.sol\":8123:8134  blockNumber */\n      dup3\n        /* \"Governance/Niu.sol\":8123:8149  blockNumber < block.number */\n      lt\n        /* \"Governance/Niu.sol\":8115:8192  require(blockNumber < block.number, \"Niu::getPriorVotes: not yet determined\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_23d2c3e584d2dae5a522f6448e0710df72687f4acd6e4ed038125be6ad063474\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"Governance/Niu.sol\":8203:8222  uint32 nCheckpoints */\n      0x00\n        /* \"Governance/Niu.sol\":8225:8239  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":8225:8248  numCheckpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8240:8247  account */\n      dup6\n        /* \"Governance/Niu.sol\":8225:8248  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":8203:8248  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8278:8279  0 */\n      0x00\n        /* \"Governance/Niu.sol\":8262:8274  nCheckpoints */\n      dup2\n        /* \"Governance/Niu.sol\":8262:8279  nCheckpoints == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":8258:8314  if (nCheckpoints == 0) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"Governance/Niu.sol\":8302:8303  0 */\n      0x00\n        /* \"Governance/Niu.sol\":8295:8303  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_101)\n        /* \"Governance/Niu.sol\":8258:8314  if (nCheckpoints == 0) {... */\n    tag_103:\n        /* \"Governance/Niu.sol\":8423:8434  blockNumber */\n      dup3\n        /* \"Governance/Niu.sol\":8371:8382  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":8371:8391  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8383:8390  account */\n      dup7\n        /* \"Governance/Niu.sol\":8371:8391  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8371:8409  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":8407:8408  1 */\n      0x01\n        /* \"Governance/Niu.sol\":8392:8404  nCheckpoints */\n      dup5\n        /* \"Governance/Niu.sol\":8392:8408  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":8371:8409  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8371:8419  checkpoints[account][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":8371:8434  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":8367:8512  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_104\n      jumpi\n        /* \"Governance/Niu.sol\":8457:8468  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":8457:8477  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8469:8476  account */\n      dup6\n        /* \"Governance/Niu.sol\":8457:8477  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8457:8495  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":8493:8494  1 */\n      0x01\n        /* \"Governance/Niu.sol\":8478:8490  nCheckpoints */\n      dup4\n        /* \"Governance/Niu.sol\":8478:8494  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":8457:8495  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8457:8501  checkpoints[account][nCheckpoints - 1].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":8450:8501  return checkpoints[account][nCheckpoints - 1].votes */\n      swap2\n      pop\n      pop\n      jump(tag_101)\n        /* \"Governance/Niu.sol\":8367:8512  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_104:\n        /* \"Governance/Niu.sol\":8606:8617  blockNumber */\n      dup3\n        /* \"Governance/Niu.sol\":8570:8581  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":8570:8590  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8582:8589  account */\n      dup7\n        /* \"Governance/Niu.sol\":8570:8590  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8570:8593  checkpoints[account][0] */\n      0x00\n        /* \"Governance/Niu.sol\":8591:8592  0 */\n      dup1\n        /* \"Governance/Niu.sol\":8570:8593  checkpoints[account][0] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8570:8603  checkpoints[account][0].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":8570:8617  checkpoints[account][0].fromBlock > blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":8566:8652  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"Governance/Niu.sol\":8640:8641  0 */\n      0x00\n        /* \"Governance/Niu.sol\":8633:8641  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_101)\n        /* \"Governance/Niu.sol\":8566:8652  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_105:\n        /* \"Governance/Niu.sol\":8662:8674  uint32 lower */\n      0x00\n        /* \"Governance/Niu.sol\":8677:8678  0 */\n      dup1\n        /* \"Governance/Niu.sol\":8662:8678  uint32 lower = 0 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8688:8700  uint32 upper */\n      0x00\n        /* \"Governance/Niu.sol\":8718:8719  1 */\n      0x01\n        /* \"Governance/Niu.sol\":8703:8715  nCheckpoints */\n      dup4\n        /* \"Governance/Niu.sol\":8703:8719  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":8688:8719  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8729:9147  while (upper > lower) {... */\n    tag_106:\n        /* \"Governance/Niu.sol\":8744:8749  lower */\n      dup2\n        /* \"Governance/Niu.sol\":8736:8749  upper > lower */\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":8736:8741  upper */\n      dup2\n        /* \"Governance/Niu.sol\":8736:8749  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":8729:9147  while (upper > lower) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"Governance/Niu.sol\":8765:8778  uint32 center */\n      0x00\n        /* \"Governance/Niu.sol\":8807:8808  2 */\n      0x02\n        /* \"Governance/Niu.sol\":8798:8803  lower */\n      dup4\n        /* \"Governance/Niu.sol\":8790:8795  upper */\n      dup4\n        /* \"Governance/Niu.sol\":8790:8803  upper - lower */\n      sub\n        /* \"Governance/Niu.sol\":8789:8808  (upper - lower) / 2 */\n      0xffffffff\n      and\n      dup2\n      tag_108\n      jumpi\n      invalid\n    tag_108:\n      div\n        /* \"Governance/Niu.sol\":8781:8786  upper */\n      dup3\n        /* \"Governance/Niu.sol\":8781:8808  upper - (upper - lower) / 2 */\n      sub\n        /* \"Governance/Niu.sol\":8765:8808  uint32 center = upper - (upper - lower) / 2 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8849:8869  Checkpoint memory cp */\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"Governance/Niu.sol\":8872:8883  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":8872:8892  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8884:8891  account */\n      dup10\n        /* \"Governance/Niu.sol\":8872:8892  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8872:8900  checkpoints[account][center] */\n      0x00\n        /* \"Governance/Niu.sol\":8893:8899  center */\n      dup4\n        /* \"Governance/Niu.sol\":8872:8900  checkpoints[account][center] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8849:8900  Checkpoint memory cp = checkpoints[account][center] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8934:8945  blockNumber */\n      dup7\n        /* \"Governance/Niu.sol\":8918:8920  cp */\n      dup2\n        /* \"Governance/Niu.sol\":8918:8930  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"Governance/Niu.sol\":8918:8945  cp.fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":8914:9137  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"Governance/Niu.sol\":8972:8974  cp */\n      dup1\n        /* \"Governance/Niu.sol\":8972:8980  cp.votes */\n      0x20\n      add\n      mload\n        /* \"Governance/Niu.sol\":8965:8980  return cp.votes */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_101)\n        /* \"Governance/Niu.sol\":8914:9137  if (cp.fromBlock == blockNumber) {... */\n    tag_111:\n        /* \"Governance/Niu.sol\":9020:9031  blockNumber */\n      dup7\n        /* \"Governance/Niu.sol\":9005:9007  cp */\n      dup2\n        /* \"Governance/Niu.sol\":9005:9017  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"Governance/Niu.sol\":9005:9031  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      lt\n        /* \"Governance/Niu.sol\":9001:9137  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"Governance/Niu.sol\":9059:9065  center */\n      dup2\n        /* \"Governance/Niu.sol\":9051:9065  lower = center */\n      swap4\n      pop\n        /* \"Governance/Niu.sol\":9001:9137  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_114)\n    tag_113:\n        /* \"Governance/Niu.sol\":9121:9122  1 */\n      0x01\n        /* \"Governance/Niu.sol\":9112:9118  center */\n      dup3\n        /* \"Governance/Niu.sol\":9112:9122  center - 1 */\n      sub\n        /* \"Governance/Niu.sol\":9104:9122  upper = center - 1 */\n      swap3\n      pop\n        /* \"Governance/Niu.sol\":9001:9137  if (cp.fromBlock < blockNumber) {... */\n    tag_114:\n        /* \"Governance/Niu.sol\":8729:9147  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_106)\n    tag_107:\n        /* \"Governance/Niu.sol\":9163:9174  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":9163:9183  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":9175:9182  account */\n      dup8\n        /* \"Governance/Niu.sol\":9163:9183  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":9163:9190  checkpoints[account][lower] */\n      0x00\n        /* \"Governance/Niu.sol\":9184:9189  lower */\n      dup4\n        /* \"Governance/Niu.sol\":9163:9190  checkpoints[account][lower] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":9163:9196  checkpoints[account][lower].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9156:9196  return checkpoints[account][lower].votes */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Governance/Niu.sol\":8018:9203  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_101:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":1732:1771  mapping (address => uint) public nonces */\n    tag_60:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":226:263  string public constant symbol = \"NIU\" */\n    tag_62:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4e49550000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":4551:4784  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_69:\n        /* \"Governance/Niu.sol\":4616:4620  bool */\n      0x00\n        /* \"Governance/Niu.sol\":4632:4645  uint96 amount */\n      dup1\n        /* \"Governance/Niu.sol\":4648:4706  safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\") */\n      tag_116\n        /* \"Governance/Niu.sol\":4655:4664  rawAmount */\n      dup4\n        /* \"Governance/Niu.sol\":4648:4706  safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_aa0434f77a6c4f1d00fe7ba5b4b950cbb617a74b279e346f2c71f484bda86400\n      0x25\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":4648:4654  safe96 */\n      tag_88\n        /* \"Governance/Niu.sol\":4648:4706  safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_116:\n        /* \"Governance/Niu.sol\":4632:4706  uint96 amount = safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":4716:4756  _transferTokens(msg.sender, dst, amount) */\n      tag_117\n        /* \"Governance/Niu.sol\":4732:4742  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":4744:4747  dst */\n      dup6\n        /* \"Governance/Niu.sol\":4749:4755  amount */\n      dup4\n        /* \"Governance/Niu.sol\":4716:4731  _transferTokens */\n      tag_96\n        /* \"Governance/Niu.sol\":4716:4756  _transferTokens(msg.sender, dst, amount) */\n      jump\t// in\n    tag_117:\n        /* \"Governance/Niu.sol\":4773:4777  true */\n      0x01\n        /* \"Governance/Niu.sol\":4766:4777  return true */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":4551:4784  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":7377:7596  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_72:\n        /* \"Governance/Niu.sol\":7442:7448  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":7460:7479  uint32 nCheckpoints */\n      dup1\n        /* \"Governance/Niu.sol\":7482:7496  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":7482:7505  numCheckpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":7497:7504  account */\n      dup5\n        /* \"Governance/Niu.sol\":7482:7505  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":7460:7505  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":7537:7538  0 */\n      0x00\n        /* \"Governance/Niu.sol\":7522:7534  nCheckpoints */\n      dup2\n        /* \"Governance/Niu.sol\":7522:7538  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":7522:7589  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_119\n      jumpi\n        /* \"Governance/Niu.sol\":7588:7589  0 */\n      0x00\n        /* \"Governance/Niu.sol\":7522:7589  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_120)\n    tag_119:\n        /* \"Governance/Niu.sol\":7541:7552  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":7541:7561  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":7553:7560  account */\n      dup5\n        /* \"Governance/Niu.sol\":7541:7561  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":7541:7579  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":7577:7578  1 */\n      0x01\n        /* \"Governance/Niu.sol\":7562:7574  nCheckpoints */\n      dup4\n        /* \"Governance/Niu.sol\":7562:7578  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":7541:7579  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":7541:7585  checkpoints[account][nCheckpoints - 1].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":7522:7589  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_120:\n        /* \"Governance/Niu.sol\":7515:7589  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":7377:7596  function getCurrentVotes(address account) external view returns (uint96) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":6406:7183  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_75:\n        /* \"Governance/Niu.sol\":6521:6544  bytes32 domainSeparator */\n      0x00\n        /* \"Governance/Niu.sol\":1366:1446  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      0x43\n      swap2\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Governance/Niu.sol\":6601:6605  name */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4e697572616c0000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Governance/Niu.sol\":6585:6607  keccak256(bytes(name)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Governance/Niu.sol\":6609:6621  getChainId() */\n      tag_122\n        /* \"Governance/Niu.sol\":6609:6619  getChainId */\n      tag_123\n        /* \"Governance/Niu.sol\":6609:6621  getChainId() */\n      jump\t// in\n    tag_122:\n        /* \"Governance/Niu.sol\":6631:6635  this */\n      address\n        /* \"Governance/Niu.sol\":6557:6637  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Governance/Niu.sol\":6557:6637  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      swap1\n      0x40\n      mstore\n        /* \"Governance/Niu.sol\":6547:6638  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Governance/Niu.sol\":6521:6638  bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":6648:6666  bytes32 structHash */\n      0x00\n        /* \"Governance/Niu.sol\":1583:1654  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      0x3a\n      swap2\n      codecopy\n      0x3a\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Governance/Niu.sol\":6711:6720  delegatee */\n      dup9\n        /* \"Governance/Niu.sol\":6722:6727  nonce */\n      dup9\n        /* \"Governance/Niu.sol\":6729:6735  expiry */\n      dup9\n        /* \"Governance/Niu.sol\":6679:6736  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Governance/Niu.sol\":6679:6736  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap1\n      0x40\n      mstore\n        /* \"Governance/Niu.sol\":6669:6737  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Governance/Niu.sol\":6648:6737  bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":6747:6761  bytes32 digest */\n      0x00\n        /* \"Governance/Niu.sol\":6803:6818  domainSeparator */\n      dup3\n        /* \"Governance/Niu.sol\":6820:6830  structHash */\n      dup3\n        /* \"Governance/Niu.sol\":6774:6831  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Governance/Niu.sol\":6774:6831  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      swap1\n      0x40\n      mstore\n        /* \"Governance/Niu.sol\":6764:6832  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Governance/Niu.sol\":6747:6832  bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":6842:6859  address signatory */\n      0x00\n        /* \"Governance/Niu.sol\":6862:6888  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"Governance/Niu.sol\":6872:6878  digest */\n      dup3\n        /* \"Governance/Niu.sol\":6880:6881  v */\n      dup9\n        /* \"Governance/Niu.sol\":6883:6884  r */\n      dup9\n        /* \"Governance/Niu.sol\":6886:6887  s */\n      dup9\n        /* \"Governance/Niu.sol\":6862:6888  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_124:\n        /* \"Governance/Niu.sol\":6862:6888  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"Governance/Niu.sol\":6842:6888  address signatory = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":6927:6928  0 */\n      0x00\n        /* \"Governance/Niu.sol\":6906:6929  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":6906:6915  signatory */\n      dup2\n        /* \"Governance/Niu.sol\":6906:6929  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":6898:6971  require(signatory != address(0), \"Niu::delegateBySig: invalid signature\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8a3ad0c608c33832a3ff514e5c3e57dbcd9e3501f3d02bdba4dd75e8b3694dbc\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"Governance/Niu.sol\":6998:7004  nonces */\n      0x05\n        /* \"Governance/Niu.sol\":6998:7015  nonces[signatory] */\n      0x00\n        /* \"Governance/Niu.sol\":7005:7014  signatory */\n      dup3\n        /* \"Governance/Niu.sol\":6998:7015  nonces[signatory] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":6998:7017  nonces[signatory]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"Governance/Niu.sol\":6989:6994  nonce */\n      dup10\n        /* \"Governance/Niu.sol\":6989:7017  nonce == nonces[signatory]++ */\n      eq\n        /* \"Governance/Niu.sol\":6981:7055  require(nonce == nonces[signatory]++, \"Niu::delegateBySig: invalid nonce\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_dd7149fe72a1be87be4ead6dc6a1d98fa245ff2213cc4223f269de7a7c707425\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"Governance/Niu.sol\":7080:7086  expiry */\n      dup8\n        /* \"Governance/Niu.sol\":7073:7076  now */\n      timestamp\n        /* \"Governance/Niu.sol\":7073:7086  now <= expiry */\n      gt\n      iszero\n        /* \"Governance/Niu.sol\":7065:7128  require(now <= expiry, \"Niu::delegateBySig: signature expired\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_94d278442953e8a40a7fdf141370ff55e3b6df6e750d2f5cde258c09c5a35c64\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"Governance/Niu.sol\":7145:7176  _delegate(signatory, delegatee) */\n      tag_128\n        /* \"Governance/Niu.sol\":7155:7164  signatory */\n      dup2\n        /* \"Governance/Niu.sol\":7166:7175  delegatee */\n      dup12\n        /* \"Governance/Niu.sol\":7145:7154  _delegate */\n      tag_99\n        /* \"Governance/Niu.sol\":7145:7176  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_128:\n        /* \"Governance/Niu.sol\":7138:7176  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"Governance/Niu.sol\":6406:7183  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":2985:3119  function allowance(address account, address spender) external view returns (uint) {... */\n    tag_78:\n        /* \"Governance/Niu.sol\":3061:3065  uint */\n      0x00\n        /* \"Governance/Niu.sol\":3084:3094  allowances */\n      dup1\n        /* \"Governance/Niu.sol\":3084:3103  allowances[account] */\n      0x00\n        /* \"Governance/Niu.sol\":3095:3102  account */\n      dup5\n        /* \"Governance/Niu.sol\":3084:3103  allowances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":3084:3112  allowances[account][spender] */\n      0x00\n        /* \"Governance/Niu.sol\":3104:3111  spender */\n      dup4\n        /* \"Governance/Niu.sol\":3084:3112  allowances[account][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":3077:3112  return allowances[account][spender] */\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":2985:3119  function allowance(address account, address spender) external view returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":1537:1654  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_80:\n        /* \"Governance/Niu.sol\":1583:1654  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      0x3a\n      swap2\n      codecopy\n      0x3a\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Governance/Niu.sol\":1537:1654  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":1069:1139  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_83:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"Governance/Niu.sol\":11903:12061  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_88:\n        /* \"Governance/Niu.sol\":11978:11984  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":12008:12013  2**96 */\n      0x01000000000000000000000000\n        /* \"Governance/Niu.sol\":12004:12005  n */\n      dup4\n        /* \"Governance/Niu.sol\":12004:12013  n < 2**96 */\n      lt\n        /* \"Governance/Niu.sol\":12015:12027  errorMessage */\n      dup3\n        /* \"Governance/Niu.sol\":11996:12028  require(n < 2**96, errorMessage) */\n      swap1\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_132:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_132)\n    tag_134:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Governance/Niu.sol\":11996:12028  require(n < 2**96, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_135:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n      pop\n        /* \"Governance/Niu.sol\":12052:12053  n */\n      dup3\n        /* \"Governance/Niu.sol\":12038:12054  return uint96(n) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":11903:12061  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":12257:12419  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_94:\n        /* \"Governance/Niu.sol\":12343:12349  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":12374:12375  a */\n      dup4\n        /* \"Governance/Niu.sol\":12369:12375  b <= a */\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":12369:12370  b */\n      dup4\n        /* \"Governance/Niu.sol\":12369:12375  b <= a */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"Governance/Niu.sol\":12377:12389  errorMessage */\n      dup3\n        /* \"Governance/Niu.sol\":12361:12390  require(b <= a, errorMessage) */\n      swap1\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_138:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_138)\n    tag_140:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Governance/Niu.sol\":12361:12390  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_141:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n      pop\n        /* \"Governance/Niu.sol\":12411:12412  b */\n      dup3\n        /* \"Governance/Niu.sol\":12407:12408  a */\n      dup5\n        /* \"Governance/Niu.sol\":12407:12412  a - b */\n      sub\n        /* \"Governance/Niu.sol\":12400:12412  return a - b */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":12257:12419  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":9582:10183  function _transferTokens(address src, address dst, uint96 amount) internal {... */\n    tag_96:\n        /* \"Governance/Niu.sol\":9690:9691  0 */\n      0x00\n        /* \"Governance/Niu.sol\":9675:9692  src != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9675:9678  src */\n      dup4\n        /* \"Governance/Niu.sol\":9675:9692  src != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":9667:9756  require(src != address(0), \"Niu::_transferTokens: cannot transfer from the zero address\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_146cacfb4bc260431b89ec63c777a908ad6748f2b07fb7fc90e13e19e310da71\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"Governance/Niu.sol\":9789:9790  0 */\n      0x00\n        /* \"Governance/Niu.sol\":9774:9791  dst != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9774:9777  dst */\n      dup3\n        /* \"Governance/Niu.sol\":9774:9791  dst != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":9766:9853  require(dst != address(0), \"Niu::_transferTokens: cannot transfer to the zero address\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x39\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0cc2fd9bbb55c782798aa8161c0ac56a8edb953c83dd31cc403717eed7058eb6\n      0x39\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"Governance/Niu.sol\":9880:9965  sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\") */\n      tag_145\n        /* \"Governance/Niu.sol\":9886:9894  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9886:9899  balances[src] */\n      0x00\n        /* \"Governance/Niu.sol\":9895:9898  src */\n      dup6\n        /* \"Governance/Niu.sol\":9886:9899  balances[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9901:9907  amount */\n      dup3\n        /* \"Governance/Niu.sol\":9880:9965  sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      data_692ec8c90bc6d060b4b8461e07e5e6df665fc0757847ed6b4e3f21b09d8256ca\n      0x35\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":9880:9885  sub96 */\n      tag_94\n        /* \"Governance/Niu.sol\":9880:9965  sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_145:\n        /* \"Governance/Niu.sol\":9864:9872  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9864:9877  balances[src] */\n      0x00\n        /* \"Governance/Niu.sol\":9873:9876  src */\n      dup6\n        /* \"Governance/Niu.sol\":9864:9877  balances[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":9864:9965  balances[src] = sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\") */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":9991:10070  add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\") */\n      tag_146\n        /* \"Governance/Niu.sol\":9997:10005  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9997:10010  balances[dst] */\n      0x00\n        /* \"Governance/Niu.sol\":10006:10009  dst */\n      dup5\n        /* \"Governance/Niu.sol\":9997:10010  balances[dst] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10012:10018  amount */\n      dup3\n        /* \"Governance/Niu.sol\":9991:10070  add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      data_b162a08cdd346994d7a9c03eee20f68ee11c6da5ce67892863a5b8b47f9f80cf\n      0x2f\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":9991:9996  add96 */\n      tag_147\n        /* \"Governance/Niu.sol\":9991:10070  add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\") */\n      jump\t// in\n    tag_146:\n        /* \"Governance/Niu.sol\":9975:9983  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9975:9988  balances[dst] */\n      0x00\n        /* \"Governance/Niu.sol\":9984:9987  dst */\n      dup5\n        /* \"Governance/Niu.sol\":9975:9988  balances[dst] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":9975:10070  balances[dst] = add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\") */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":10099:10102  dst */\n      dup2\n        /* \"Governance/Niu.sol\":10085:10111  Transfer(src, dst, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10094:10097  src */\n      dup4\n        /* \"Governance/Niu.sol\":10085:10111  Transfer(src, dst, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Governance/Niu.sol\":10104:10110  amount */\n      dup4\n        /* \"Governance/Niu.sol\":10085:10111  Transfer(src, dst, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Governance/Niu.sol\":10122:10176  _moveDelegates(delegates[src], delegates[dst], amount) */\n      tag_148\n        /* \"Governance/Niu.sol\":10137:10146  delegates */\n      0x02\n        /* \"Governance/Niu.sol\":10137:10151  delegates[src] */\n      0x00\n        /* \"Governance/Niu.sol\":10147:10150  src */\n      dup6\n        /* \"Governance/Niu.sol\":10137:10151  delegates[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10153:10162  delegates */\n      0x02\n        /* \"Governance/Niu.sol\":10153:10167  delegates[dst] */\n      0x00\n        /* \"Governance/Niu.sol\":10163:10166  dst */\n      dup6\n        /* \"Governance/Niu.sol\":10153:10167  delegates[dst] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10169:10175  amount */\n      dup4\n        /* \"Governance/Niu.sol\":10122:10136  _moveDelegates */\n      tag_149\n        /* \"Governance/Niu.sol\":10122:10176  _moveDelegates(delegates[src], delegates[dst], amount) */\n      jump\t// in\n    tag_148:\n        /* \"Governance/Niu.sol\":9582:10183  function _transferTokens(address src, address dst, uint96 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":9209:9576  function _delegate(address delegator, address delegatee) internal {... */\n    tag_99:\n        /* \"Governance/Niu.sol\":9285:9308  address currentDelegate */\n      0x00\n        /* \"Governance/Niu.sol\":9311:9320  delegates */\n      0x02\n        /* \"Governance/Niu.sol\":9311:9331  delegates[delegator] */\n      0x00\n        /* \"Governance/Niu.sol\":9321:9330  delegator */\n      dup5\n        /* \"Governance/Niu.sol\":9311:9331  delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9285:9331  address currentDelegate = delegates[delegator] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":9341:9364  uint96 delegatorBalance */\n      0x00\n        /* \"Governance/Niu.sol\":9367:9375  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9367:9386  balances[delegator] */\n      0x00\n        /* \"Governance/Niu.sol\":9376:9385  delegator */\n      dup6\n        /* \"Governance/Niu.sol\":9367:9386  balances[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9341:9386  uint96 delegatorBalance = balances[delegator] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":9419:9428  delegatee */\n      dup3\n        /* \"Governance/Niu.sol\":9396:9405  delegates */\n      0x02\n        /* \"Governance/Niu.sol\":9396:9416  delegates[delegator] */\n      0x00\n        /* \"Governance/Niu.sol\":9406:9415  delegator */\n      dup7\n        /* \"Governance/Niu.sol\":9396:9416  delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":9396:9428  delegates[delegator] = delegatee */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":9488:9497  delegatee */\n      dup3\n        /* \"Governance/Niu.sol\":9444:9498  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9471:9486  currentDelegate */\n      dup3\n        /* \"Governance/Niu.sol\":9444:9498  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9460:9469  delegator */\n      dup6\n        /* \"Governance/Niu.sol\":9444:9498  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Governance/Niu.sol\":9509:9569  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_151\n        /* \"Governance/Niu.sol\":9524:9539  currentDelegate */\n      dup3\n        /* \"Governance/Niu.sol\":9541:9550  delegatee */\n      dup5\n        /* \"Governance/Niu.sol\":9552:9568  delegatorBalance */\n      dup4\n        /* \"Governance/Niu.sol\":9509:9523  _moveDelegates */\n      tag_149\n        /* \"Governance/Niu.sol\":9509:9569  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_151:\n        /* \"Governance/Niu.sol\":9209:9576  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":12425:12574  function getChainId() internal pure returns (uint) {... */\n    tag_123:\n        /* \"Governance/Niu.sol\":12470:12474  uint */\n      0x00\n        /* \"Governance/Niu.sol\":12486:12501  uint256 chainId */\n      dup1\n        /* \"Governance/Niu.sol\":12533:12542  chainid() */\n      chainid\n        /* \"Governance/Niu.sol\":12522:12542  chainId := chainid() */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":12560:12567  chainId */\n      dup1\n        /* \"Governance/Niu.sol\":12553:12567  return chainId */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":12425:12574  function getChainId() internal pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Governance/Niu.sol\":12067:12251  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_147:\n        /* \"Governance/Niu.sol\":12153:12159  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":12171:12179  uint96 c */\n      dup1\n        /* \"Governance/Niu.sol\":12186:12187  b */\n      dup4\n        /* \"Governance/Niu.sol\":12182:12183  a */\n      dup6\n        /* \"Governance/Niu.sol\":12182:12187  a + b */\n      add\n        /* \"Governance/Niu.sol\":12171:12187  uint96 c = a + b */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":12210:12211  a */\n      dup5\n        /* \"Governance/Niu.sol\":12205:12211  c >= a */\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":12205:12206  c */\n      dup2\n        /* \"Governance/Niu.sol\":12205:12211  c >= a */\n      0xffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"Governance/Niu.sol\":12213:12225  errorMessage */\n      dup4\n        /* \"Governance/Niu.sol\":12197:12226  require(c >= a, errorMessage) */\n      swap1\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_155:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_157\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_155)\n    tag_157:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Governance/Niu.sol\":12197:12226  require(c >= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_158:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n      pop\n        /* \"Governance/Niu.sol\":12243:12244  c */\n      dup1\n        /* \"Governance/Niu.sol\":12236:12244  return c */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":12067:12251  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":10189:11110  function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {... */\n    tag_149:\n        /* \"Governance/Niu.sol\":10293:10299  dstRep */\n      dup2\n        /* \"Governance/Niu.sol\":10283:10299  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10283:10289  srcRep */\n      dup4\n        /* \"Governance/Niu.sol\":10283:10299  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":10283:10313  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_160\n      jumpi\n      pop\n        /* \"Governance/Niu.sol\":10312:10313  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10303:10309  amount */\n      dup2\n        /* \"Governance/Niu.sol\":10303:10313  amount > 0 */\n      0xffffffffffffffffffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":10283:10313  srcRep != dstRep && amount > 0 */\n    tag_160:\n        /* \"Governance/Niu.sol\":10279:11104  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"Governance/Niu.sol\":10351:10352  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10333:10353  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10333:10339  srcRep */\n      dup4\n        /* \"Governance/Niu.sol\":10333:10353  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":10329:10705  if (srcRep != address(0)) {... */\n      tag_162\n      jumpi\n        /* \"Governance/Niu.sol\":10373:10389  uint32 srcRepNum */\n      0x00\n        /* \"Governance/Niu.sol\":10392:10406  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":10392:10414  numCheckpoints[srcRep] */\n      0x00\n        /* \"Governance/Niu.sol\":10407:10413  srcRep */\n      dup6\n        /* \"Governance/Niu.sol\":10392:10414  numCheckpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":10373:10414  uint32 srcRepNum = numCheckpoints[srcRep] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10432:10448  uint96 srcRepOld */\n      0x00\n        /* \"Governance/Niu.sol\":10463:10464  0 */\n      dup1\n        /* \"Governance/Niu.sol\":10451:10460  srcRepNum */\n      dup3\n        /* \"Governance/Niu.sol\":10451:10464  srcRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":10451:10511  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_163\n      jumpi\n        /* \"Governance/Niu.sol\":10510:10511  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10451:10511  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_164)\n    tag_163:\n        /* \"Governance/Niu.sol\":10467:10478  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":10467:10486  checkpoints[srcRep] */\n      0x00\n        /* \"Governance/Niu.sol\":10479:10485  srcRep */\n      dup7\n        /* \"Governance/Niu.sol\":10467:10486  checkpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":10467:10501  checkpoints[srcRep][srcRepNum - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":10499:10500  1 */\n      0x01\n        /* \"Governance/Niu.sol\":10487:10496  srcRepNum */\n      dup5\n        /* \"Governance/Niu.sol\":10487:10500  srcRepNum - 1 */\n      sub\n        /* \"Governance/Niu.sol\":10467:10501  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":10467:10507  checkpoints[srcRep][srcRepNum - 1].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10451:10511  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_164:\n        /* \"Governance/Niu.sol\":10432:10511  uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10529:10545  uint96 srcRepNew */\n      0x00\n        /* \"Governance/Niu.sol\":10548:10615  sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\") */\n      tag_165\n        /* \"Governance/Niu.sol\":10554:10563  srcRepOld */\n      dup3\n        /* \"Governance/Niu.sol\":10565:10571  amount */\n      dup6\n        /* \"Governance/Niu.sol\":10548:10615  sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_3572f2e3a73d8992ffd14bbdc492a68ea3425b205fa2e411c1a12014bc6f8444\n      0x27\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":10548:10553  sub96 */\n      tag_94\n        /* \"Governance/Niu.sol\":10548:10615  sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\") */\n      jump\t// in\n    tag_165:\n        /* \"Governance/Niu.sol\":10529:10615  uint96 srcRepNew = sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10633:10690  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_166\n        /* \"Governance/Niu.sol\":10650:10656  srcRep */\n      dup7\n        /* \"Governance/Niu.sol\":10658:10667  srcRepNum */\n      dup5\n        /* \"Governance/Niu.sol\":10669:10678  srcRepOld */\n      dup5\n        /* \"Governance/Niu.sol\":10680:10689  srcRepNew */\n      dup5\n        /* \"Governance/Niu.sol\":10633:10649  _writeCheckpoint */\n      tag_167\n        /* \"Governance/Niu.sol\":10633:10690  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_166:\n        /* \"Governance/Niu.sol\":10329:10705  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_162:\n        /* \"Governance/Niu.sol\":10741:10742  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10723:10743  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10723:10729  dstRep */\n      dup3\n        /* \"Governance/Niu.sol\":10723:10743  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":10719:11094  if (dstRep != address(0)) {... */\n      tag_168\n      jumpi\n        /* \"Governance/Niu.sol\":10763:10779  uint32 dstRepNum */\n      0x00\n        /* \"Governance/Niu.sol\":10782:10796  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":10782:10804  numCheckpoints[dstRep] */\n      0x00\n        /* \"Governance/Niu.sol\":10797:10803  dstRep */\n      dup5\n        /* \"Governance/Niu.sol\":10782:10804  numCheckpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":10763:10804  uint32 dstRepNum = numCheckpoints[dstRep] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10822:10838  uint96 dstRepOld */\n      0x00\n        /* \"Governance/Niu.sol\":10853:10854  0 */\n      dup1\n        /* \"Governance/Niu.sol\":10841:10850  dstRepNum */\n      dup3\n        /* \"Governance/Niu.sol\":10841:10854  dstRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":10841:10901  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_169\n      jumpi\n        /* \"Governance/Niu.sol\":10900:10901  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10841:10901  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_170)\n    tag_169:\n        /* \"Governance/Niu.sol\":10857:10868  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":10857:10876  checkpoints[dstRep] */\n      0x00\n        /* \"Governance/Niu.sol\":10869:10875  dstRep */\n      dup6\n        /* \"Governance/Niu.sol\":10857:10876  checkpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":10857:10891  checkpoints[dstRep][dstRepNum - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":10889:10890  1 */\n      0x01\n        /* \"Governance/Niu.sol\":10877:10886  dstRepNum */\n      dup5\n        /* \"Governance/Niu.sol\":10877:10890  dstRepNum - 1 */\n      sub\n        /* \"Governance/Niu.sol\":10857:10891  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":10857:10897  checkpoints[dstRep][dstRepNum - 1].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10841:10901  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_170:\n        /* \"Governance/Niu.sol\":10822:10901  uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10919:10935  uint96 dstRepNew */\n      0x00\n        /* \"Governance/Niu.sol\":10938:11004  add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\") */\n      tag_171\n        /* \"Governance/Niu.sol\":10944:10953  dstRepOld */\n      dup3\n        /* \"Governance/Niu.sol\":10955:10961  amount */\n      dup6\n        /* \"Governance/Niu.sol\":10938:11004  add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_ba9d0177eed180b5d6a2c76dfc689b87bfd0698268c3a8db9e79a797cb697239\n      0x26\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":10938:10943  add96 */\n      tag_147\n        /* \"Governance/Niu.sol\":10938:11004  add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\") */\n      jump\t// in\n    tag_171:\n        /* \"Governance/Niu.sol\":10919:11004  uint96 dstRepNew = add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":11022:11079  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_172\n        /* \"Governance/Niu.sol\":11039:11045  dstRep */\n      dup6\n        /* \"Governance/Niu.sol\":11047:11056  dstRepNum */\n      dup5\n        /* \"Governance/Niu.sol\":11058:11067  dstRepOld */\n      dup5\n        /* \"Governance/Niu.sol\":11069:11078  dstRepNew */\n      dup5\n        /* \"Governance/Niu.sol\":11022:11038  _writeCheckpoint */\n      tag_167\n        /* \"Governance/Niu.sol\":11022:11079  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n    tag_172:\n        /* \"Governance/Niu.sol\":10719:11094  if (dstRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_168:\n        /* \"Governance/Niu.sol\":10279:11104  if (srcRep != dstRep && amount > 0) {... */\n    tag_161:\n        /* \"Governance/Niu.sol\":10189:11110  function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":11116:11733  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n    tag_167:\n        /* \"Governance/Niu.sol\":11233:11251  uint32 blockNumber */\n      0x00\n        /* \"Governance/Niu.sol\":11254:11329  safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_174\n        /* \"Governance/Niu.sol\":11261:11273  block.number */\n      number\n        /* \"Governance/Niu.sol\":11254:11329  safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x33\n      dup2\n      mstore\n      0x20\n      add\n      data_4bece53613ac1432b74b912202f09eb50cb0dcb5908cbbd578098234a3a7791c\n      0x33\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":11254:11260  safe32 */\n      tag_175\n        /* \"Governance/Niu.sol\":11254:11329  safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_174:\n        /* \"Governance/Niu.sol\":11233:11329  uint32 blockNumber = safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":11357:11358  0 */\n      0x00\n        /* \"Governance/Niu.sol\":11342:11354  nCheckpoints */\n      dup5\n        /* \"Governance/Niu.sol\":11342:11358  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":11342:11427  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"Governance/Niu.sol\":11416:11427  blockNumber */\n      dup1\n        /* \"Governance/Niu.sol\":11362:11427  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":11362:11373  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":11362:11384  checkpoints[delegatee] */\n      0x00\n        /* \"Governance/Niu.sol\":11374:11383  delegatee */\n      dup8\n        /* \"Governance/Niu.sol\":11362:11384  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11362:11402  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":11400:11401  1 */\n      0x01\n        /* \"Governance/Niu.sol\":11385:11397  nCheckpoints */\n      dup8\n        /* \"Governance/Niu.sol\":11385:11401  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":11362:11402  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11362:11412  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":11362:11427  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":11342:11427  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_176:\n        /* \"Governance/Niu.sol\":11338:11662  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"Governance/Niu.sol\":11490:11498  newVotes */\n      dup2\n        /* \"Governance/Niu.sol\":11441:11452  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":11441:11463  checkpoints[delegatee] */\n      0x00\n        /* \"Governance/Niu.sol\":11453:11462  delegatee */\n      dup8\n        /* \"Governance/Niu.sol\":11441:11463  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11441:11481  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":11479:11480  1 */\n      0x01\n        /* \"Governance/Niu.sol\":11464:11476  nCheckpoints */\n      dup8\n        /* \"Governance/Niu.sol\":11464:11480  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":11441:11481  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11441:11487  checkpoints[delegatee][nCheckpoints - 1].votes */\n      0x00\n      add\n      0x04\n        /* \"Governance/Niu.sol\":11441:11498  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":11338:11662  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_178)\n    tag_177:\n        /* \"Governance/Niu.sol\":11564:11597  Checkpoint(blockNumber, newVotes) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Governance/Niu.sol\":11575:11586  blockNumber */\n      dup3\n        /* \"Governance/Niu.sol\":11564:11597  Checkpoint(blockNumber, newVotes) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Governance/Niu.sol\":11588:11596  newVotes */\n      dup4\n        /* \"Governance/Niu.sol\":11564:11597  Checkpoint(blockNumber, newVotes) */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Governance/Niu.sol\":11525:11536  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":11525:11547  checkpoints[delegatee] */\n      0x00\n        /* \"Governance/Niu.sol\":11537:11546  delegatee */\n      dup8\n        /* \"Governance/Niu.sol\":11525:11547  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11525:11561  checkpoints[delegatee][nCheckpoints] */\n      0x00\n        /* \"Governance/Niu.sol\":11548:11560  nCheckpoints */\n      dup7\n        /* \"Governance/Niu.sol\":11525:11561  checkpoints[delegatee][nCheckpoints] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11525:11597  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x04)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Governance/Niu.sol\":11652:11653  1 */\n      0x01\n        /* \"Governance/Niu.sol\":11637:11649  nCheckpoints */\n      dup5\n        /* \"Governance/Niu.sol\":11637:11653  nCheckpoints + 1 */\n      add\n        /* \"Governance/Niu.sol\":11609:11623  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":11609:11634  numCheckpoints[delegatee] */\n      0x00\n        /* \"Governance/Niu.sol\":11624:11633  delegatee */\n      dup8\n        /* \"Governance/Niu.sol\":11609:11634  numCheckpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":11609:11653  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":11338:11662  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_178:\n        /* \"Governance/Niu.sol\":11696:11705  delegatee */\n      dup5\n        /* \"Governance/Niu.sol\":11675:11726  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n        /* \"Governance/Niu.sol\":11707:11715  oldVotes */\n      dup5\n        /* \"Governance/Niu.sol\":11717:11725  newVotes */\n      dup5\n        /* \"Governance/Niu.sol\":11675:11726  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Governance/Niu.sol\":11116:11733  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":11739:11897  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_175:\n        /* \"Governance/Niu.sol\":11814:11820  uint32 */\n      0x00\n        /* \"Governance/Niu.sol\":11844:11849  2**32 */\n      0x0100000000\n        /* \"Governance/Niu.sol\":11840:11841  n */\n      dup4\n        /* \"Governance/Niu.sol\":11840:11849  n < 2**32 */\n      lt\n        /* \"Governance/Niu.sol\":11851:11863  errorMessage */\n      dup3\n        /* \"Governance/Niu.sol\":11832:11864  require(n < 2**32, errorMessage) */\n      swap1\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_181:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_183\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_181)\n    tag_183:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Governance/Niu.sol\":11832:11864  require(n < 2**32, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_184\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_184:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n      pop\n        /* \"Governance/Niu.sol\":11888:11889  n */\n      dup3\n        /* \"Governance/Niu.sol\":11874:11890  return uint32(n) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":11739:11897  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":62:12576  contract Niu {... */\n    tag_110:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_0cc2fd9bbb55c782798aa8161c0ac56a8edb953c83dd31cc403717eed7058eb6 4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373\n    data_146cacfb4bc260431b89ec63c777a908ad6748f2b07fb7fc90e13e19e310da71 4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_23d2c3e584d2dae5a522f6448e0710df72687f4acd6e4ed038125be6ad063474 4e69753a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564\n    data_286b94815ef9c969765b740f7c02d7497dec20279d87a9d16db942ad7a7e336f 4e69753a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365\n    data_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302 4e69753a3a617070726f76653a20616d6f756e7420657863656564732039362062697473\n    data_3572f2e3a73d8992ffd14bbdc492a68ea3425b205fa2e411c1a12014bc6f8444 4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773\n    data_4bece53613ac1432b74b912202f09eb50cb0dcb5908cbbd578098234a3a7791c 4e69753a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_692ec8c90bc6d060b4b8461e07e5e6df665fc0757847ed6b4e3f21b09d8256ca 4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_8a3ad0c608c33832a3ff514e5c3e57dbcd9e3501f3d02bdba4dd75e8b3694dbc 4e69753a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265\n    data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866 454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n    data_94d278442953e8a40a7fdf141370ff55e3b6df6e750d2f5cde258c09c5a35c64 4e69753a3a64656c656761746542795369673a207369676e61747572652065787069726564\n    data_aa0434f77a6c4f1d00fe7ba5b4b950cbb617a74b279e346f2c71f484bda86400 4e69753a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473\n    data_b162a08cdd346994d7a9c03eee20f68ee11c6da5ce67892863a5b8b47f9f80cf 4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773\n    data_ba9d0177eed180b5d6a2c76dfc689b87bfd0698268c3a8db9e79a797cb697239 4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773\n    data_dd7149fe72a1be87be4ead6dc6a1d98fa245ff2213cc4223f269de7a7c707425 4e69753a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365\n    data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf 44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929\n\n    auxdata: 0xa265627a7a723158208fb384db84d484c271264494b74f4fad313f2abca56096fdaa9c9226697aa9cd64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051612bf7380380612bf78339818101604052602081101561003357600080fd5b81019080805190602001909291905050506a084595161401484a000000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6a084595161401484a0000006040518082815260200191505060405180910390a350612ab98061013e6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b4b5ea5711610071578063b4b5ea5714610638578063c3cda520146106ac578063dd62ed3e14610725578063e7a324dc1461079d578063f1127ed8146107bb57610121565b806370a0823114610421578063782d6fe1146104795780637ecebe00146104f757806395d89b411461054f578063a9059cbb146105d257610121565b806323b872dd116100f457806323b872dd1461024b578063313ce567146102d1578063587cde1e146102f55780635c19a95c146103795780636fcfff45146103bd57610121565b806306fdde0314610126578063095ea7b3146101a957806318160ddd1461020f57806320606b701461022d575b600080fd5b61012e610852565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016e578082015181840152602081019050610153565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061088b565b604051808215151515815260200191505060405180910390f35b610217610a2b565b6040518082815260200191505060405180910390f35b610235610a3a565b6040518082815260200191505060405180910390f35b6102b76004803603606081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a56565b604051808215151515815260200191505060405180910390f35b6102d9610cf6565b604051808260ff1660ff16815260200191505060405180910390f35b6103376004803603602081101561030b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cfb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103bb6004803603602081101561038f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d2e565b005b6103ff600480360360208110156103d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d3b565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6104636004803603602081101561043757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d5e565b6040518082815260200191505060405180910390f35b6104c56004803603604081101561048f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dcd565b60405180826bffffffffffffffffffffffff166bffffffffffffffffffffffff16815260200191505060405180910390f35b6105396004803603602081101561050d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111f6565b6040518082815260200191505060405180910390f35b61055761120e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561059757808201518184015260208101905061057c565b50505050905090810190601f1680156105c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61061e600480360360408110156105e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611247565b604051808215151515815260200191505060405180910390f35b61067a6004803603602081101561064e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611284565b60405180826bffffffffffffffffffffffff166bffffffffffffffffffffffff16815260200191505060405180910390f35b610723600480360360c08110156106c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611372565b005b6107876004803603604081101561073b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611723565b6040518082815260200191505060405180910390f35b6107a56117cf565b6040518082815260200191505060405180910390f35b61080d600480360360408110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff1690602001909291905050506117eb565b604051808363ffffffff1663ffffffff168152602001826bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019250505060405180910390f35b6040518060400160405280600681526020017f4e697572616c000000000000000000000000000000000000000000000000000081525081565b6000807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8314156108de577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050610903565b6109008360405180606001604052806024815260200161287060249139611844565b90505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405180826bffffffffffffffffffffffff16815260200191505060405180910390a3600191505092915050565b6a084595161401484a00000081565b6040518080612948604391396043019050604051809103902081565b60008033905060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff1690506000610b188560405180606001604052806024815260200161287060249139611844565b90508673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610b9257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff16826bffffffffffffffffffffffff1614155b15610cdd576000610bbc83836040518060600160405280603c8152602001612834603c9139611907565b9050806000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405180826bffffffffffffffffffffffff16815260200191505060405180910390a3505b610ce88787836119dd565b600193505050509392505050565b601281565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d383382611df8565b50565b60046020528060005260406000206000915054906101000a900463ffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050919050565b6000438210610e27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061280e6026913960400191505060405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff161415610e945760009150506111f0565b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611610f9657600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff169150506111f0565b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611156110175760009150506111f0565b600080905060006001830390505b8163ffffffff168163ffffffff161115611172576000600283830363ffffffff168161104d57fe5b048203905061105a61276b565b600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681525050905086816000015163ffffffff16141561114a578060200151955050505050506111f0565b86816000015163ffffffff1610156111645781935061116b565b6001820392505b5050611025565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff1693505050505b92915050565b60056020528060005260406000206000915090505481565b6040518060400160405280600381526020017f4e4955000000000000000000000000000000000000000000000000000000000081525081565b60008061126c836040518060600160405280602581526020016129b060259139611844565b90506112793385836119dd565b600191505092915050565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16116112ee57600061136a565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff165b915050919050565b6000604051808061294860439139604301905060405180910390206040518060400160405280600681526020017f4e697572616c0000000000000000000000000000000000000000000000000000815250805190602001206113d2611fb8565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060006040518080612a4b603a9139603a0190506040518091039020888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561157d573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561160f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806129236025913960400191505060405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505589146116b4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612a2a6021913960400191505060405180910390fd5b8742111561170d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061298b6025913960400191505060405180910390fd5b611717818b611df8565b50505050505050505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905092915050565b6040518080612a4b603a9139603a019050604051809103902081565b6003602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060000160049054906101000a90046bffffffffffffffffffffffff16905082565b60006c01000000000000000000000000831082906118fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118c25780820151818401526020810190506118a7565b50505050905090810190601f1680156118ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6000836bffffffffffffffffffffffff16836bffffffffffffffffffffffff16111582906119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561199557808201518184015260208101905061197a565b50505050905090810190601f1680156119c25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001806127d3603b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603981526020018061279a6039913960400191505060405180910390fd5b611b63600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff16826040518060600160405280603581526020016128ee60359139611907565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550611c4a600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff16826040518060600160405280602f81526020016129d5602f9139611fc5565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405180826bffffffffffffffffffffffff16815260200191505060405180910390a3611df3600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836120a0565b505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff16905082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4611fb28284836120a0565b50505050565b6000804690508091505090565b6000808385019050846bffffffffffffffffffffffff16816bffffffffffffffffffffffff1610158390612094576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561205957808201518184015260208101905061203e565b50505050905090810190601f1680156120865780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50809150509392505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156120ea57506000816bffffffffffffffffffffffff16115b1561239657600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612242576000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff161161218d576000612209565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff165b90506000612230828560405180606001604052806027815260200161289460279139611907565b905061223e8684848461239b565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612395576000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116122e057600061235c565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff165b905060006123838285604051806060016040528060268152602001612a0460269139611fc5565b90506123918584848461239b565b5050505b5b505050565b60006123bf436040518060600160405280603381526020016128bb603391396126b0565b905060008463ffffffff1611801561245457508063ffffffff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b156124ef5781600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160046101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550612637565b60405180604001604052808263ffffffff168152602001836bffffffffffffffffffffffff16815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060018401600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724848460405180836bffffffffffffffffffffffff168152602001826bffffffffffffffffffffffff1681526020019250505060405180910390a25050505050565b600064010000000083108290612761576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561272657808201518184015260208101905061270b565b50505050905090810190601f1680156127535780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160006bffffffffffffffffffffffff168152509056fe4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f20616464726573734e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f20616464726573734e69753a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e65644e69753a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e63654e69753a3a617070726f76653a20616d6f756e74206578636565647320393620626974734e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77734e69753a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974734e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e63654e69753a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294e69753a3a64656c656761746542795369673a207369676e617475726520657870697265644e69753a3a7472616e736665723a20616d6f756e74206578636565647320393620626974734e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f77734e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77734e69753a3a64656c656761746542795369673a20696e76616c6964206e6f6e636544656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929a265627a7a723158208fb384db84d484c271264494b74f4fad313f2abca56096fdaa9c9226697aa9cd64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2BF7 CODESIZE SUB DUP1 PUSH2 0x2BF7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH11 0x84595161401484A000000 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH11 0x84595161401484A000000 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x2AB9 DUP1 PUSH2 0x13E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x7BB JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D2 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3BD JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x153 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x539 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x597 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x57C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5C4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x723 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1372 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x787 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E697572616C0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ ISZERO PUSH2 0x8DE JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP PUSH2 0x903 JUMP JUMPDEST PUSH2 0x900 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2870 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1844 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2948 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0xB18 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2870 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1844 JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCDD JUMPI PUSH1 0x0 PUSH2 0xBBC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2834 PUSH1 0x3C SWAP2 CODECOPY PUSH2 0x1907 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0xCE8 DUP8 DUP8 DUP4 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD38 CALLER DUP3 PUSH2 0x1DF8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x280E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xE94 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x11F0 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0xF96 JUMPI PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP PUSH2 0x11F0 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1017 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1172 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x104D JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x105A PUSH2 0x276B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x114A JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x11F0 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1164 JUMPI DUP2 SWAP4 POP PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E49550000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x126C DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29B0 PUSH1 0x25 SWAP2 CODECOPY PUSH2 0x1844 JUMP JUMPDEST SWAP1 POP PUSH2 0x1279 CALLER DUP6 DUP4 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x12EE JUMPI PUSH1 0x0 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2948 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E697572616C0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13D2 PUSH2 0x1FB8 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2A4B PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x157D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2923 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A2A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x170D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x298B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1717 DUP2 DUP12 PUSH2 0x1DF8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2A4B PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH13 0x1000000000000000000000000 DUP4 LT DUP3 SWAP1 PUSH2 0x18FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18C2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18A7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18EF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO DUP3 SWAP1 PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1995 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x197A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19C2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27D3 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x279A PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B63 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28EE PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C4A PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29D5 PUSH1 0x2F SWAP2 CODECOPY PUSH2 0x1FC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1DF3 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x20A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1FB2 DUP3 DUP5 DUP4 PUSH2 0x20A0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP6 ADD SWAP1 POP DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP4 SWAP1 PUSH2 0x2094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2059 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x203E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2086 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x20EA JUMPI POP PUSH1 0x0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x2396 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2242 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x218D JUMPI PUSH1 0x0 PUSH2 0x2209 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2230 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2894 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1907 JUMP JUMPDEST SWAP1 POP PUSH2 0x223E DUP7 DUP5 DUP5 DUP5 PUSH2 0x239B JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2395 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x22E0 JUMPI PUSH1 0x0 PUSH2 0x235C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2383 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A04 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x1FC5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2391 DUP6 DUP5 DUP5 DUP5 PUSH2 0x239B JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BF NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28BB PUSH1 0x33 SWAP2 CODECOPY PUSH2 0x26B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2454 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x24EF JUMPI DUP2 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2637 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2761 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2726 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x270B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2753 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP INVALID 0x4E PUSH10 0x753A3A5F7472616E7366 PUSH6 0x72546F6B656E PUSH20 0x3A2063616E6E6F74207472616E7366657220746F KECCAK256 PUSH21 0x6865207A65726F20616464726573734E69753A3A5F PUSH21 0x72616E73666572546F6B656E733A2063616E6E6F74 KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x6573734E69753A3A6765745072696F72566F74 PUSH6 0x733A206E6F74 KECCAK256 PUSH26 0x65742064657465726D696E65644E69753A3A7472616E73666572 CHAINID PUSH19 0x6F6D3A207472616E7366657220616D6F756E74 KECCAK256 PUSH6 0x786365656473 KECCAK256 PUSH20 0x70656E64657220616C6C6F77616E63654E69753A GASPRICE PUSH2 0x7070 PUSH19 0x6F76653A20616D6F756E742065786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F6D6F7665566F PUSH21 0x65733A20766F746520616D6F756E7420756E646572 PUSH7 0x6C6F77734E6975 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F7472616E7366 PUSH6 0x72546F6B656E PUSH20 0x3A207472616E7366657220616D6F756E74206578 PUSH4 0x65656473 KECCAK256 PUSH3 0x616C61 PUSH15 0x63654E69753A3A64656C6567617465 TIMESTAMP PUSH26 0x5369673A20696E76616C6964207369676E617475726545495037 BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374294E69753A3A64 PUSH6 0x6C6567617465 TIMESTAMP PUSH26 0x5369673A207369676E617475726520657870697265644E69753A GASPRICE PUSH21 0x72616E736665723A20616D6F756E74206578636565 PUSH5 0x7320393620 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F7472616E7366 PUSH6 0x72546F6B656E PUSH20 0x3A207472616E7366657220616D6F756E74206F76 PUSH6 0x72666C6F7773 0x4E PUSH10 0x753A3A5F6D6F7665566F PUSH21 0x65733A20766F746520616D6F756E74206F76657266 PUSH13 0x6F77734E69753A3A64656C6567 PUSH2 0x7465 TIMESTAMP PUSH26 0x5369673A20696E76616C6964206E6F6E636544656C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP16 0xB3 DUP5 0xDB DUP5 0xD4 DUP5 0xC2 PUSH18 0x264494B74F4FAD313F2ABCA56096FDAA9C92 0x26 PUSH10 0x7AA9CD64736F6C634300 SDIV GT STOP ORIGIN ",
							"sourceMap": "62:12514:0:-;;;2540:149;8:9:-1;5:2;;;30:1;27;20:12;5:2;2540:149:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2540:149:0;;;;;;;;;;;;;;;;454:11;2586:8;:17;2595:7;2586:17;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;2661:7;2640:42;;2657:1;2640:42;;;454:11;2640:42;;;;;;;;;;;;;;;;;;2540:149;62:12514;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b4b5ea5711610071578063b4b5ea5714610638578063c3cda520146106ac578063dd62ed3e14610725578063e7a324dc1461079d578063f1127ed8146107bb57610121565b806370a0823114610421578063782d6fe1146104795780637ecebe00146104f757806395d89b411461054f578063a9059cbb146105d257610121565b806323b872dd116100f457806323b872dd1461024b578063313ce567146102d1578063587cde1e146102f55780635c19a95c146103795780636fcfff45146103bd57610121565b806306fdde0314610126578063095ea7b3146101a957806318160ddd1461020f57806320606b701461022d575b600080fd5b61012e610852565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016e578082015181840152602081019050610153565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061088b565b604051808215151515815260200191505060405180910390f35b610217610a2b565b6040518082815260200191505060405180910390f35b610235610a3a565b6040518082815260200191505060405180910390f35b6102b76004803603606081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a56565b604051808215151515815260200191505060405180910390f35b6102d9610cf6565b604051808260ff1660ff16815260200191505060405180910390f35b6103376004803603602081101561030b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cfb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103bb6004803603602081101561038f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d2e565b005b6103ff600480360360208110156103d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d3b565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6104636004803603602081101561043757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d5e565b6040518082815260200191505060405180910390f35b6104c56004803603604081101561048f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dcd565b60405180826bffffffffffffffffffffffff166bffffffffffffffffffffffff16815260200191505060405180910390f35b6105396004803603602081101561050d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111f6565b6040518082815260200191505060405180910390f35b61055761120e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561059757808201518184015260208101905061057c565b50505050905090810190601f1680156105c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61061e600480360360408110156105e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611247565b604051808215151515815260200191505060405180910390f35b61067a6004803603602081101561064e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611284565b60405180826bffffffffffffffffffffffff166bffffffffffffffffffffffff16815260200191505060405180910390f35b610723600480360360c08110156106c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611372565b005b6107876004803603604081101561073b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611723565b6040518082815260200191505060405180910390f35b6107a56117cf565b6040518082815260200191505060405180910390f35b61080d600480360360408110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff1690602001909291905050506117eb565b604051808363ffffffff1663ffffffff168152602001826bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019250505060405180910390f35b6040518060400160405280600681526020017f4e697572616c000000000000000000000000000000000000000000000000000081525081565b6000807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8314156108de577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050610903565b6109008360405180606001604052806024815260200161287060249139611844565b90505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405180826bffffffffffffffffffffffff16815260200191505060405180910390a3600191505092915050565b6a084595161401484a00000081565b6040518080612948604391396043019050604051809103902081565b60008033905060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff1690506000610b188560405180606001604052806024815260200161287060249139611844565b90508673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610b9257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff16826bffffffffffffffffffffffff1614155b15610cdd576000610bbc83836040518060600160405280603c8152602001612834603c9139611907565b9050806000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405180826bffffffffffffffffffffffff16815260200191505060405180910390a3505b610ce88787836119dd565b600193505050509392505050565b601281565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d383382611df8565b50565b60046020528060005260406000206000915054906101000a900463ffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050919050565b6000438210610e27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061280e6026913960400191505060405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff161415610e945760009150506111f0565b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611610f9657600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff169150506111f0565b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611156110175760009150506111f0565b600080905060006001830390505b8163ffffffff168163ffffffff161115611172576000600283830363ffffffff168161104d57fe5b048203905061105a61276b565b600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681525050905086816000015163ffffffff16141561114a578060200151955050505050506111f0565b86816000015163ffffffff1610156111645781935061116b565b6001820392505b5050611025565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff1693505050505b92915050565b60056020528060005260406000206000915090505481565b6040518060400160405280600381526020017f4e4955000000000000000000000000000000000000000000000000000000000081525081565b60008061126c836040518060600160405280602581526020016129b060259139611844565b90506112793385836119dd565b600191505092915050565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16116112ee57600061136a565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff165b915050919050565b6000604051808061294860439139604301905060405180910390206040518060400160405280600681526020017f4e697572616c0000000000000000000000000000000000000000000000000000815250805190602001206113d2611fb8565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060006040518080612a4b603a9139603a0190506040518091039020888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561157d573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561160f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806129236025913960400191505060405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505589146116b4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612a2a6021913960400191505060405180910390fd5b8742111561170d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061298b6025913960400191505060405180910390fd5b611717818b611df8565b50505050505050505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905092915050565b6040518080612a4b603a9139603a019050604051809103902081565b6003602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060000160049054906101000a90046bffffffffffffffffffffffff16905082565b60006c01000000000000000000000000831082906118fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118c25780820151818401526020810190506118a7565b50505050905090810190601f1680156118ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6000836bffffffffffffffffffffffff16836bffffffffffffffffffffffff16111582906119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561199557808201518184015260208101905061197a565b50505050905090810190601f1680156119c25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001806127d3603b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603981526020018061279a6039913960400191505060405180910390fd5b611b63600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff16826040518060600160405280603581526020016128ee60359139611907565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550611c4a600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff16826040518060600160405280602f81526020016129d5602f9139611fc5565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405180826bffffffffffffffffffffffff16815260200191505060405180910390a3611df3600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836120a0565b505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff16905082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4611fb28284836120a0565b50505050565b6000804690508091505090565b6000808385019050846bffffffffffffffffffffffff16816bffffffffffffffffffffffff1610158390612094576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561205957808201518184015260208101905061203e565b50505050905090810190601f1680156120865780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50809150509392505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156120ea57506000816bffffffffffffffffffffffff16115b1561239657600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612242576000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff161161218d576000612209565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff165b90506000612230828560405180606001604052806027815260200161289460279139611907565b905061223e8684848461239b565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612395576000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116122e057600061235c565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff165b905060006123838285604051806060016040528060268152602001612a0460269139611fc5565b90506123918584848461239b565b5050505b5b505050565b60006123bf436040518060600160405280603381526020016128bb603391396126b0565b905060008463ffffffff1611801561245457508063ffffffff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b156124ef5781600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160046101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550612637565b60405180604001604052808263ffffffff168152602001836bffffffffffffffffffffffff16815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060018401600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724848460405180836bffffffffffffffffffffffff168152602001826bffffffffffffffffffffffff1681526020019250505060405180910390a25050505050565b600064010000000083108290612761576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561272657808201518184015260208101905061270b565b50505050905090810190601f1680156127535780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160006bffffffffffffffffffffffff168152509056fe4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f20616464726573734e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f20616464726573734e69753a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e65644e69753a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e63654e69753a3a617070726f76653a20616d6f756e74206578636565647320393620626974734e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77734e69753a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974734e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e63654e69753a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294e69753a3a64656c656761746542795369673a207369676e617475726520657870697265644e69753a3a7472616e736665723a20616d6f756e74206578636565647320393620626974734e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f77734e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77734e69753a3a64656c656761746542795369673a20696e76616c6964206e6f6e636544656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929a265627a7a723158208fb384db84d484c271264494b74f4fad313f2abca56096fdaa9c9226697aa9cd64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x7BB JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D2 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3BD JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x153 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x539 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x597 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x57C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5C4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x723 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1372 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x787 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E697572616C0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ ISZERO PUSH2 0x8DE JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP PUSH2 0x903 JUMP JUMPDEST PUSH2 0x900 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2870 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1844 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2948 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0xB18 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2870 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1844 JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCDD JUMPI PUSH1 0x0 PUSH2 0xBBC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2834 PUSH1 0x3C SWAP2 CODECOPY PUSH2 0x1907 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0xCE8 DUP8 DUP8 DUP4 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD38 CALLER DUP3 PUSH2 0x1DF8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x280E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xE94 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x11F0 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0xF96 JUMPI PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP PUSH2 0x11F0 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1017 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1172 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x104D JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x105A PUSH2 0x276B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x114A JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x11F0 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1164 JUMPI DUP2 SWAP4 POP PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E49550000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x126C DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29B0 PUSH1 0x25 SWAP2 CODECOPY PUSH2 0x1844 JUMP JUMPDEST SWAP1 POP PUSH2 0x1279 CALLER DUP6 DUP4 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x12EE JUMPI PUSH1 0x0 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2948 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E697572616C0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13D2 PUSH2 0x1FB8 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2A4B PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x157D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2923 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A2A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x170D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x298B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1717 DUP2 DUP12 PUSH2 0x1DF8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2A4B PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH13 0x1000000000000000000000000 DUP4 LT DUP3 SWAP1 PUSH2 0x18FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18C2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18A7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18EF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO DUP3 SWAP1 PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1995 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x197A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19C2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27D3 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x279A PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B63 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28EE PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C4A PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29D5 PUSH1 0x2F SWAP2 CODECOPY PUSH2 0x1FC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1DF3 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x20A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1FB2 DUP3 DUP5 DUP4 PUSH2 0x20A0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP6 ADD SWAP1 POP DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP4 SWAP1 PUSH2 0x2094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2059 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x203E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2086 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x20EA JUMPI POP PUSH1 0x0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x2396 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2242 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x218D JUMPI PUSH1 0x0 PUSH2 0x2209 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2230 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2894 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1907 JUMP JUMPDEST SWAP1 POP PUSH2 0x223E DUP7 DUP5 DUP5 DUP5 PUSH2 0x239B JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2395 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x22E0 JUMPI PUSH1 0x0 PUSH2 0x235C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2383 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A04 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x1FC5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2391 DUP6 DUP5 DUP5 DUP5 PUSH2 0x239B JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BF NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28BB PUSH1 0x33 SWAP2 CODECOPY PUSH2 0x26B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2454 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x24EF JUMPI DUP2 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2637 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2761 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2726 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x270B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2753 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP INVALID 0x4E PUSH10 0x753A3A5F7472616E7366 PUSH6 0x72546F6B656E PUSH20 0x3A2063616E6E6F74207472616E7366657220746F KECCAK256 PUSH21 0x6865207A65726F20616464726573734E69753A3A5F PUSH21 0x72616E73666572546F6B656E733A2063616E6E6F74 KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x6573734E69753A3A6765745072696F72566F74 PUSH6 0x733A206E6F74 KECCAK256 PUSH26 0x65742064657465726D696E65644E69753A3A7472616E73666572 CHAINID PUSH19 0x6F6D3A207472616E7366657220616D6F756E74 KECCAK256 PUSH6 0x786365656473 KECCAK256 PUSH20 0x70656E64657220616C6C6F77616E63654E69753A GASPRICE PUSH2 0x7070 PUSH19 0x6F76653A20616D6F756E742065786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F6D6F7665566F PUSH21 0x65733A20766F746520616D6F756E7420756E646572 PUSH7 0x6C6F77734E6975 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F7472616E7366 PUSH6 0x72546F6B656E PUSH20 0x3A207472616E7366657220616D6F756E74206578 PUSH4 0x65656473 KECCAK256 PUSH3 0x616C61 PUSH15 0x63654E69753A3A64656C6567617465 TIMESTAMP PUSH26 0x5369673A20696E76616C6964207369676E617475726545495037 BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374294E69753A3A64 PUSH6 0x6C6567617465 TIMESTAMP PUSH26 0x5369673A207369676E617475726520657870697265644E69753A GASPRICE PUSH21 0x72616E736665723A20616D6F756E74206578636565 PUSH5 0x7320393620 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F7472616E7366 PUSH6 0x72546F6B656E PUSH20 0x3A207472616E7366657220616D6F756E74206F76 PUSH6 0x72666C6F7773 0x4E PUSH10 0x753A3A5F6D6F7665566F PUSH21 0x65733A20766F746520616D6F756E74206F76657266 PUSH13 0x6F77734E69753A3A64656C6567 PUSH2 0x7465 TIMESTAMP PUSH26 0x5369673A20696E76616C6964206E6F6E636544656C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP16 0xB3 DUP5 0xDB DUP5 0xD4 DUP5 0xC2 PUSH18 0x264494B74F4FAD313F2ABCA56096FDAA9C92 0x26 PUSH10 0x7AA9CD64736F6C634300 SDIV GT STOP ORIGIN ",
							"sourceMap": "62:12514:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;62:12514:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;130:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;130:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3587:406;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3587:406:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;419:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1324:122;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5085:656;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5085:656:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;323:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;789:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;789:45:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5883:100;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5883:100:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1205:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1205:49:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4189:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4189:106:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8018:1185;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8018:1185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1732:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1732:39:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;226:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;226:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4551:233;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4551:233:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7377:219;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7377:219:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6406:777;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6406:777:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2985:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2985:134:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1537:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1069:70;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1069:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;130:38;;;;;;;;;;;;;;;;;;;:::o;3587:406::-;3655:4;3671:13;3716:2;3698:9;:21;3694:168;;;3751:2;3735:19;;3694:168;;;3794:57;3801:9;3794:57;;;;;;;;;;;;;;;;;:6;:57::i;:::-;3785:66;;3694:168;3906:6;3872:10;:22;3883:10;3872:22;;;;;;;;;;;;;;;:31;3895:7;3872:31;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3949:7;3928:37;;3937:10;3928:37;;;3958:6;3928:37;;;;;;;;;;;;;;;;;;;;3982:4;3975:11;;;3587:406;;;;:::o;419:46::-;454:11;419:46;:::o;1324:122::-;1366:80;;;;;;;;;;;;;;;;;;;1324:122;:::o;5085:656::-;5167:4;5183:15;5201:10;5183:28;;5221:23;5247:10;:15;5258:3;5247:15;;;;;;;;;;;;;;;:24;5263:7;5247:24;;;;;;;;;;;;;;;;;;;;;;;;;5221:50;;5281:13;5297:57;5304:9;5297:57;;;;;;;;;;;;;;;;;:6;:57::i;:::-;5281:73;;5380:3;5369:14;;:7;:14;;;;:48;;;;;5414:2;5387:30;;:16;:30;;;;5369:48;5365:305;;;5433:19;5455:95;5461:16;5479:6;5455:95;;;;;;;;;;;;;;;;;:5;:95::i;:::-;5433:117;;5591:12;5564:10;:15;5575:3;5564:15;;;;;;;;;;;;;;;:24;5580:7;5564:24;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;5637:7;5623:36;;5632:3;5623:36;;;5646:12;5623:36;;;;;;;;;;;;;;;;;;;;5365:305;;5680:33;5696:3;5701;5706:6;5680:15;:33::i;:::-;5730:4;5723:11;;;;;5085:656;;;;;:::o;323:35::-;356:2;323:35;:::o;789:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;5883:100::-;5944:32;5954:10;5966:9;5944;:32::i;:::-;5883:100;:::o;1205:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;4189:106::-;4248:4;4271:8;:17;4280:7;4271:17;;;;;;;;;;;;;;;;;;;;;;;;;4264:24;;;;4189:106;;;:::o;8018:1185::-;8097:6;8137:12;8123:11;:26;8115:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8203:19;8225:14;:23;8240:7;8225:23;;;;;;;;;;;;;;;;;;;;;;;;;8203:45;;8278:1;8262:12;:17;;;8258:56;;;8302:1;8295:8;;;;;8258:56;8423:11;8371;:20;8383:7;8371:20;;;;;;;;;;;;;;;:38;8407:1;8392:12;:16;8371:38;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:63;;;8367:145;;8457:11;:20;8469:7;8457:20;;;;;;;;;;;;;;;:38;8493:1;8478:12;:16;8457:38;;;;;;;;;;;;;;;:44;;;;;;;;;;;;8450:51;;;;;8367:145;8606:11;8570;:20;8582:7;8570:20;;;;;;;;;;;;;;;:23;8591:1;8570:23;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;8566:86;;;8640:1;8633:8;;;;;8566:86;8662:12;8677:1;8662:16;;8688:12;8718:1;8703:12;:16;8688:31;;8729:418;8744:5;8736:13;;:5;:13;;;8729:418;;;8765:13;8807:1;8798:5;8790;:13;8789:19;;;;;;;;8781:5;:27;8765:43;;8849:20;;:::i;:::-;8872:11;:20;8884:7;8872:20;;;;;;;;;;;;;;;:28;8893:6;8872:28;;;;;;;;;;;;;;;8849:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8934:11;8918:2;:12;;;:27;;;8914:223;;;8972:2;:8;;;8965:15;;;;;;;;;8914:223;9020:11;9005:2;:12;;;:26;;;9001:136;;;9059:6;9051:14;;9001:136;;;9121:1;9112:6;:10;9104:18;;9001:136;8729:418;;;;;9163:11;:20;9175:7;9163:20;;;;;;;;;;;;;;;:27;9184:5;9163:27;;;;;;;;;;;;;;;:33;;;;;;;;;;;;9156:40;;;;;8018:1185;;;;;:::o;1732:39::-;;;;;;;;;;;;;;;;;:::o;226:37::-;;;;;;;;;;;;;;;;;;;:::o;4551:233::-;4616:4;4632:13;4648:58;4655:9;4648:58;;;;;;;;;;;;;;;;;:6;:58::i;:::-;4632:74;;4716:40;4732:10;4744:3;4749:6;4716:15;:40::i;:::-;4773:4;4766:11;;;4551:233;;;;:::o;7377:219::-;7442:6;7460:19;7482:14;:23;7497:7;7482:23;;;;;;;;;;;;;;;;;;;;;;;;;7460:45;;7537:1;7522:12;:16;;;:67;;7588:1;7522:67;;;7541:11;:20;7553:7;7541:20;;;;;;;;;;;;;;;:38;7577:1;7562:12;:16;7541:38;;;;;;;;;;;;;;;:44;;;;;;;;;;;;7522:67;7515:74;;;7377:219;;;:::o;6406:777::-;6521:23;1366:80;;;;;;;;;;;;;;;;;;;6601:4;;;;;;;;;;;;;;;;;6585:22;;;;;;6609:12;:10;:12::i;:::-;6631:4;6557:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6557:80:0;;;6547:91;;;;;;6521:117;;6648:18;1583:71;;;;;;;;;;;;;;;;;;;6711:9;6722:5;6729:6;6679:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6679:57:0;;;6669:68;;;;;;6648:89;;6747:14;6803:15;6820:10;6774:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6774:57:0;;;6764:68;;;;;;6747:85;;6842:17;6862:26;6872:6;6880:1;6883;6886;6862:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6862:26:0;;;;;;;;6842:46;;6927:1;6906:23;;:9;:23;;;;6898:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6998:6;:17;7005:9;6998:17;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;6989:5;:28;6981:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7080:6;7073:3;:13;;7065:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7145:31;7155:9;7166;7145;:31::i;:::-;7138:38;;;;6406:777;;;;;;:::o;2985:134::-;3061:4;3084:10;:19;3095:7;3084:19;;;;;;;;;;;;;;;:28;3104:7;3084:28;;;;;;;;;;;;;;;;;;;;;;;;;3077:35;;;;2985:134;;;;:::o;1537:117::-;1583:71;;;;;;;;;;;;;;;;;;;1537:117;:::o;1069:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11903:158::-;11978:6;12008:5;12004:1;:9;12015:12;11996:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11996:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12052:1;12038:16;;11903:158;;;;:::o;12257:162::-;12343:6;12374:1;12369:6;;:1;:6;;;;12377:12;12361:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12361:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12411:1;12407;:5;12400:12;;12257:162;;;;;:::o;9582:601::-;9690:1;9675:17;;:3;:17;;;;9667:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9789:1;9774:17;;:3;:17;;;;9766:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9880:85;9886:8;:13;9895:3;9886:13;;;;;;;;;;;;;;;;;;;;;;;;;9901:6;9880:85;;;;;;;;;;;;;;;;;:5;:85::i;:::-;9864:8;:13;9873:3;9864:13;;;;;;;;;;;;;;;;:101;;;;;;;;;;;;;;;;;;9991:79;9997:8;:13;10006:3;9997:13;;;;;;;;;;;;;;;;;;;;;;;;;10012:6;9991:79;;;;;;;;;;;;;;;;;:5;:79::i;:::-;9975:8;:13;9984:3;9975:13;;;;;;;;;;;;;;;;:95;;;;;;;;;;;;;;;;;;10099:3;10085:26;;10094:3;10085:26;;;10104:6;10085:26;;;;;;;;;;;;;;;;;;;;10122:54;10137:9;:14;10147:3;10137:14;;;;;;;;;;;;;;;;;;;;;;;;;10153:9;:14;10163:3;10153:14;;;;;;;;;;;;;;;;;;;;;;;;;10169:6;10122:14;:54::i;:::-;9582:601;;;:::o;9209:367::-;9285:23;9311:9;:20;9321:9;9311:20;;;;;;;;;;;;;;;;;;;;;;;;;9285:46;;9341:23;9367:8;:19;9376:9;9367:19;;;;;;;;;;;;;;;;;;;;;;;;;9341:45;;9419:9;9396;:20;9406:9;9396:20;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;9488:9;9444:54;;9471:15;9444:54;;9460:9;9444:54;;;;;;;;;;;;9509:60;9524:15;9541:9;9552:16;9509:14;:60::i;:::-;9209:367;;;;:::o;12425:149::-;12470:4;12486:15;12533:9;12522:20;;12560:7;12553:14;;;12425:149;:::o;12067:184::-;12153:6;12171:8;12186:1;12182;:5;12171:16;;12210:1;12205:6;;:1;:6;;;;12213:12;12197:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12197:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12243:1;12236:8;;;12067:184;;;;;:::o;10189:921::-;10293:6;10283:16;;:6;:16;;;;:30;;;;;10312:1;10303:6;:10;;;10283:30;10279:825;;;10351:1;10333:20;;:6;:20;;;10329:376;;10373:16;10392:14;:22;10407:6;10392:22;;;;;;;;;;;;;;;;;;;;;;;;;10373:41;;10432:16;10463:1;10451:9;:13;;;:60;;10510:1;10451:60;;;10467:11;:19;10479:6;10467:19;;;;;;;;;;;;;;;:34;10499:1;10487:9;:13;10467:34;;;;;;;;;;;;;;;:40;;;;;;;;;;;;10451:60;10432:79;;10529:16;10548:67;10554:9;10565:6;10548:67;;;;;;;;;;;;;;;;;:5;:67::i;:::-;10529:86;;10633:57;10650:6;10658:9;10669;10680;10633:16;:57::i;:::-;10329:376;;;;10741:1;10723:20;;:6;:20;;;10719:375;;10763:16;10782:14;:22;10797:6;10782:22;;;;;;;;;;;;;;;;;;;;;;;;;10763:41;;10822:16;10853:1;10841:9;:13;;;:60;;10900:1;10841:60;;;10857:11;:19;10869:6;10857:19;;;;;;;;;;;;;;;:34;10889:1;10877:9;:13;10857:34;;;;;;;;;;;;;;;:40;;;;;;;;;;;;10841:60;10822:79;;10919:16;10938:66;10944:9;10955:6;10938:66;;;;;;;;;;;;;;;;;:5;:66::i;:::-;10919:85;;11022:57;11039:6;11047:9;11058;11069;11022:16;:57::i;:::-;10719:375;;;;10279:825;10189:921;;;:::o;11116:617::-;11233:18;11254:75;11261:12;11254:75;;;;;;;;;;;;;;;;;:6;:75::i;:::-;11233:96;;11357:1;11342:12;:16;;;:85;;;;;11416:11;11362:65;;:11;:22;11374:9;11362:22;;;;;;;;;;;;;;;:40;11400:1;11385:12;:16;11362:40;;;;;;;;;;;;;;;:50;;;;;;;;;;;;:65;;;11342:85;11338:324;;;11490:8;11441:11;:22;11453:9;11441:22;;;;;;;;;;;;;;;:40;11479:1;11464:12;:16;11441:40;;;;;;;;;;;;;;;:46;;;:57;;;;;;;;;;;;;;;;;;11338:324;;;11564:33;;;;;;;;11575:11;11564:33;;;;;;11588:8;11564:33;;;;;11525:11;:22;11537:9;11525:22;;;;;;;;;;;;;;;:36;11548:12;11525:36;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11652:1;11637:12;:16;11609:14;:25;11624:9;11609:25;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;11338:324;11696:9;11675:51;;;11707:8;11717;11675:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;11116:617;;;;;:::o;11739:158::-;11814:6;11844:5;11840:1;:9;11851:12;11832:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11832:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11888:1;11874:16;;11739:158;;;;:::o;62:12514::-;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2187400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "infinite",
								"DOMAIN_TYPEHASH()": "infinite",
								"allowance(address,address)": "1429",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1261",
								"checkpoints(address,uint32)": "2369",
								"decimals()": "262",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1273",
								"getCurrentVotes(address)": "2387",
								"getPriorVotes(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1236",
								"numCheckpoints(address)": "1317",
								"symbol()": "infinite",
								"totalSupply()": "273",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint96)": "infinite",
								"_transferTokens(address,address,uint96)": "infinite",
								"_writeCheckpoint(address,uint32,uint96,uint96)": "infinite",
								"add96(uint96,uint96,string memory)": "infinite",
								"getChainId()": "35",
								"safe32(uint256,string memory)": "infinite",
								"safe96(uint256,string memory)": "infinite",
								"sub96(uint96,uint96,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 12576,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 62,
									"end": 12576,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 62,
									"end": 12576,
									"name": "MSTORE"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "POP"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "MLOAD"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "PUSHSIZE"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "CODESIZE"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "SUB"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "DUP1"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "PUSHSIZE"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "DUP4"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "CODECOPY"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "DUP2"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "DUP2"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "ADD"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "DUP2"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "ADD"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "SWAP1"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "DUP1"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "DUP1"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "MLOAD"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "SWAP1"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "ADD"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "SWAP1"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "SWAP3"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "SWAP2"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "SWAP1"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "POP"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "POP"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "POP"
								},
								{
									"begin": 454,
									"end": 465,
									"name": "PUSH",
									"value": "84595161401484A000000"
								},
								{
									"begin": 2586,
									"end": 2594,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2595,
									"end": 2602,
									"name": "DUP4"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "AND"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "AND"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "DUP2"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "MSTORE"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "ADD"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "SWAP1"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "DUP2"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "MSTORE"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "ADD"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "KECCAK256"
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "EXP"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "DUP2"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "SLOAD"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "DUP2"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "MUL"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "NOT"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "AND"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "SWAP1"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "DUP4"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "AND"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "MUL"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "OR"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "SWAP1"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "SSTORE"
								},
								{
									"begin": 2586,
									"end": 2625,
									"name": "POP"
								},
								{
									"begin": 2661,
									"end": 2668,
									"name": "DUP1"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "AND"
								},
								{
									"begin": 2657,
									"end": 2658,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "AND"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 454,
									"end": 465,
									"name": "PUSH",
									"value": "84595161401484A000000"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "MLOAD"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "DUP1"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "DUP3"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "DUP2"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "MSTORE"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "ADD"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "SWAP2"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "POP"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "POP"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "MLOAD"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "DUP1"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "SWAP2"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "SUB"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "SWAP1"
								},
								{
									"begin": 2640,
									"end": 2682,
									"name": "LOG3"
								},
								{
									"begin": 2540,
									"end": 2689,
									"name": "POP"
								},
								{
									"begin": 62,
									"end": 12576,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 12576,
									"name": "DUP1"
								},
								{
									"begin": 62,
									"end": 12576,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 12576,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 62,
									"end": 12576,
									"name": "CODECOPY"
								},
								{
									"begin": 62,
									"end": 12576,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 62,
									"end": 12576,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158208fb384db84d484c271264494b74f4fad313f2abca56096fdaa9c9226697aa9cd64736f6c63430005110032",
									".code": [
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "MSTORE"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "POP"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "LT"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "SHR"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "GT"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "GT"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "C3CDA520"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "E7A324DC"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "F1127ED8"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMP"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMP"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "GT"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "587CDE1E"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "5C19A95C"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMP"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "REVERT"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "JUMPDEST"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "JUMPDEST"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MLOAD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "ADD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP3"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SUB"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP3"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MSTORE"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP4"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MLOAD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MSTORE"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "ADD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MLOAD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "ADD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP4"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "ADD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "AND"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "ISZERO"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "JUMPI"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP3"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SUB"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MLOAD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP4"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SUB"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "EXP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SUB"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "NOT"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "AND"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MSTORE"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "ADD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "JUMPDEST"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP3"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MLOAD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SUB"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "RETURN"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "JUMPDEST"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "DUP2"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "ADD"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "AND"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "ADD"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP3"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP2"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "ADD"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP3"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP2"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "JUMPDEST"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "MLOAD"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "DUP3"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "ISZERO"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "ISZERO"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "ISZERO"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "ISZERO"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "DUP2"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "MSTORE"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "ADD"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP2"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "MLOAD"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP2"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SUB"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "RETURN"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "JUMPDEST"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "JUMPDEST"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "MLOAD"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "DUP1"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "DUP3"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "DUP2"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "MSTORE"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "ADD"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "SWAP2"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "MLOAD"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "DUP1"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "SWAP2"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "SUB"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "RETURN"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "JUMPDEST"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "JUMPDEST"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "MLOAD"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "DUP3"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "MSTORE"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "ADD"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "MLOAD"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "SUB"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "RETURN"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "JUMPDEST"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP2"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "ADD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "AND"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "ADD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP3"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP2"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "AND"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "ADD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP3"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP2"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "ADD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP3"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP2"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "JUMPDEST"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "MLOAD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP3"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "ISZERO"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "ISZERO"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "ISZERO"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "ISZERO"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP2"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "MSTORE"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "ADD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP2"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "MLOAD"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "DUP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP2"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SUB"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "RETURN"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "MLOAD"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "DUP3"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "AND"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "AND"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "DUP2"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "MSTORE"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "ADD"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "SWAP2"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "MLOAD"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "SWAP2"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "SUB"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "SWAP1"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "RETURN"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "JUMPDEST"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP2"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "ADD"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "ADD"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP3"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP2"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "JUMPDEST"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "MLOAD"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP3"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP2"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "MSTORE"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "ADD"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP2"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "MLOAD"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP2"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SUB"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "RETURN"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "JUMPDEST"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "DUP1"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "DUP2"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "ADD"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "SWAP1"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "DUP1"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "DUP1"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "AND"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "SWAP1"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "ADD"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "SWAP1"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "SWAP3"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "SWAP2"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "SWAP1"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "POP"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "POP"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "POP"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "JUMPDEST"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "STOP"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "AND"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP3"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP2"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MLOAD"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "AND"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "AND"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP2"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MLOAD"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP2"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SUB"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "RETURN"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "JUMPDEST"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "DUP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "DUP2"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "ADD"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "DUP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "DUP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "AND"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "ADD"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP3"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP2"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "POP"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "POP"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "POP"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "JUMPDEST"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "MLOAD"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "DUP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "DUP3"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "DUP2"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "MSTORE"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "ADD"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP2"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "POP"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "POP"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "MLOAD"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "DUP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP2"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SUB"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "RETURN"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "JUMPDEST"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "DUP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "DUP2"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "ADD"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "DUP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "DUP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "AND"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "ADD"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP3"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP2"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "DUP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "ADD"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP3"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP2"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "POP"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "POP"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "POP"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "JUMPDEST"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "MLOAD"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "DUP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "DUP3"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "AND"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "AND"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "DUP2"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "MSTORE"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "ADD"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP2"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "POP"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "POP"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "MLOAD"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "DUP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP2"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SUB"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP1"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "RETURN"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "JUMPDEST"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "AND"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP2"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "JUMPDEST"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "MLOAD"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP3"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "MSTORE"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP2"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "MLOAD"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP2"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SUB"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "RETURN"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP4"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP4"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "AND"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "ISZERO"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP4"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "EXP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "NOT"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "AND"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP3"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "RETURN"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "JUMPDEST"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "DUP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "DUP2"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "ADD"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "DUP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "DUP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "AND"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "ADD"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP3"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP2"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "DUP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "ADD"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP3"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP2"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "JUMPDEST"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "MLOAD"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "DUP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "DUP3"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "ISZERO"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "ISZERO"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "ISZERO"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "ISZERO"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "DUP2"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "MSTORE"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "ADD"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP2"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "MLOAD"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "DUP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP2"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SUB"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "RETURN"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "JUMPDEST"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "DUP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "DUP2"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "ADD"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "DUP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "DUP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "AND"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "ADD"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP3"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP2"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "POP"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "POP"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "POP"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "JUMPDEST"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "MLOAD"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "DUP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "DUP3"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "AND"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "AND"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "DUP2"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "MSTORE"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "ADD"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP2"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "POP"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "POP"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "MLOAD"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "DUP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP2"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SUB"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "RETURN"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "JUMPDEST"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "DUP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "DUP2"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "ADD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "DUP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "DUP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "AND"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "ADD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP3"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP2"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "DUP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "ADD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP3"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP2"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "DUP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "ADD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP3"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP2"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "DUP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "AND"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "ADD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP3"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP2"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "DUP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "ADD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP3"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP2"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "DUP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "ADD"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP3"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP2"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "JUMPDEST"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "STOP"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "JUMPDEST"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "DUP2"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "AND"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP3"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "AND"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP3"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "JUMPDEST"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "MLOAD"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "DUP3"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "DUP2"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "MSTORE"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "MLOAD"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SUB"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "RETURN"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "JUMPDEST"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "JUMPDEST"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "MLOAD"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "DUP3"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "DUP2"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "MSTORE"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "ADD"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "SWAP2"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "POP"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "POP"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "MLOAD"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "SWAP2"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "SUB"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "RETURN"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP2"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP3"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP3"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "MLOAD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP4"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP2"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "MSTORE"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP3"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP2"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "MSTORE"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP3"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "MLOAD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SUB"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "RETURN"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "JUMPDEST"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MLOAD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "ADD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MSTORE"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MSTORE"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "ADD"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "PUSH",
											"value": "4E697572616C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "MSTORE"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 168,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "JUMPDEST"
										},
										{
											"begin": 3655,
											"end": 3659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3684,
											"name": "DUP1"
										},
										{
											"begin": 3716,
											"end": 3718,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3698,
											"end": 3707,
											"name": "DUP4"
										},
										{
											"begin": 3698,
											"end": 3719,
											"name": "EQ"
										},
										{
											"begin": 3694,
											"end": 3862,
											"name": "ISZERO"
										},
										{
											"begin": 3694,
											"end": 3862,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 3694,
											"end": 3862,
											"name": "JUMPI"
										},
										{
											"begin": 3751,
											"end": 3753,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3735,
											"end": 3754,
											"name": "SWAP1"
										},
										{
											"begin": 3735,
											"end": 3754,
											"name": "POP"
										},
										{
											"begin": 3694,
											"end": 3862,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3694,
											"end": 3862,
											"name": "JUMP"
										},
										{
											"begin": 3694,
											"end": 3862,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 3694,
											"end": 3862,
											"name": "JUMPDEST"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "DUP4"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "MLOAD"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "DUP1"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "DUP1"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "DUP2"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "MSTORE"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "ADD"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "PUSH data",
											"value": "30D69E93A362E57830EE2B32181E5A9483403AF4F744004141E5032F52BB8302"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "SWAP2"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "CODECOPY"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 3794,
											"end": 3851,
											"name": "JUMPDEST"
										},
										{
											"begin": 3785,
											"end": 3851,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3851,
											"name": "POP"
										},
										{
											"begin": 3694,
											"end": 3862,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 3694,
											"end": 3862,
											"name": "JUMPDEST"
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "DUP1"
										},
										{
											"begin": 3872,
											"end": 3882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "DUP1"
										},
										{
											"begin": 3883,
											"end": 3893,
											"name": "CALLER"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "AND"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "AND"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "DUP2"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "MSTORE"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "ADD"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "SWAP1"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "DUP2"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "MSTORE"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "ADD"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3894,
											"name": "KECCAK256"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3902,
											"name": "DUP7"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "AND"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "AND"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "DUP2"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "MSTORE"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "ADD"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "SWAP1"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "DUP2"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "MSTORE"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "ADD"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "KECCAK256"
										},
										{
											"begin": 3872,
											"end": 3903,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "EXP"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "DUP2"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "SLOAD"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "DUP2"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "MUL"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "NOT"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "AND"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "SWAP1"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "DUP4"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "AND"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "MUL"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "OR"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "SWAP1"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "SSTORE"
										},
										{
											"begin": 3872,
											"end": 3912,
											"name": "POP"
										},
										{
											"begin": 3949,
											"end": 3956,
											"name": "DUP4"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "AND"
										},
										{
											"begin": 3937,
											"end": 3947,
											"name": "CALLER"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "AND"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "DUP4"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "MLOAD"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "DUP1"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "DUP3"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "AND"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "DUP2"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "MSTORE"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "ADD"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "SWAP2"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "POP"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "POP"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "MLOAD"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "DUP1"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "SWAP2"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "SUB"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "SWAP1"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "LOG3"
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3975,
											"end": 3986,
											"name": "SWAP2"
										},
										{
											"begin": 3975,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3975,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP3"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "SWAP2"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3993,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "JUMPDEST"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "PUSH",
											"value": "84595161401484A000000"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "DUP2"
										},
										{
											"begin": 419,
											"end": 465,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "JUMPDEST"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "MLOAD"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "CODECOPY"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "ADD"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "MLOAD"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SUB"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "KECCAK256"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1324,
											"end": 1446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "JUMPDEST"
										},
										{
											"begin": 5167,
											"end": 5171,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5198,
											"name": "DUP1"
										},
										{
											"begin": 5201,
											"end": 5211,
											"name": "CALLER"
										},
										{
											"begin": 5183,
											"end": 5211,
											"name": "SWAP1"
										},
										{
											"begin": 5183,
											"end": 5211,
											"name": "POP"
										},
										{
											"begin": 5221,
											"end": 5244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5257,
											"name": "DUP1"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5261,
											"name": "DUP8"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "AND"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "AND"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "DUP2"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "MSTORE"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "ADD"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "SWAP1"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "DUP2"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "MSTORE"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "ADD"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "KECCAK256"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP4"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "AND"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "AND"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "DUP2"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "MSTORE"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "ADD"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "SWAP1"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "DUP2"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "MSTORE"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "ADD"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "KECCAK256"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "SWAP1"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "SLOAD"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "SWAP1"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "EXP"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "SWAP1"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "DIV"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "AND"
										},
										{
											"begin": 5221,
											"end": 5271,
											"name": "SWAP1"
										},
										{
											"begin": 5221,
											"end": 5271,
											"name": "POP"
										},
										{
											"begin": 5281,
											"end": 5294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 5304,
											"end": 5313,
											"name": "DUP6"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "MLOAD"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "DUP1"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "ADD"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "MSTORE"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "DUP1"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "DUP2"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "MSTORE"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "ADD"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "PUSH data",
											"value": "30D69E93A362E57830EE2B32181E5A9483403AF4F744004141E5032F52BB8302"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "SWAP2"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "CODECOPY"
										},
										{
											"begin": 5297,
											"end": 5303,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "JUMPDEST"
										},
										{
											"begin": 5281,
											"end": 5354,
											"name": "SWAP1"
										},
										{
											"begin": 5281,
											"end": 5354,
											"name": "POP"
										},
										{
											"begin": 5380,
											"end": 5383,
											"name": "DUP7"
										},
										{
											"begin": 5369,
											"end": 5383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5369,
											"end": 5383,
											"name": "AND"
										},
										{
											"begin": 5369,
											"end": 5376,
											"name": "DUP4"
										},
										{
											"begin": 5369,
											"end": 5383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5369,
											"end": 5383,
											"name": "AND"
										},
										{
											"begin": 5369,
											"end": 5383,
											"name": "EQ"
										},
										{
											"begin": 5369,
											"end": 5383,
											"name": "ISZERO"
										},
										{
											"begin": 5369,
											"end": 5417,
											"name": "DUP1"
										},
										{
											"begin": 5369,
											"end": 5417,
											"name": "ISZERO"
										},
										{
											"begin": 5369,
											"end": 5417,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 5369,
											"end": 5417,
											"name": "JUMPI"
										},
										{
											"begin": 5369,
											"end": 5417,
											"name": "POP"
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5387,
											"end": 5417,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5387,
											"end": 5417,
											"name": "AND"
										},
										{
											"begin": 5387,
											"end": 5403,
											"name": "DUP3"
										},
										{
											"begin": 5387,
											"end": 5417,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5387,
											"end": 5417,
											"name": "AND"
										},
										{
											"begin": 5387,
											"end": 5417,
											"name": "EQ"
										},
										{
											"begin": 5387,
											"end": 5417,
											"name": "ISZERO"
										},
										{
											"begin": 5369,
											"end": 5417,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 5369,
											"end": 5417,
											"name": "JUMPDEST"
										},
										{
											"begin": 5365,
											"end": 5670,
											"name": "ISZERO"
										},
										{
											"begin": 5365,
											"end": 5670,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 5365,
											"end": 5670,
											"name": "JUMPI"
										},
										{
											"begin": 5433,
											"end": 5452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5461,
											"end": 5477,
											"name": "DUP4"
										},
										{
											"begin": 5479,
											"end": 5485,
											"name": "DUP4"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "MLOAD"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "DUP1"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "ADD"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "MSTORE"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "DUP1"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "DUP2"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "MSTORE"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "ADD"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "PUSH data",
											"value": "286B94815EF9C969765B740F7C02D7497DEC20279D87A9D16DB942AD7A7E336F"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "SWAP2"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "CODECOPY"
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 5455,
											"end": 5550,
											"name": "JUMPDEST"
										},
										{
											"begin": 5433,
											"end": 5550,
											"name": "SWAP1"
										},
										{
											"begin": 5433,
											"end": 5550,
											"name": "POP"
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP1"
										},
										{
											"begin": 5564,
											"end": 5574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "DUP1"
										},
										{
											"begin": 5575,
											"end": 5578,
											"name": "DUP11"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "AND"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "AND"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "DUP2"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "MSTORE"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "ADD"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "SWAP1"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "DUP2"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "MSTORE"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "ADD"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "KECCAK256"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "AND"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "AND"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "DUP2"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "MSTORE"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "ADD"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "SWAP1"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "DUP2"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "MSTORE"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "ADD"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "KECCAK256"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "EXP"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "DUP2"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "SLOAD"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "DUP2"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "MUL"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "NOT"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "AND"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "DUP4"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "AND"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "MUL"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "OR"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "SSTORE"
										},
										{
											"begin": 5564,
											"end": 5603,
											"name": "POP"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP4"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "AND"
										},
										{
											"begin": 5632,
											"end": 5635,
											"name": "DUP9"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "AND"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5646,
											"end": 5658,
											"name": "DUP4"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "MLOAD"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "DUP3"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "AND"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "DUP2"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "MSTORE"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "ADD"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "SWAP2"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "POP"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "MLOAD"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "DUP1"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "SWAP2"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "SUB"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "SWAP1"
										},
										{
											"begin": 5623,
											"end": 5659,
											"name": "LOG3"
										},
										{
											"begin": 5365,
											"end": 5670,
											"name": "POP"
										},
										{
											"begin": 5365,
											"end": 5670,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 5365,
											"end": 5670,
											"name": "JUMPDEST"
										},
										{
											"begin": 5680,
											"end": 5713,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5696,
											"end": 5699,
											"name": "DUP8"
										},
										{
											"begin": 5701,
											"end": 5704,
											"name": "DUP8"
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP4"
										},
										{
											"begin": 5680,
											"end": 5695,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5680,
											"end": 5713,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5680,
											"end": 5713,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5680,
											"end": 5713,
											"name": "JUMPDEST"
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5723,
											"end": 5734,
											"name": "SWAP4"
										},
										{
											"begin": 5723,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5723,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5723,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5723,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP4"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "SWAP3"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5741,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "DUP2"
										},
										{
											"begin": 323,
											"end": 358,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "JUMPDEST"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "MSTORE"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "MSTORE"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "KECCAK256"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP2"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SLOAD"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "EXP"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DIV"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "DUP2"
										},
										{
											"begin": 789,
											"end": 834,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "JUMPDEST"
										},
										{
											"begin": 5944,
											"end": 5976,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 5954,
											"end": 5964,
											"name": "CALLER"
										},
										{
											"begin": 5966,
											"end": 5975,
											"name": "DUP3"
										},
										{
											"begin": 5944,
											"end": 5953,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 5944,
											"end": 5976,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5944,
											"end": 5976,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 5944,
											"end": 5976,
											"name": "JUMPDEST"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "POP"
										},
										{
											"begin": 5883,
											"end": 5983,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "KECCAK256"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP2"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SLOAD"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "EXP"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DIV"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "AND"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "JUMPDEST"
										},
										{
											"begin": 4248,
											"end": 4252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4279,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4287,
											"name": "DUP4"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "AND"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "AND"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "DUP2"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "MSTORE"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "ADD"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "SWAP1"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "DUP2"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "MSTORE"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "ADD"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "KECCAK256"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "SWAP1"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "SLOAD"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "SWAP1"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "EXP"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "SWAP1"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "DIV"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4271,
											"end": 4288,
											"name": "AND"
										},
										{
											"begin": 4264,
											"end": 4288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4264,
											"end": 4288,
											"name": "AND"
										},
										{
											"begin": 4264,
											"end": 4288,
											"name": "SWAP1"
										},
										{
											"begin": 4264,
											"end": 4288,
											"name": "POP"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP2"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "SWAP1"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "POP"
										},
										{
											"begin": 4189,
											"end": 4295,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "JUMPDEST"
										},
										{
											"begin": 8097,
											"end": 8103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8149,
											"name": "NUMBER"
										},
										{
											"begin": 8123,
											"end": 8134,
											"name": "DUP3"
										},
										{
											"begin": 8123,
											"end": 8149,
											"name": "LT"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "JUMPI"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "MLOAD"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "DUP2"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "MSTORE"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "DUP1"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "DUP1"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "DUP3"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "DUP2"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "SUB"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "DUP3"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "MSTORE"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "DUP2"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "MSTORE"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "DUP1"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH data",
											"value": "23D2C3E584D2DAE5A522F6448E0710DF72687F4ACD6E4ED038125BE6AD063474"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "SWAP2"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "CODECOPY"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "SWAP2"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "POP"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "POP"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "MLOAD"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "DUP1"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "SWAP2"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "SUB"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "SWAP1"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "REVERT"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 8115,
											"end": 8192,
											"name": "JUMPDEST"
										},
										{
											"begin": 8203,
											"end": 8222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8225,
											"end": 8239,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8240,
											"end": 8247,
											"name": "DUP6"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "AND"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "AND"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "DUP2"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "MSTORE"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "ADD"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "DUP2"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "MSTORE"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "ADD"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "KECCAK256"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "SLOAD"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "EXP"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "DIV"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8225,
											"end": 8248,
											"name": "AND"
										},
										{
											"begin": 8203,
											"end": 8248,
											"name": "SWAP1"
										},
										{
											"begin": 8203,
											"end": 8248,
											"name": "POP"
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8274,
											"name": "DUP2"
										},
										{
											"begin": 8262,
											"end": 8279,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8262,
											"end": 8279,
											"name": "AND"
										},
										{
											"begin": 8262,
											"end": 8279,
											"name": "EQ"
										},
										{
											"begin": 8258,
											"end": 8314,
											"name": "ISZERO"
										},
										{
											"begin": 8258,
											"end": 8314,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 8258,
											"end": 8314,
											"name": "JUMPI"
										},
										{
											"begin": 8302,
											"end": 8303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8295,
											"end": 8303,
											"name": "SWAP2"
										},
										{
											"begin": 8295,
											"end": 8303,
											"name": "POP"
										},
										{
											"begin": 8295,
											"end": 8303,
											"name": "POP"
										},
										{
											"begin": 8295,
											"end": 8303,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8295,
											"end": 8303,
											"name": "JUMP"
										},
										{
											"begin": 8258,
											"end": 8314,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 8258,
											"end": 8314,
											"name": "JUMPDEST"
										},
										{
											"begin": 8423,
											"end": 8434,
											"name": "DUP3"
										},
										{
											"begin": 8371,
											"end": 8382,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8390,
											"name": "DUP7"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "AND"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "AND"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "DUP2"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "MSTORE"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "ADD"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "SWAP1"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "DUP2"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "MSTORE"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "ADD"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "KECCAK256"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8408,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8392,
											"end": 8404,
											"name": "DUP5"
										},
										{
											"begin": 8392,
											"end": 8408,
											"name": "SUB"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "AND"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "AND"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "DUP2"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "MSTORE"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "ADD"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "SWAP1"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "DUP2"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "MSTORE"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "ADD"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8409,
											"name": "KECCAK256"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "ADD"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "SWAP1"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "SLOAD"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "SWAP1"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "EXP"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "SWAP1"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "DIV"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8419,
											"name": "AND"
										},
										{
											"begin": 8371,
											"end": 8434,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8434,
											"name": "AND"
										},
										{
											"begin": 8371,
											"end": 8434,
											"name": "GT"
										},
										{
											"begin": 8367,
											"end": 8512,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 8367,
											"end": 8512,
											"name": "JUMPI"
										},
										{
											"begin": 8457,
											"end": 8468,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8469,
											"end": 8476,
											"name": "DUP6"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "AND"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "AND"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "DUP2"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "MSTORE"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "ADD"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "SWAP1"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "DUP2"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "MSTORE"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "ADD"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "KECCAK256"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8493,
											"end": 8494,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8478,
											"end": 8490,
											"name": "DUP4"
										},
										{
											"begin": 8478,
											"end": 8494,
											"name": "SUB"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "AND"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "AND"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "DUP2"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "MSTORE"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "ADD"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "SWAP1"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "DUP2"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "MSTORE"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "ADD"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "KECCAK256"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "ADD"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "SWAP1"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "SLOAD"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "SWAP1"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "EXP"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "SWAP1"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "DIV"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8457,
											"end": 8501,
											"name": "AND"
										},
										{
											"begin": 8450,
											"end": 8501,
											"name": "SWAP2"
										},
										{
											"begin": 8450,
											"end": 8501,
											"name": "POP"
										},
										{
											"begin": 8450,
											"end": 8501,
											"name": "POP"
										},
										{
											"begin": 8450,
											"end": 8501,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8450,
											"end": 8501,
											"name": "JUMP"
										},
										{
											"begin": 8367,
											"end": 8512,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 8367,
											"end": 8512,
											"name": "JUMPDEST"
										},
										{
											"begin": 8606,
											"end": 8617,
											"name": "DUP3"
										},
										{
											"begin": 8570,
											"end": 8581,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8582,
											"end": 8589,
											"name": "DUP7"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "AND"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "AND"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "DUP2"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "MSTORE"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "ADD"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "SWAP1"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "DUP2"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "MSTORE"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "ADD"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8590,
											"name": "KECCAK256"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8592,
											"name": "DUP1"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "AND"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "DUP2"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "MSTORE"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "ADD"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "SWAP1"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "DUP2"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "MSTORE"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "ADD"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8593,
											"name": "KECCAK256"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "ADD"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "SWAP1"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "SLOAD"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "SWAP1"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "EXP"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "SWAP1"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "DIV"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "AND"
										},
										{
											"begin": 8570,
											"end": 8617,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8570,
											"end": 8617,
											"name": "AND"
										},
										{
											"begin": 8570,
											"end": 8617,
											"name": "GT"
										},
										{
											"begin": 8566,
											"end": 8652,
											"name": "ISZERO"
										},
										{
											"begin": 8566,
											"end": 8652,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 8566,
											"end": 8652,
											"name": "JUMPI"
										},
										{
											"begin": 8640,
											"end": 8641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8633,
											"end": 8641,
											"name": "SWAP2"
										},
										{
											"begin": 8633,
											"end": 8641,
											"name": "POP"
										},
										{
											"begin": 8633,
											"end": 8641,
											"name": "POP"
										},
										{
											"begin": 8633,
											"end": 8641,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8633,
											"end": 8641,
											"name": "JUMP"
										},
										{
											"begin": 8566,
											"end": 8652,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 8566,
											"end": 8652,
											"name": "JUMPDEST"
										},
										{
											"begin": 8662,
											"end": 8674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8677,
											"end": 8678,
											"name": "DUP1"
										},
										{
											"begin": 8662,
											"end": 8678,
											"name": "SWAP1"
										},
										{
											"begin": 8662,
											"end": 8678,
											"name": "POP"
										},
										{
											"begin": 8688,
											"end": 8700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8719,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8703,
											"end": 8715,
											"name": "DUP4"
										},
										{
											"begin": 8703,
											"end": 8719,
											"name": "SUB"
										},
										{
											"begin": 8688,
											"end": 8719,
											"name": "SWAP1"
										},
										{
											"begin": 8688,
											"end": 8719,
											"name": "POP"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "JUMPDEST"
										},
										{
											"begin": 8744,
											"end": 8749,
											"name": "DUP2"
										},
										{
											"begin": 8736,
											"end": 8749,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8736,
											"end": 8749,
											"name": "AND"
										},
										{
											"begin": 8736,
											"end": 8741,
											"name": "DUP2"
										},
										{
											"begin": 8736,
											"end": 8749,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8736,
											"end": 8749,
											"name": "AND"
										},
										{
											"begin": 8736,
											"end": 8749,
											"name": "GT"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "ISZERO"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "JUMPI"
										},
										{
											"begin": 8765,
											"end": 8778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8798,
											"end": 8803,
											"name": "DUP4"
										},
										{
											"begin": 8790,
											"end": 8795,
											"name": "DUP4"
										},
										{
											"begin": 8790,
											"end": 8803,
											"name": "SUB"
										},
										{
											"begin": 8789,
											"end": 8808,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8789,
											"end": 8808,
											"name": "AND"
										},
										{
											"begin": 8789,
											"end": 8808,
											"name": "DUP2"
										},
										{
											"begin": 8789,
											"end": 8808,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 8789,
											"end": 8808,
											"name": "JUMPI"
										},
										{
											"begin": 8789,
											"end": 8808,
											"name": "INVALID"
										},
										{
											"begin": 8789,
											"end": 8808,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 8789,
											"end": 8808,
											"name": "JUMPDEST"
										},
										{
											"begin": 8789,
											"end": 8808,
											"name": "DIV"
										},
										{
											"begin": 8781,
											"end": 8786,
											"name": "DUP3"
										},
										{
											"begin": 8781,
											"end": 8808,
											"name": "SUB"
										},
										{
											"begin": 8765,
											"end": 8808,
											"name": "SWAP1"
										},
										{
											"begin": 8765,
											"end": 8808,
											"name": "POP"
										},
										{
											"begin": 8849,
											"end": 8869,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 8849,
											"end": 8869,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 8849,
											"end": 8869,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8849,
											"end": 8869,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 8849,
											"end": 8869,
											"name": "JUMPDEST"
										},
										{
											"begin": 8872,
											"end": 8883,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8884,
											"end": 8891,
											"name": "DUP10"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "AND"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "AND"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "DUP2"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "MSTORE"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "ADD"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "SWAP1"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "DUP2"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "MSTORE"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "ADD"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "KECCAK256"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8893,
											"end": 8899,
											"name": "DUP4"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "AND"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "AND"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "DUP2"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "MSTORE"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "ADD"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "SWAP1"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "DUP2"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "MSTORE"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "ADD"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8872,
											"end": 8900,
											"name": "KECCAK256"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "MLOAD"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "DUP1"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "ADD"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "MSTORE"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SWAP1"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "DUP2"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "DUP3"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "ADD"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SWAP1"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SLOAD"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SWAP1"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "EXP"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SWAP1"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "DIV"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "AND"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "AND"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "AND"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "DUP2"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "MSTORE"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "ADD"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "DUP3"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "ADD"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SWAP1"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SLOAD"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SWAP1"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "EXP"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SWAP1"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "DIV"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "AND"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "AND"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "AND"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "DUP2"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "MSTORE"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "POP"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "POP"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "SWAP1"
										},
										{
											"begin": 8849,
											"end": 8900,
											"name": "POP"
										},
										{
											"begin": 8934,
											"end": 8945,
											"name": "DUP7"
										},
										{
											"begin": 8918,
											"end": 8920,
											"name": "DUP2"
										},
										{
											"begin": 8918,
											"end": 8930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8918,
											"end": 8930,
											"name": "ADD"
										},
										{
											"begin": 8918,
											"end": 8930,
											"name": "MLOAD"
										},
										{
											"begin": 8918,
											"end": 8945,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8918,
											"end": 8945,
											"name": "AND"
										},
										{
											"begin": 8918,
											"end": 8945,
											"name": "EQ"
										},
										{
											"begin": 8914,
											"end": 9137,
											"name": "ISZERO"
										},
										{
											"begin": 8914,
											"end": 9137,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 8914,
											"end": 9137,
											"name": "JUMPI"
										},
										{
											"begin": 8972,
											"end": 8974,
											"name": "DUP1"
										},
										{
											"begin": 8972,
											"end": 8980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8972,
											"end": 8980,
											"name": "ADD"
										},
										{
											"begin": 8972,
											"end": 8980,
											"name": "MLOAD"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "SWAP6"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "POP"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "POP"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "POP"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "POP"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "POP"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "POP"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "JUMP"
										},
										{
											"begin": 8914,
											"end": 9137,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 8914,
											"end": 9137,
											"name": "JUMPDEST"
										},
										{
											"begin": 9020,
											"end": 9031,
											"name": "DUP7"
										},
										{
											"begin": 9005,
											"end": 9007,
											"name": "DUP2"
										},
										{
											"begin": 9005,
											"end": 9017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9005,
											"end": 9017,
											"name": "ADD"
										},
										{
											"begin": 9005,
											"end": 9017,
											"name": "MLOAD"
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "AND"
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "LT"
										},
										{
											"begin": 9001,
											"end": 9137,
											"name": "ISZERO"
										},
										{
											"begin": 9001,
											"end": 9137,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 9001,
											"end": 9137,
											"name": "JUMPI"
										},
										{
											"begin": 9059,
											"end": 9065,
											"name": "DUP2"
										},
										{
											"begin": 9051,
											"end": 9065,
											"name": "SWAP4"
										},
										{
											"begin": 9051,
											"end": 9065,
											"name": "POP"
										},
										{
											"begin": 9001,
											"end": 9137,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 9001,
											"end": 9137,
											"name": "JUMP"
										},
										{
											"begin": 9001,
											"end": 9137,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 9001,
											"end": 9137,
											"name": "JUMPDEST"
										},
										{
											"begin": 9121,
											"end": 9122,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP3"
										},
										{
											"begin": 9112,
											"end": 9122,
											"name": "SUB"
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "SWAP3"
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "POP"
										},
										{
											"begin": 9001,
											"end": 9137,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 9001,
											"end": 9137,
											"name": "JUMPDEST"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "POP"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "POP"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "JUMP"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 8729,
											"end": 9147,
											"name": "JUMPDEST"
										},
										{
											"begin": 9163,
											"end": 9174,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9175,
											"end": 9182,
											"name": "DUP8"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "AND"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "AND"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "DUP2"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "MSTORE"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "ADD"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "SWAP1"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "DUP2"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "MSTORE"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "ADD"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "KECCAK256"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9189,
											"name": "DUP4"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "AND"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "AND"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "DUP2"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "MSTORE"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "ADD"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "SWAP1"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "DUP2"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "MSTORE"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "ADD"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "KECCAK256"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "ADD"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "SWAP1"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "SLOAD"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "SWAP1"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "EXP"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "SWAP1"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "DIV"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9163,
											"end": 9196,
											"name": "AND"
										},
										{
											"begin": 9156,
											"end": 9196,
											"name": "SWAP4"
										},
										{
											"begin": 9156,
											"end": 9196,
											"name": "POP"
										},
										{
											"begin": 9156,
											"end": 9196,
											"name": "POP"
										},
										{
											"begin": 9156,
											"end": 9196,
											"name": "POP"
										},
										{
											"begin": 9156,
											"end": 9196,
											"name": "POP"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "JUMPDEST"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP3"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "SWAP2"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "POP"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "POP"
										},
										{
											"begin": 8018,
											"end": 9203,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "JUMPDEST"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "MSTORE"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "MSTORE"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "KECCAK256"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP2"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SLOAD"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "PUSH",
											"value": "4E49550000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 263,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "JUMPDEST"
										},
										{
											"begin": 4616,
											"end": 4620,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4645,
											"name": "DUP1"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4655,
											"end": 4664,
											"name": "DUP4"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "MLOAD"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "DUP1"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "DUP2"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "MSTORE"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "ADD"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "PUSH data",
											"value": "AA0434F77A6C4F1D00FE7BA5B4B950CBB617A74B279E346F2C71F484BDA86400"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "SWAP2"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "CODECOPY"
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4648,
											"end": 4706,
											"name": "JUMPDEST"
										},
										{
											"begin": 4632,
											"end": 4706,
											"name": "SWAP1"
										},
										{
											"begin": 4632,
											"end": 4706,
											"name": "POP"
										},
										{
											"begin": 4716,
											"end": 4756,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 4732,
											"end": 4742,
											"name": "CALLER"
										},
										{
											"begin": 4744,
											"end": 4747,
											"name": "DUP6"
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "DUP4"
										},
										{
											"begin": 4716,
											"end": 4731,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 4716,
											"end": 4756,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4716,
											"end": 4756,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 4716,
											"end": 4756,
											"name": "JUMPDEST"
										},
										{
											"begin": 4773,
											"end": 4777,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4766,
											"end": 4777,
											"name": "SWAP2"
										},
										{
											"begin": 4766,
											"end": 4777,
											"name": "POP"
										},
										{
											"begin": 4766,
											"end": 4777,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP3"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "SWAP2"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "POP"
										},
										{
											"begin": 4551,
											"end": 4784,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "JUMPDEST"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7479,
											"name": "DUP1"
										},
										{
											"begin": 7482,
											"end": 7496,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7497,
											"end": 7504,
											"name": "DUP5"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "AND"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "AND"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "DUP2"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "MSTORE"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "ADD"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "SWAP1"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "DUP2"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "MSTORE"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "ADD"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "KECCAK256"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "SWAP1"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "SLOAD"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "SWAP1"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "EXP"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "SWAP1"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "DIV"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7482,
											"end": 7505,
											"name": "AND"
										},
										{
											"begin": 7460,
											"end": 7505,
											"name": "SWAP1"
										},
										{
											"begin": 7460,
											"end": 7505,
											"name": "POP"
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7534,
											"name": "DUP2"
										},
										{
											"begin": 7522,
											"end": 7538,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7522,
											"end": 7538,
											"name": "AND"
										},
										{
											"begin": 7522,
											"end": 7538,
											"name": "GT"
										},
										{
											"begin": 7522,
											"end": 7589,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 7522,
											"end": 7589,
											"name": "JUMPI"
										},
										{
											"begin": 7588,
											"end": 7589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7589,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 7522,
											"end": 7589,
											"name": "JUMP"
										},
										{
											"begin": 7522,
											"end": 7589,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 7522,
											"end": 7589,
											"name": "JUMPDEST"
										},
										{
											"begin": 7541,
											"end": 7552,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7560,
											"name": "DUP5"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "AND"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "AND"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "DUP2"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "MSTORE"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "ADD"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "SWAP1"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "DUP2"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "MSTORE"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "ADD"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7561,
											"name": "KECCAK256"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7578,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7562,
											"end": 7574,
											"name": "DUP4"
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "SUB"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "AND"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "AND"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "DUP2"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "MSTORE"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "ADD"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "SWAP1"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "DUP2"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "MSTORE"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "ADD"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7579,
											"name": "KECCAK256"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "ADD"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "SWAP1"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "SLOAD"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "SWAP1"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "EXP"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "SWAP1"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "DIV"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7541,
											"end": 7585,
											"name": "AND"
										},
										{
											"begin": 7522,
											"end": 7589,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 7522,
											"end": 7589,
											"name": "JUMPDEST"
										},
										{
											"begin": 7515,
											"end": 7589,
											"name": "SWAP2"
										},
										{
											"begin": 7515,
											"end": 7589,
											"name": "POP"
										},
										{
											"begin": 7515,
											"end": 7589,
											"name": "POP"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP2"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "SWAP1"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "POP"
										},
										{
											"begin": 7377,
											"end": 7596,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "JUMPDEST"
										},
										{
											"begin": 6521,
											"end": 6544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "MLOAD"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "CODECOPY"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "ADD"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "MLOAD"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SUB"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1446,
											"name": "KECCAK256"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "MLOAD"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "DUP1"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "ADD"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "MSTORE"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "DUP1"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "DUP2"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "MSTORE"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "ADD"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "PUSH",
											"value": "4E697572616C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "DUP2"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "MSTORE"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "POP"
										},
										{
											"begin": 6585,
											"end": 6607,
											"name": "DUP1"
										},
										{
											"begin": 6585,
											"end": 6607,
											"name": "MLOAD"
										},
										{
											"begin": 6585,
											"end": 6607,
											"name": "SWAP1"
										},
										{
											"begin": 6585,
											"end": 6607,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6607,
											"name": "ADD"
										},
										{
											"begin": 6585,
											"end": 6607,
											"name": "KECCAK256"
										},
										{
											"begin": 6609,
											"end": 6621,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 6609,
											"end": 6619,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 6609,
											"end": 6621,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6609,
											"end": 6621,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 6609,
											"end": 6621,
											"name": "JUMPDEST"
										},
										{
											"begin": 6631,
											"end": 6635,
											"name": "ADDRESS"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "MLOAD"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "ADD"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "DUP1"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "DUP6"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "DUP2"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "MSTORE"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "ADD"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "DUP5"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "DUP2"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "MSTORE"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "ADD"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "DUP4"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "DUP2"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "MSTORE"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "ADD"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "DUP3"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "AND"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "AND"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "DUP2"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "MSTORE"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "ADD"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "SWAP5"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "POP"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "POP"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "POP"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "POP"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "POP"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "SWAP1"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6637,
											"name": "MSTORE"
										},
										{
											"begin": 6547,
											"end": 6638,
											"name": "DUP1"
										},
										{
											"begin": 6547,
											"end": 6638,
											"name": "MLOAD"
										},
										{
											"begin": 6547,
											"end": 6638,
											"name": "SWAP1"
										},
										{
											"begin": 6547,
											"end": 6638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6547,
											"end": 6638,
											"name": "ADD"
										},
										{
											"begin": 6547,
											"end": 6638,
											"name": "KECCAK256"
										},
										{
											"begin": 6521,
											"end": 6638,
											"name": "SWAP1"
										},
										{
											"begin": 6521,
											"end": 6638,
											"name": "POP"
										},
										{
											"begin": 6648,
											"end": 6666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "MLOAD"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SWAP2"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "CODECOPY"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "ADD"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "POP"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "MLOAD"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SWAP2"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SUB"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "KECCAK256"
										},
										{
											"begin": 6711,
											"end": 6720,
											"name": "DUP9"
										},
										{
											"begin": 6722,
											"end": 6727,
											"name": "DUP9"
										},
										{
											"begin": 6729,
											"end": 6735,
											"name": "DUP9"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "MLOAD"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "ADD"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "DUP1"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "DUP6"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "DUP2"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "MSTORE"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "ADD"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "DUP5"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "AND"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "AND"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "DUP2"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "MSTORE"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "ADD"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "DUP4"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "DUP2"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "MSTORE"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "ADD"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "DUP3"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "DUP2"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "MSTORE"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "ADD"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "SWAP5"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "POP"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "POP"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "POP"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "POP"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "POP"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "SWAP1"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6679,
											"end": 6736,
											"name": "MSTORE"
										},
										{
											"begin": 6669,
											"end": 6737,
											"name": "DUP1"
										},
										{
											"begin": 6669,
											"end": 6737,
											"name": "MLOAD"
										},
										{
											"begin": 6669,
											"end": 6737,
											"name": "SWAP1"
										},
										{
											"begin": 6669,
											"end": 6737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6737,
											"name": "ADD"
										},
										{
											"begin": 6669,
											"end": 6737,
											"name": "KECCAK256"
										},
										{
											"begin": 6648,
											"end": 6737,
											"name": "SWAP1"
										},
										{
											"begin": 6648,
											"end": 6737,
											"name": "POP"
										},
										{
											"begin": 6747,
											"end": 6761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6818,
											"name": "DUP3"
										},
										{
											"begin": 6820,
											"end": 6830,
											"name": "DUP3"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "MLOAD"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "ADD"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "DUP1"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "DUP1"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "DUP2"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "MSTORE"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "POP"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "ADD"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "DUP4"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "DUP2"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "MSTORE"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "ADD"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "DUP3"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "DUP2"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "MSTORE"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "ADD"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "SWAP3"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "POP"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "POP"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "POP"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "SWAP1"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6774,
											"end": 6831,
											"name": "MSTORE"
										},
										{
											"begin": 6764,
											"end": 6832,
											"name": "DUP1"
										},
										{
											"begin": 6764,
											"end": 6832,
											"name": "MLOAD"
										},
										{
											"begin": 6764,
											"end": 6832,
											"name": "SWAP1"
										},
										{
											"begin": 6764,
											"end": 6832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6764,
											"end": 6832,
											"name": "ADD"
										},
										{
											"begin": 6764,
											"end": 6832,
											"name": "KECCAK256"
										},
										{
											"begin": 6747,
											"end": 6832,
											"name": "SWAP1"
										},
										{
											"begin": 6747,
											"end": 6832,
											"name": "POP"
										},
										{
											"begin": 6842,
											"end": 6859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6872,
											"end": 6878,
											"name": "DUP3"
										},
										{
											"begin": 6880,
											"end": 6881,
											"name": "DUP9"
										},
										{
											"begin": 6883,
											"end": 6884,
											"name": "DUP9"
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "DUP9"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MLOAD"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP2"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MSTORE"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "ADD"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MSTORE"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MLOAD"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP1"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP6"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP2"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MSTORE"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "ADD"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP5"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "AND"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "AND"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP2"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MSTORE"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "ADD"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP4"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP2"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MSTORE"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "ADD"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP3"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP2"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MSTORE"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "ADD"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "SWAP5"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MLOAD"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP2"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "SUB"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "SWAP1"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP1"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP5"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "SUB"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "SWAP1"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "DUP6"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "GAS"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "STATICCALL"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "POP"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MLOAD"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "SUB"
										},
										{
											"begin": 6862,
											"end": 6888,
											"name": "MLOAD"
										},
										{
											"begin": 6842,
											"end": 6888,
											"name": "SWAP1"
										},
										{
											"begin": 6842,
											"end": 6888,
											"name": "POP"
										},
										{
											"begin": 6927,
											"end": 6928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6929,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6929,
											"name": "AND"
										},
										{
											"begin": 6906,
											"end": 6915,
											"name": "DUP2"
										},
										{
											"begin": 6906,
											"end": 6929,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6929,
											"name": "AND"
										},
										{
											"begin": 6906,
											"end": 6929,
											"name": "EQ"
										},
										{
											"begin": 6906,
											"end": 6929,
											"name": "ISZERO"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "JUMPI"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "MLOAD"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "DUP2"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "MSTORE"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "ADD"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "DUP1"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "DUP1"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "ADD"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "DUP3"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "DUP2"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "SUB"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "DUP3"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "MSTORE"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "DUP2"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "MSTORE"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "ADD"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "DUP1"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH data",
											"value": "8A3AD0C608C33832A3FF514E5C3E57DBCD9E3501F3D02BDBA4DD75E8B3694DBC"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "SWAP2"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "CODECOPY"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "ADD"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "SWAP2"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "POP"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "POP"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "MLOAD"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "DUP1"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "SWAP2"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "SUB"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "SWAP1"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "REVERT"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 6898,
											"end": 6971,
											"name": "JUMPDEST"
										},
										{
											"begin": 6998,
											"end": 7004,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7014,
											"name": "DUP3"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "AND"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "AND"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "DUP2"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "MSTORE"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "ADD"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "SWAP1"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "DUP2"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "MSTORE"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "ADD"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "KECCAK256"
										},
										{
											"begin": 6998,
											"end": 7015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "DUP2"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "SLOAD"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "DUP1"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "SWAP3"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "SWAP2"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "SWAP1"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "ADD"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "SWAP2"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "SWAP1"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "POP"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "SSTORE"
										},
										{
											"begin": 6989,
											"end": 6994,
											"name": "DUP10"
										},
										{
											"begin": 6989,
											"end": 7017,
											"name": "EQ"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "JUMPI"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "MLOAD"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "DUP2"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "MSTORE"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "ADD"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "DUP1"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "DUP1"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "ADD"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "DUP3"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "DUP2"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "SUB"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "DUP3"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "MSTORE"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "DUP2"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "MSTORE"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "ADD"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "DUP1"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH data",
											"value": "DD7149FE72A1BE87BE4EAD6DC6A1D98FA245FF2213CC4223F269DE7A7C707425"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "SWAP2"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "CODECOPY"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "ADD"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "SWAP2"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "POP"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "POP"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "MLOAD"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "DUP1"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "SWAP2"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "SUB"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "SWAP1"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "REVERT"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 6981,
											"end": 7055,
											"name": "JUMPDEST"
										},
										{
											"begin": 7080,
											"end": 7086,
											"name": "DUP8"
										},
										{
											"begin": 7073,
											"end": 7076,
											"name": "TIMESTAMP"
										},
										{
											"begin": 7073,
											"end": 7086,
											"name": "GT"
										},
										{
											"begin": 7073,
											"end": 7086,
											"name": "ISZERO"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "JUMPI"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "MLOAD"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "DUP2"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "MSTORE"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "ADD"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "DUP1"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "DUP1"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "ADD"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "DUP3"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "DUP2"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "SUB"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "DUP3"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "MSTORE"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "DUP2"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "MSTORE"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "ADD"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "DUP1"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH data",
											"value": "94D278442953E8A40A7FDF141370FF55E3B6DF6E750D2F5CDE258C09C5A35C64"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "SWAP2"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "CODECOPY"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "ADD"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "SWAP2"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "POP"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "POP"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "MLOAD"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "DUP1"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "SWAP2"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "SUB"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "SWAP1"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "REVERT"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 7065,
											"end": 7128,
											"name": "JUMPDEST"
										},
										{
											"begin": 7145,
											"end": 7176,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 7155,
											"end": 7164,
											"name": "DUP2"
										},
										{
											"begin": 7166,
											"end": 7175,
											"name": "DUP12"
										},
										{
											"begin": 7145,
											"end": 7154,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 7145,
											"end": 7176,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7145,
											"end": 7176,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 7145,
											"end": 7176,
											"name": "JUMPDEST"
										},
										{
											"begin": 7138,
											"end": 7176,
											"name": "POP"
										},
										{
											"begin": 7138,
											"end": 7176,
											"name": "POP"
										},
										{
											"begin": 7138,
											"end": 7176,
											"name": "POP"
										},
										{
											"begin": 7138,
											"end": 7176,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 6406,
											"end": 7183,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "JUMPDEST"
										},
										{
											"begin": 3061,
											"end": 3065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "DUP1"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP5"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "AND"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "AND"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "DUP2"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "MSTORE"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "ADD"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "SWAP1"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "DUP2"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "MSTORE"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "ADD"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3103,
											"name": "KECCAK256"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3111,
											"name": "DUP4"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "AND"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "AND"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "DUP2"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "MSTORE"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "ADD"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "SWAP1"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "DUP2"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "MSTORE"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "ADD"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "KECCAK256"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "SWAP1"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "SLOAD"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "SWAP1"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "EXP"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "SWAP1"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "DIV"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3112,
											"name": "AND"
										},
										{
											"begin": 3077,
											"end": 3112,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3077,
											"end": 3112,
											"name": "AND"
										},
										{
											"begin": 3077,
											"end": 3112,
											"name": "SWAP1"
										},
										{
											"begin": 3077,
											"end": 3112,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP3"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3119,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "JUMPDEST"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "MLOAD"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SWAP2"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "CODECOPY"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "ADD"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "POP"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "MLOAD"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SWAP2"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SUB"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "KECCAK256"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "DUP2"
										},
										{
											"begin": 1537,
											"end": 1654,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "MSTORE"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP2"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "MSTORE"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "KECCAK256"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "MSTORE"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "MSTORE"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "KECCAK256"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SLOAD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "EXP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DIV"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SLOAD"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "EXP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DIV"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "DUP3"
										},
										{
											"begin": 1069,
											"end": 1139,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11903,
											"end": 12061,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 11903,
											"end": 12061,
											"name": "JUMPDEST"
										},
										{
											"begin": 11978,
											"end": 11984,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12013,
											"name": "PUSH",
											"value": "1000000000000000000000000"
										},
										{
											"begin": 12004,
											"end": 12005,
											"name": "DUP4"
										},
										{
											"begin": 12004,
											"end": 12013,
											"name": "LT"
										},
										{
											"begin": 12015,
											"end": 12027,
											"name": "DUP3"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "JUMPI"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "MSTORE"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP3"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP3"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "MSTORE"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP4"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "MSTORE"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP4"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "AND"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "ISZERO"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "JUMPI"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP3"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP4"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "EXP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "NOT"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "AND"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "MSTORE"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "ADD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "JUMPDEST"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP3"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "MLOAD"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "DUP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP2"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SUB"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "REVERT"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "JUMPDEST"
										},
										{
											"begin": 11996,
											"end": 12028,
											"name": "POP"
										},
										{
											"begin": 12052,
											"end": 12053,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12054,
											"name": "POP"
										},
										{
											"begin": 11903,
											"end": 12061,
											"name": "SWAP3"
										},
										{
											"begin": 11903,
											"end": 12061,
											"name": "SWAP2"
										},
										{
											"begin": 11903,
											"end": 12061,
											"name": "POP"
										},
										{
											"begin": 11903,
											"end": 12061,
											"name": "POP"
										},
										{
											"begin": 11903,
											"end": 12061,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12257,
											"end": 12419,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 12257,
											"end": 12419,
											"name": "JUMPDEST"
										},
										{
											"begin": 12343,
											"end": 12349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12374,
											"end": 12375,
											"name": "DUP4"
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "AND"
										},
										{
											"begin": 12369,
											"end": 12370,
											"name": "DUP4"
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "AND"
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "GT"
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "ISZERO"
										},
										{
											"begin": 12377,
											"end": 12389,
											"name": "DUP3"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "JUMPI"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "MLOAD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "MSTORE"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "ADD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "ADD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP3"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SUB"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP3"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "MSTORE"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP4"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "MLOAD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "MSTORE"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "ADD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "MLOAD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "ADD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP4"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "ADD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "AND"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "ISZERO"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "JUMPI"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP3"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SUB"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "MLOAD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP4"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SUB"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "EXP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SUB"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "NOT"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "AND"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "MSTORE"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "ADD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "JUMPDEST"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP3"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "MLOAD"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "DUP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP2"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SUB"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "SWAP1"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "REVERT"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "JUMPDEST"
										},
										{
											"begin": 12361,
											"end": 12390,
											"name": "POP"
										},
										{
											"begin": 12411,
											"end": 12412,
											"name": "DUP3"
										},
										{
											"begin": 12407,
											"end": 12408,
											"name": "DUP5"
										},
										{
											"begin": 12407,
											"end": 12412,
											"name": "SUB"
										},
										{
											"begin": 12400,
											"end": 12412,
											"name": "SWAP1"
										},
										{
											"begin": 12400,
											"end": 12412,
											"name": "POP"
										},
										{
											"begin": 12257,
											"end": 12419,
											"name": "SWAP4"
										},
										{
											"begin": 12257,
											"end": 12419,
											"name": "SWAP3"
										},
										{
											"begin": 12257,
											"end": 12419,
											"name": "POP"
										},
										{
											"begin": 12257,
											"end": 12419,
											"name": "POP"
										},
										{
											"begin": 12257,
											"end": 12419,
											"name": "POP"
										},
										{
											"begin": 12257,
											"end": 12419,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9582,
											"end": 10183,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 9582,
											"end": 10183,
											"name": "JUMPDEST"
										},
										{
											"begin": 9690,
											"end": 9691,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9675,
											"end": 9692,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9675,
											"end": 9692,
											"name": "AND"
										},
										{
											"begin": 9675,
											"end": 9678,
											"name": "DUP4"
										},
										{
											"begin": 9675,
											"end": 9692,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9675,
											"end": 9692,
											"name": "AND"
										},
										{
											"begin": 9675,
											"end": 9692,
											"name": "EQ"
										},
										{
											"begin": 9675,
											"end": 9692,
											"name": "ISZERO"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "JUMPI"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "MLOAD"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "DUP2"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "MSTORE"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "ADD"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "DUP1"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "DUP1"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "ADD"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "DUP3"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "DUP2"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "SUB"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "DUP3"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "MSTORE"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH",
											"value": "3B"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "DUP2"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "MSTORE"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "ADD"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "DUP1"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH data",
											"value": "146CACFB4BC260431B89EC63C777A908AD6748F2B07FB7FC90E13E19E310DA71"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH",
											"value": "3B"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "SWAP2"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "CODECOPY"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "ADD"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "SWAP2"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "POP"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "POP"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "MLOAD"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "DUP1"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "SWAP2"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "SUB"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "SWAP1"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "REVERT"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "JUMPDEST"
										},
										{
											"begin": 9789,
											"end": 9790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "AND"
										},
										{
											"begin": 9774,
											"end": 9777,
											"name": "DUP3"
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "AND"
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "EQ"
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "ISZERO"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "JUMPI"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "MLOAD"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "DUP2"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "MSTORE"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "ADD"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "DUP1"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "DUP1"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "ADD"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "DUP3"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "DUP2"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "SUB"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "DUP3"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "MSTORE"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "DUP2"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "MSTORE"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "ADD"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "DUP1"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH data",
											"value": "CC2FD9BBB55C782798AA8161C0AC56A8EDB953C83DD31CC403717EED7058EB6"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "SWAP2"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "CODECOPY"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "ADD"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "SWAP2"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "POP"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "POP"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "MLOAD"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "DUP1"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "SWAP2"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "SUB"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "SWAP1"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "REVERT"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 9766,
											"end": 9853,
											"name": "JUMPDEST"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9886,
											"end": 9894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9895,
											"end": 9898,
											"name": "DUP6"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "AND"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "AND"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "DUP2"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "MSTORE"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "ADD"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "SWAP1"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "DUP2"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "MSTORE"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "ADD"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "KECCAK256"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "SWAP1"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "SLOAD"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "SWAP1"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "EXP"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "SWAP1"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "DIV"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9886,
											"end": 9899,
											"name": "AND"
										},
										{
											"begin": 9901,
											"end": 9907,
											"name": "DUP3"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "MLOAD"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "DUP1"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "ADD"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "MSTORE"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "DUP1"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "DUP2"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "MSTORE"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "ADD"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "PUSH data",
											"value": "692EC8C90BC6D060B4B8461E07E5E6DF665FC0757847ED6B4E3F21B09D8256CA"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "SWAP2"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "CODECOPY"
										},
										{
											"begin": 9880,
											"end": 9885,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 9880,
											"end": 9965,
											"name": "JUMPDEST"
										},
										{
											"begin": 9864,
											"end": 9872,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9873,
											"end": 9876,
											"name": "DUP6"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "AND"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "AND"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "DUP2"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "MSTORE"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "ADD"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "SWAP1"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "DUP2"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "MSTORE"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "ADD"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "KECCAK256"
										},
										{
											"begin": 9864,
											"end": 9877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "EXP"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "DUP2"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "SLOAD"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "DUP2"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "MUL"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "NOT"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "AND"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "SWAP1"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "DUP4"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "AND"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "MUL"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "OR"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "SWAP1"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "SSTORE"
										},
										{
											"begin": 9864,
											"end": 9965,
											"name": "POP"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 9997,
											"end": 10005,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10009,
											"name": "DUP5"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "AND"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "AND"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "DUP2"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "MSTORE"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "ADD"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "SWAP1"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "DUP2"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "MSTORE"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "ADD"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "KECCAK256"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "SWAP1"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "SLOAD"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "SWAP1"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "EXP"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "SWAP1"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "DIV"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9997,
											"end": 10010,
											"name": "AND"
										},
										{
											"begin": 10012,
											"end": 10018,
											"name": "DUP3"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "MLOAD"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "DUP1"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "ADD"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "MSTORE"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "DUP1"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "DUP2"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "MSTORE"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "ADD"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "PUSH data",
											"value": "B162A08CDD346994D7A9C03EEE20F68EE11C6DA5CE67892863A5B8B47F9F80CF"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "SWAP2"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "CODECOPY"
										},
										{
											"begin": 9991,
											"end": 9996,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 9991,
											"end": 10070,
											"name": "JUMPDEST"
										},
										{
											"begin": 9975,
											"end": 9983,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9984,
											"end": 9987,
											"name": "DUP5"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "AND"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "AND"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "DUP2"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "MSTORE"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "ADD"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "SWAP1"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "DUP2"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "MSTORE"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "ADD"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "KECCAK256"
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "EXP"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "DUP2"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "SLOAD"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "DUP2"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "MUL"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "NOT"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "AND"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "SWAP1"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "DUP4"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "AND"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "MUL"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "OR"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "SWAP1"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "SSTORE"
										},
										{
											"begin": 9975,
											"end": 10070,
											"name": "POP"
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "DUP2"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "AND"
										},
										{
											"begin": 10094,
											"end": 10097,
											"name": "DUP4"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "AND"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10104,
											"end": 10110,
											"name": "DUP4"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "MLOAD"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "DUP1"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "DUP3"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "AND"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "DUP2"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "MSTORE"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "ADD"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "SWAP2"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "POP"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "POP"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "MLOAD"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "DUP1"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "SWAP2"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "SUB"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "SWAP1"
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "LOG3"
										},
										{
											"begin": 10122,
											"end": 10176,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 10137,
											"end": 10146,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "DUP6"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "AND"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "AND"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "MSTORE"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "ADD"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "MSTORE"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "ADD"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "KECCAK256"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "SLOAD"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "EXP"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "DIV"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10137,
											"end": 10151,
											"name": "AND"
										},
										{
											"begin": 10153,
											"end": 10162,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10166,
											"name": "DUP6"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "AND"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "AND"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "DUP2"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "MSTORE"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "ADD"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "SWAP1"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "DUP2"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "MSTORE"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "ADD"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "KECCAK256"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "SWAP1"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "SLOAD"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "SWAP1"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "EXP"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "SWAP1"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "DIV"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "AND"
										},
										{
											"begin": 10169,
											"end": 10175,
											"name": "DUP4"
										},
										{
											"begin": 10122,
											"end": 10136,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 10122,
											"end": 10176,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10122,
											"end": 10176,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 10122,
											"end": 10176,
											"name": "JUMPDEST"
										},
										{
											"begin": 9582,
											"end": 10183,
											"name": "POP"
										},
										{
											"begin": 9582,
											"end": 10183,
											"name": "POP"
										},
										{
											"begin": 9582,
											"end": 10183,
											"name": "POP"
										},
										{
											"begin": 9582,
											"end": 10183,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9209,
											"end": 9576,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 9209,
											"end": 9576,
											"name": "JUMPDEST"
										},
										{
											"begin": 9285,
											"end": 9308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9320,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9330,
											"name": "DUP5"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "AND"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "AND"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP2"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "MSTORE"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "ADD"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "SWAP1"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP2"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "MSTORE"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "ADD"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "KECCAK256"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "SWAP1"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "SLOAD"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "SWAP1"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "EXP"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "SWAP1"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DIV"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "AND"
										},
										{
											"begin": 9285,
											"end": 9331,
											"name": "SWAP1"
										},
										{
											"begin": 9285,
											"end": 9331,
											"name": "POP"
										},
										{
											"begin": 9341,
											"end": 9364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9375,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9376,
											"end": 9385,
											"name": "DUP6"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "AND"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "AND"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "DUP2"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "MSTORE"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "ADD"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "SWAP1"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "DUP2"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "MSTORE"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "ADD"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "KECCAK256"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "SWAP1"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "SLOAD"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "SWAP1"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "EXP"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "SWAP1"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "DIV"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "AND"
										},
										{
											"begin": 9341,
											"end": 9386,
											"name": "SWAP1"
										},
										{
											"begin": 9341,
											"end": 9386,
											"name": "POP"
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "DUP3"
										},
										{
											"begin": 9396,
											"end": 9405,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9406,
											"end": 9415,
											"name": "DUP7"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "AND"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "AND"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "DUP2"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "MSTORE"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "ADD"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "SWAP1"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "DUP2"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "MSTORE"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "ADD"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "KECCAK256"
										},
										{
											"begin": 9396,
											"end": 9416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "EXP"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "DUP2"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "SLOAD"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "DUP2"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "MUL"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "NOT"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "AND"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "SWAP1"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "DUP4"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "AND"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "MUL"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "OR"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "SWAP1"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "SSTORE"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "POP"
										},
										{
											"begin": 9488,
											"end": 9497,
											"name": "DUP3"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "AND"
										},
										{
											"begin": 9471,
											"end": 9486,
											"name": "DUP3"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "AND"
										},
										{
											"begin": 9460,
											"end": 9469,
											"name": "DUP6"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "AND"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "PUSH",
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "MLOAD"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "MLOAD"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "DUP1"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "SWAP2"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "SUB"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "SWAP1"
										},
										{
											"begin": 9444,
											"end": 9498,
											"name": "LOG4"
										},
										{
											"begin": 9509,
											"end": 9569,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 9524,
											"end": 9539,
											"name": "DUP3"
										},
										{
											"begin": 9541,
											"end": 9550,
											"name": "DUP5"
										},
										{
											"begin": 9552,
											"end": 9568,
											"name": "DUP4"
										},
										{
											"begin": 9509,
											"end": 9523,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 9509,
											"end": 9569,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9509,
											"end": 9569,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 9509,
											"end": 9569,
											"name": "JUMPDEST"
										},
										{
											"begin": 9209,
											"end": 9576,
											"name": "POP"
										},
										{
											"begin": 9209,
											"end": 9576,
											"name": "POP"
										},
										{
											"begin": 9209,
											"end": 9576,
											"name": "POP"
										},
										{
											"begin": 9209,
											"end": 9576,
											"name": "POP"
										},
										{
											"begin": 9209,
											"end": 9576,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12425,
											"end": 12574,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 12425,
											"end": 12574,
											"name": "JUMPDEST"
										},
										{
											"begin": 12470,
											"end": 12474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12486,
											"end": 12501,
											"name": "DUP1"
										},
										{
											"begin": 12533,
											"end": 12542,
											"name": "CHAINID"
										},
										{
											"begin": 12522,
											"end": 12542,
											"name": "SWAP1"
										},
										{
											"begin": 12522,
											"end": 12542,
											"name": "POP"
										},
										{
											"begin": 12560,
											"end": 12567,
											"name": "DUP1"
										},
										{
											"begin": 12553,
											"end": 12567,
											"name": "SWAP2"
										},
										{
											"begin": 12553,
											"end": 12567,
											"name": "POP"
										},
										{
											"begin": 12553,
											"end": 12567,
											"name": "POP"
										},
										{
											"begin": 12425,
											"end": 12574,
											"name": "SWAP1"
										},
										{
											"begin": 12425,
											"end": 12574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12067,
											"end": 12251,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 12067,
											"end": 12251,
											"name": "JUMPDEST"
										},
										{
											"begin": 12153,
											"end": 12159,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12171,
											"end": 12179,
											"name": "DUP1"
										},
										{
											"begin": 12186,
											"end": 12187,
											"name": "DUP4"
										},
										{
											"begin": 12182,
											"end": 12183,
											"name": "DUP6"
										},
										{
											"begin": 12182,
											"end": 12187,
											"name": "ADD"
										},
										{
											"begin": 12171,
											"end": 12187,
											"name": "SWAP1"
										},
										{
											"begin": 12171,
											"end": 12187,
											"name": "POP"
										},
										{
											"begin": 12210,
											"end": 12211,
											"name": "DUP5"
										},
										{
											"begin": 12205,
											"end": 12211,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12205,
											"end": 12211,
											"name": "AND"
										},
										{
											"begin": 12205,
											"end": 12206,
											"name": "DUP2"
										},
										{
											"begin": 12205,
											"end": 12211,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12205,
											"end": 12211,
											"name": "AND"
										},
										{
											"begin": 12205,
											"end": 12211,
											"name": "LT"
										},
										{
											"begin": 12205,
											"end": 12211,
											"name": "ISZERO"
										},
										{
											"begin": 12213,
											"end": 12225,
											"name": "DUP4"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "JUMPI"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "MLOAD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "MSTORE"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "ADD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "ADD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP3"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SUB"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP3"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "MSTORE"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP4"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "MLOAD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "MSTORE"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "ADD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "MLOAD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "ADD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP4"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "ADD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "AND"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "ISZERO"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "JUMPI"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP3"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SUB"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "MLOAD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP4"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SUB"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "EXP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SUB"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "NOT"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "AND"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "MSTORE"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "ADD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "JUMPDEST"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP3"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "MLOAD"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "DUP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP2"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SUB"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "REVERT"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "JUMPDEST"
										},
										{
											"begin": 12197,
											"end": 12226,
											"name": "POP"
										},
										{
											"begin": 12243,
											"end": 12244,
											"name": "DUP1"
										},
										{
											"begin": 12236,
											"end": 12244,
											"name": "SWAP2"
										},
										{
											"begin": 12236,
											"end": 12244,
											"name": "POP"
										},
										{
											"begin": 12236,
											"end": 12244,
											"name": "POP"
										},
										{
											"begin": 12067,
											"end": 12251,
											"name": "SWAP4"
										},
										{
											"begin": 12067,
											"end": 12251,
											"name": "SWAP3"
										},
										{
											"begin": 12067,
											"end": 12251,
											"name": "POP"
										},
										{
											"begin": 12067,
											"end": 12251,
											"name": "POP"
										},
										{
											"begin": 12067,
											"end": 12251,
											"name": "POP"
										},
										{
											"begin": 12067,
											"end": 12251,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10189,
											"end": 11110,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 10189,
											"end": 11110,
											"name": "JUMPDEST"
										},
										{
											"begin": 10293,
											"end": 10299,
											"name": "DUP2"
										},
										{
											"begin": 10283,
											"end": 10299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10283,
											"end": 10299,
											"name": "AND"
										},
										{
											"begin": 10283,
											"end": 10289,
											"name": "DUP4"
										},
										{
											"begin": 10283,
											"end": 10299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10283,
											"end": 10299,
											"name": "AND"
										},
										{
											"begin": 10283,
											"end": 10299,
											"name": "EQ"
										},
										{
											"begin": 10283,
											"end": 10299,
											"name": "ISZERO"
										},
										{
											"begin": 10283,
											"end": 10313,
											"name": "DUP1"
										},
										{
											"begin": 10283,
											"end": 10313,
											"name": "ISZERO"
										},
										{
											"begin": 10283,
											"end": 10313,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 10283,
											"end": 10313,
											"name": "JUMPI"
										},
										{
											"begin": 10283,
											"end": 10313,
											"name": "POP"
										},
										{
											"begin": 10312,
											"end": 10313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP2"
										},
										{
											"begin": 10303,
											"end": 10313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10303,
											"end": 10313,
											"name": "AND"
										},
										{
											"begin": 10303,
											"end": 10313,
											"name": "GT"
										},
										{
											"begin": 10283,
											"end": 10313,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 10283,
											"end": 10313,
											"name": "JUMPDEST"
										},
										{
											"begin": 10279,
											"end": 11104,
											"name": "ISZERO"
										},
										{
											"begin": 10279,
											"end": 11104,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 10279,
											"end": 11104,
											"name": "JUMPI"
										},
										{
											"begin": 10351,
											"end": 10352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10333,
											"end": 10353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10353,
											"name": "AND"
										},
										{
											"begin": 10333,
											"end": 10339,
											"name": "DUP4"
										},
										{
											"begin": 10333,
											"end": 10353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10353,
											"name": "AND"
										},
										{
											"begin": 10333,
											"end": 10353,
											"name": "EQ"
										},
										{
											"begin": 10329,
											"end": 10705,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 10329,
											"end": 10705,
											"name": "JUMPI"
										},
										{
											"begin": 10373,
											"end": 10389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10406,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10407,
											"end": 10413,
											"name": "DUP6"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "AND"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "AND"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "DUP2"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "MSTORE"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "ADD"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "SWAP1"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "DUP2"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "MSTORE"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "ADD"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "KECCAK256"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "SWAP1"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "SLOAD"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "SWAP1"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "EXP"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "SWAP1"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "DIV"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "AND"
										},
										{
											"begin": 10373,
											"end": 10414,
											"name": "SWAP1"
										},
										{
											"begin": 10373,
											"end": 10414,
											"name": "POP"
										},
										{
											"begin": 10432,
											"end": 10448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10464,
											"name": "DUP1"
										},
										{
											"begin": 10451,
											"end": 10460,
											"name": "DUP3"
										},
										{
											"begin": 10451,
											"end": 10464,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10451,
											"end": 10464,
											"name": "AND"
										},
										{
											"begin": 10451,
											"end": 10464,
											"name": "GT"
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "JUMPI"
										},
										{
											"begin": 10510,
											"end": 10511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "JUMP"
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "JUMPDEST"
										},
										{
											"begin": 10467,
											"end": 10478,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10479,
											"end": 10485,
											"name": "DUP7"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "AND"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "AND"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "DUP2"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "MSTORE"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "ADD"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "SWAP1"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "DUP2"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "MSTORE"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "ADD"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10486,
											"name": "KECCAK256"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10487,
											"end": 10496,
											"name": "DUP5"
										},
										{
											"begin": 10487,
											"end": 10500,
											"name": "SUB"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "AND"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "AND"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "DUP2"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "MSTORE"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "ADD"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "SWAP1"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "DUP2"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "MSTORE"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "ADD"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "KECCAK256"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "ADD"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "SWAP1"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "SLOAD"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "SWAP1"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "EXP"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "SWAP1"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "DIV"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "AND"
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "JUMPDEST"
										},
										{
											"begin": 10432,
											"end": 10511,
											"name": "SWAP1"
										},
										{
											"begin": 10432,
											"end": 10511,
											"name": "POP"
										},
										{
											"begin": 10529,
											"end": 10545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 10554,
											"end": 10563,
											"name": "DUP3"
										},
										{
											"begin": 10565,
											"end": 10571,
											"name": "DUP6"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "MLOAD"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "DUP1"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "ADD"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "MSTORE"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "DUP1"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "DUP2"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "MSTORE"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "ADD"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH data",
											"value": "3572F2E3A73D8992FFD14BBDC492A68EA3425B205FA2E411C1A12014BC6F8444"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "SWAP2"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "CODECOPY"
										},
										{
											"begin": 10548,
											"end": 10553,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "JUMPDEST"
										},
										{
											"begin": 10529,
											"end": 10615,
											"name": "SWAP1"
										},
										{
											"begin": 10529,
											"end": 10615,
											"name": "POP"
										},
										{
											"begin": 10633,
											"end": 10690,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 10650,
											"end": 10656,
											"name": "DUP7"
										},
										{
											"begin": 10658,
											"end": 10667,
											"name": "DUP5"
										},
										{
											"begin": 10669,
											"end": 10678,
											"name": "DUP5"
										},
										{
											"begin": 10680,
											"end": 10689,
											"name": "DUP5"
										},
										{
											"begin": 10633,
											"end": 10649,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 10633,
											"end": 10690,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10633,
											"end": 10690,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 10633,
											"end": 10690,
											"name": "JUMPDEST"
										},
										{
											"begin": 10329,
											"end": 10705,
											"name": "POP"
										},
										{
											"begin": 10329,
											"end": 10705,
											"name": "POP"
										},
										{
											"begin": 10329,
											"end": 10705,
											"name": "POP"
										},
										{
											"begin": 10329,
											"end": 10705,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 10329,
											"end": 10705,
											"name": "JUMPDEST"
										},
										{
											"begin": 10741,
											"end": 10742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "AND"
										},
										{
											"begin": 10723,
											"end": 10729,
											"name": "DUP3"
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "AND"
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "EQ"
										},
										{
											"begin": 10719,
											"end": 11094,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 10719,
											"end": 11094,
											"name": "JUMPI"
										},
										{
											"begin": 10763,
											"end": 10779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10796,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10797,
											"end": 10803,
											"name": "DUP5"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "AND"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "AND"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "DUP2"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "MSTORE"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "ADD"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "SWAP1"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "DUP2"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "MSTORE"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "ADD"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "KECCAK256"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "SWAP1"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "SLOAD"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "SWAP1"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "EXP"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "SWAP1"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "DIV"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10782,
											"end": 10804,
											"name": "AND"
										},
										{
											"begin": 10763,
											"end": 10804,
											"name": "SWAP1"
										},
										{
											"begin": 10763,
											"end": 10804,
											"name": "POP"
										},
										{
											"begin": 10822,
											"end": 10838,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10853,
											"end": 10854,
											"name": "DUP1"
										},
										{
											"begin": 10841,
											"end": 10850,
											"name": "DUP3"
										},
										{
											"begin": 10841,
											"end": 10854,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10841,
											"end": 10854,
											"name": "AND"
										},
										{
											"begin": 10841,
											"end": 10854,
											"name": "GT"
										},
										{
											"begin": 10841,
											"end": 10901,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 10841,
											"end": 10901,
											"name": "JUMPI"
										},
										{
											"begin": 10900,
											"end": 10901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10841,
											"end": 10901,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 10841,
											"end": 10901,
											"name": "JUMP"
										},
										{
											"begin": 10841,
											"end": 10901,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 10841,
											"end": 10901,
											"name": "JUMPDEST"
										},
										{
											"begin": 10857,
											"end": 10868,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10869,
											"end": 10875,
											"name": "DUP6"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "AND"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "AND"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "DUP2"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "MSTORE"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "ADD"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "SWAP1"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "DUP2"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "MSTORE"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "ADD"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "KECCAK256"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10889,
											"end": 10890,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10877,
											"end": 10886,
											"name": "DUP5"
										},
										{
											"begin": 10877,
											"end": 10890,
											"name": "SUB"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "AND"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "AND"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "DUP2"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "MSTORE"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "ADD"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "SWAP1"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "DUP2"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "MSTORE"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "ADD"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10891,
											"name": "KECCAK256"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "ADD"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "SWAP1"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "SLOAD"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "SWAP1"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "EXP"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "SWAP1"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "DIV"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10857,
											"end": 10897,
											"name": "AND"
										},
										{
											"begin": 10841,
											"end": 10901,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 10841,
											"end": 10901,
											"name": "JUMPDEST"
										},
										{
											"begin": 10822,
											"end": 10901,
											"name": "SWAP1"
										},
										{
											"begin": 10822,
											"end": 10901,
											"name": "POP"
										},
										{
											"begin": 10919,
											"end": 10935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 10944,
											"end": 10953,
											"name": "DUP3"
										},
										{
											"begin": 10955,
											"end": 10961,
											"name": "DUP6"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "MLOAD"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "DUP1"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "ADD"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "MSTORE"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "DUP1"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "DUP2"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "MSTORE"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "ADD"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "PUSH data",
											"value": "BA9D0177EED180B5D6A2C76DFC689B87BFD0698268C3A8DB9E79A797CB697239"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "SWAP2"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "CODECOPY"
										},
										{
											"begin": 10938,
											"end": 10943,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 10938,
											"end": 11004,
											"name": "JUMPDEST"
										},
										{
											"begin": 10919,
											"end": 11004,
											"name": "SWAP1"
										},
										{
											"begin": 10919,
											"end": 11004,
											"name": "POP"
										},
										{
											"begin": 11022,
											"end": 11079,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 11039,
											"end": 11045,
											"name": "DUP6"
										},
										{
											"begin": 11047,
											"end": 11056,
											"name": "DUP5"
										},
										{
											"begin": 11058,
											"end": 11067,
											"name": "DUP5"
										},
										{
											"begin": 11069,
											"end": 11078,
											"name": "DUP5"
										},
										{
											"begin": 11022,
											"end": 11038,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 11022,
											"end": 11079,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11022,
											"end": 11079,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 11022,
											"end": 11079,
											"name": "JUMPDEST"
										},
										{
											"begin": 10719,
											"end": 11094,
											"name": "POP"
										},
										{
											"begin": 10719,
											"end": 11094,
											"name": "POP"
										},
										{
											"begin": 10719,
											"end": 11094,
											"name": "POP"
										},
										{
											"begin": 10719,
											"end": 11094,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 10719,
											"end": 11094,
											"name": "JUMPDEST"
										},
										{
											"begin": 10279,
											"end": 11104,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 10279,
											"end": 11104,
											"name": "JUMPDEST"
										},
										{
											"begin": 10189,
											"end": 11110,
											"name": "POP"
										},
										{
											"begin": 10189,
											"end": 11110,
											"name": "POP"
										},
										{
											"begin": 10189,
											"end": 11110,
											"name": "POP"
										},
										{
											"begin": 10189,
											"end": 11110,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11116,
											"end": 11733,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 11116,
											"end": 11733,
											"name": "JUMPDEST"
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 11261,
											"end": 11273,
											"name": "NUMBER"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "MLOAD"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "DUP1"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "ADD"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "MSTORE"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "DUP1"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "DUP2"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "MSTORE"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "ADD"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "PUSH data",
											"value": "4BECE53613AC1432B74B912202F09EB50CB0DCB5908CBBD578098234A3A7791C"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "SWAP2"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "CODECOPY"
										},
										{
											"begin": 11254,
											"end": 11260,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 11254,
											"end": 11329,
											"name": "JUMPDEST"
										},
										{
											"begin": 11233,
											"end": 11329,
											"name": "SWAP1"
										},
										{
											"begin": 11233,
											"end": 11329,
											"name": "POP"
										},
										{
											"begin": 11357,
											"end": 11358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11342,
											"end": 11354,
											"name": "DUP5"
										},
										{
											"begin": 11342,
											"end": 11358,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11342,
											"end": 11358,
											"name": "AND"
										},
										{
											"begin": 11342,
											"end": 11358,
											"name": "GT"
										},
										{
											"begin": 11342,
											"end": 11427,
											"name": "DUP1"
										},
										{
											"begin": 11342,
											"end": 11427,
											"name": "ISZERO"
										},
										{
											"begin": 11342,
											"end": 11427,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 11342,
											"end": 11427,
											"name": "JUMPI"
										},
										{
											"begin": 11342,
											"end": 11427,
											"name": "POP"
										},
										{
											"begin": 11416,
											"end": 11427,
											"name": "DUP1"
										},
										{
											"begin": 11362,
											"end": 11427,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11362,
											"end": 11427,
											"name": "AND"
										},
										{
											"begin": 11362,
											"end": 11373,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11374,
											"end": 11383,
											"name": "DUP8"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "AND"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "AND"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "DUP2"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "MSTORE"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "ADD"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "SWAP1"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "DUP2"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "MSTORE"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "ADD"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11384,
											"name": "KECCAK256"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11400,
											"end": 11401,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11385,
											"end": 11397,
											"name": "DUP8"
										},
										{
											"begin": 11385,
											"end": 11401,
											"name": "SUB"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "AND"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "AND"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "DUP2"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "MSTORE"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "ADD"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "SWAP1"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "DUP2"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "MSTORE"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "ADD"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11402,
											"name": "KECCAK256"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "ADD"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "SWAP1"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "SLOAD"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "SWAP1"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "EXP"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "SWAP1"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "DIV"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11362,
											"end": 11412,
											"name": "AND"
										},
										{
											"begin": 11362,
											"end": 11427,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11362,
											"end": 11427,
											"name": "AND"
										},
										{
											"begin": 11362,
											"end": 11427,
											"name": "EQ"
										},
										{
											"begin": 11342,
											"end": 11427,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 11342,
											"end": 11427,
											"name": "JUMPDEST"
										},
										{
											"begin": 11338,
											"end": 11662,
											"name": "ISZERO"
										},
										{
											"begin": 11338,
											"end": 11662,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 11338,
											"end": 11662,
											"name": "JUMPI"
										},
										{
											"begin": 11490,
											"end": 11498,
											"name": "DUP2"
										},
										{
											"begin": 11441,
											"end": 11452,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11453,
											"end": 11462,
											"name": "DUP8"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "AND"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "AND"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "DUP2"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "MSTORE"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "ADD"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "SWAP1"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "DUP2"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "MSTORE"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "ADD"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "KECCAK256"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11479,
											"end": 11480,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11464,
											"end": 11476,
											"name": "DUP8"
										},
										{
											"begin": 11464,
											"end": 11480,
											"name": "SUB"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "AND"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "AND"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "DUP2"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "MSTORE"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "ADD"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "SWAP1"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "DUP2"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "MSTORE"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "ADD"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11481,
											"name": "KECCAK256"
										},
										{
											"begin": 11441,
											"end": 11487,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11487,
											"name": "ADD"
										},
										{
											"begin": 11441,
											"end": 11487,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "EXP"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "DUP2"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "SLOAD"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "DUP2"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "MUL"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "NOT"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "AND"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "SWAP1"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "DUP4"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "AND"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "MUL"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "OR"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "SWAP1"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "SSTORE"
										},
										{
											"begin": 11441,
											"end": 11498,
											"name": "POP"
										},
										{
											"begin": 11338,
											"end": 11662,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 11338,
											"end": 11662,
											"name": "JUMP"
										},
										{
											"begin": 11338,
											"end": 11662,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 11338,
											"end": 11662,
											"name": "JUMPDEST"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "MLOAD"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "DUP1"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "ADD"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "MSTORE"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "DUP1"
										},
										{
											"begin": 11575,
											"end": 11586,
											"name": "DUP3"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "AND"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "DUP2"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "MSTORE"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "ADD"
										},
										{
											"begin": 11588,
											"end": 11596,
											"name": "DUP4"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "AND"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "DUP2"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "MSTORE"
										},
										{
											"begin": 11564,
											"end": 11597,
											"name": "POP"
										},
										{
											"begin": 11525,
											"end": 11536,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11546,
											"name": "DUP8"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "AND"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "AND"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "MSTORE"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "ADD"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "SWAP1"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "MSTORE"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "ADD"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "KECCAK256"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11548,
											"end": 11560,
											"name": "DUP7"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "AND"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "AND"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "MSTORE"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "ADD"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "SWAP1"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "MSTORE"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "ADD"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11561,
											"name": "KECCAK256"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP3"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "ADD"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "MLOAD"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "ADD"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "EXP"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "SLOAD"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "MUL"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "NOT"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "AND"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "SWAP1"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP4"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "AND"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "MUL"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "OR"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "SWAP1"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "SSTORE"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "POP"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP3"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "ADD"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "MLOAD"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "ADD"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "EXP"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "SLOAD"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP2"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "MUL"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "NOT"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "AND"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "SWAP1"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "DUP4"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "AND"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "MUL"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "OR"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "SWAP1"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "SSTORE"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "POP"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "SWAP1"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "POP"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "POP"
										},
										{
											"begin": 11652,
											"end": 11653,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11637,
											"end": 11649,
											"name": "DUP5"
										},
										{
											"begin": 11637,
											"end": 11653,
											"name": "ADD"
										},
										{
											"begin": 11609,
											"end": 11623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11624,
											"end": 11633,
											"name": "DUP8"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "AND"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "AND"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "DUP2"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "MSTORE"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "ADD"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "SWAP1"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "DUP2"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "MSTORE"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "ADD"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "KECCAK256"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "EXP"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "DUP2"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "SLOAD"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "DUP2"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "MUL"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "NOT"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "AND"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "SWAP1"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "DUP4"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "AND"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "MUL"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "OR"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "SWAP1"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "SSTORE"
										},
										{
											"begin": 11609,
											"end": 11653,
											"name": "POP"
										},
										{
											"begin": 11338,
											"end": 11662,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 11338,
											"end": 11662,
											"name": "JUMPDEST"
										},
										{
											"begin": 11696,
											"end": 11705,
											"name": "DUP5"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "AND"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "PUSH",
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 11707,
											"end": 11715,
											"name": "DUP5"
										},
										{
											"begin": 11717,
											"end": 11725,
											"name": "DUP5"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "MLOAD"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "DUP1"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "DUP4"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "AND"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "DUP2"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "MSTORE"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "ADD"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "DUP3"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "AND"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "DUP2"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "MSTORE"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "ADD"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "SWAP3"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "POP"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "POP"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "POP"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "MLOAD"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "DUP1"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "SWAP2"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "SUB"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "SWAP1"
										},
										{
											"begin": 11675,
											"end": 11726,
											"name": "LOG2"
										},
										{
											"begin": 11116,
											"end": 11733,
											"name": "POP"
										},
										{
											"begin": 11116,
											"end": 11733,
											"name": "POP"
										},
										{
											"begin": 11116,
											"end": 11733,
											"name": "POP"
										},
										{
											"begin": 11116,
											"end": 11733,
											"name": "POP"
										},
										{
											"begin": 11116,
											"end": 11733,
											"name": "POP"
										},
										{
											"begin": 11116,
											"end": 11733,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11739,
											"end": 11897,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 11739,
											"end": 11897,
											"name": "JUMPDEST"
										},
										{
											"begin": 11814,
											"end": 11820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11844,
											"end": 11849,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 11840,
											"end": 11841,
											"name": "DUP4"
										},
										{
											"begin": 11840,
											"end": 11849,
											"name": "LT"
										},
										{
											"begin": 11851,
											"end": 11863,
											"name": "DUP3"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "JUMPI"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "MSTORE"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP3"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SUB"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP3"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "MSTORE"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP4"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "MSTORE"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP4"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "AND"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "ISZERO"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "JUMPI"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP3"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SUB"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP4"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SUB"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "EXP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SUB"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "NOT"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "AND"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "MSTORE"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "JUMPDEST"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP3"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP2"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SUB"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "REVERT"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "JUMPDEST"
										},
										{
											"begin": 11832,
											"end": 11864,
											"name": "POP"
										},
										{
											"begin": 11888,
											"end": 11889,
											"name": "DUP3"
										},
										{
											"begin": 11874,
											"end": 11890,
											"name": "SWAP1"
										},
										{
											"begin": 11874,
											"end": 11890,
											"name": "POP"
										},
										{
											"begin": 11739,
											"end": 11897,
											"name": "SWAP3"
										},
										{
											"begin": 11739,
											"end": 11897,
											"name": "SWAP2"
										},
										{
											"begin": 11739,
											"end": 11897,
											"name": "POP"
										},
										{
											"begin": 11739,
											"end": 11897,
											"name": "POP"
										},
										{
											"begin": 11739,
											"end": 11897,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "MLOAD"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "MSTORE"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "AND"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP2"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "MSTORE"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "AND"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "DUP2"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "MSTORE"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "POP"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 12576,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"146CACFB4BC260431B89EC63C777A908AD6748F2B07FB7FC90E13E19E310DA71": "4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"23D2C3E584D2DAE5A522F6448E0710DF72687F4ACD6E4ED038125BE6AD063474": "4e69753a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
										"286B94815EF9C969765B740F7C02D7497DEC20279D87A9D16DB942AD7A7E336F": "4e69753a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
										"30D69E93A362E57830EE2B32181E5A9483403AF4F744004141E5032F52BB8302": "4e69753a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
										"3572F2E3A73D8992FFD14BBDC492A68EA3425B205FA2E411C1A12014BC6F8444": "4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
										"4BECE53613AC1432B74B912202F09EB50CB0DCB5908CBBD578098234A3A7791C": "4e69753a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"692EC8C90BC6D060B4B8461E07E5E6DF665FC0757847ED6B4E3F21B09D8256CA": "4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"8A3AD0C608C33832A3FF514E5C3E57DBCD9E3501F3D02BDBA4DD75E8B3694DBC": "4e69753a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
										"8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
										"94D278442953E8A40A7FDF141370FF55E3B6DF6E750D2F5CDE258C09C5A35C64": "4e69753a3a64656c656761746542795369673a207369676e61747572652065787069726564",
										"AA0434F77A6C4F1D00FE7BA5B4B950CBB617A74B279E346F2C71F484BDA86400": "4e69753a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
										"B162A08CDD346994D7A9C03EEE20F68EE11C6DA5CE67892863A5B8B47F9F80CF": "4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
										"BA9D0177EED180B5D6A2C76DFC689B87BFD0698268C3A8DB9E79A797CB697239": "4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
										"CC2FD9BBB55C782798AA8161C0AC56A8EDB953C83DD31CC403717EED7058EB6": "4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
										"DD7149FE72A1BE87BE4EAD6DC6A1D98FA245FF2213CC4223F269DE7A7C707425": "4e69753a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
										"E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"account\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"return\":\"The number of tokens approved\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"return\":\"The number of tokens held\"},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\"}},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"return\":\"The number of current votes for `account`\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"return\":\"The number of votes the account had as of the given block\"},\"transfer(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\",\"src\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"constructor\":\"Construct a new Niu token\",\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}}}},\"settings\":{\"compilationTarget\":{\"Governance/Niu.sol\":\"Niu\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Governance/Niu.sol\":{\"keccak256\":\"0x58a97913365095c0d0c4b77d108fce0b83b34882370fe91c7bd3d0397177df46\",\"urls\":[\"bzz-raw://54d2399b258866aa4274f18b298f3b84cd82d90e9303c6049ab56e626edf72a5\",\"dweb:/ipfs/QmbupiQ44khoxmYb1wsjvgPYBLL61DNDGLJ1hTCRouyUat\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "Governance/Niu.sol:Niu",
								"label": "allowances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint96))"
							},
							{
								"astId": 23,
								"contract": "Governance/Niu.sol:Niu",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint96)"
							},
							{
								"astId": 27,
								"contract": "Governance/Niu.sol:Niu",
								"label": "delegates",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 38,
								"contract": "Governance/Niu.sol:Niu",
								"label": "checkpoints",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)32_storage))"
							},
							{
								"astId": 42,
								"contract": "Governance/Niu.sol:Niu",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 56,
								"contract": "Governance/Niu.sol:Niu",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint96))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint96))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint96)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)32_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct Niu.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)32_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_address,t_uint96)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint96)",
								"numberOfBytes": "32",
								"value": "t_uint96"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)32_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct Niu.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)32_storage"
							},
							"t_struct(Checkpoint)32_storage": {
								"encoding": "inplace",
								"label": "struct Niu.Checkpoint",
								"members": [
									{
										"astId": 29,
										"contract": "Governance/Niu.sol:Niu",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 31,
										"contract": "Governance/Niu.sol:Niu",
										"label": "votes",
										"offset": 4,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"methods": {
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"constructor": "Construct a new Niu token",
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						}
					}
				}
			}
		},
		"sources": {
			"Governance/Niu.sol": {
				"ast": {
					"absolutePath": "Governance/Niu.sol",
					"exportedSymbols": {
						"Niu": [
							956
						]
					},
					"id": 957,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 956,
							"linearizedBaseContracts": [
								956
							],
							"name": "Niu",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "130:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 2,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "130:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e697572616c",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "160:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_51305411a44c430b5d7eb9b2f42f0f0a804b1cae2f15c9dcffd9bc2731cbd9f7",
											"typeString": "literal_string \"Niural\""
										},
										"value": "Niural"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 7,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "226:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 5,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "226:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e4955",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "258:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b3ae5ecac71b78114bec824c246f1c5a3249bb871a7c023c10c5f05cc25e5f55",
											"typeString": "literal_string \"NIU\""
										},
										"value": "NIU"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 10,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "323:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 8,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "323:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "356:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "419:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "419:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130303030303030653138",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "454:11:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"value": "10000000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "allowances",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "544:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
										"typeString": "mapping(address => mapping(address => uint96))"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "553:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "544:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
											"typeString": "mapping(address => mapping(address => uint96))"
										},
										"valueType": {
											"id": 17,
											"keyType": {
												"id": 15,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "573:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "564:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
												"typeString": "mapping(address => uint96)"
											},
											"valueType": {
												"id": 16,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "584:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "686:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
										"typeString": "mapping(address => uint96)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "695:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "686:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
											"typeString": "mapping(address => uint96)"
										},
										"valueType": {
											"id": 21,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "706:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 27,
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "789:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 26,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "798:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "789:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "809:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "Niu.Checkpoint",
									"id": 32,
									"members": [
										{
											"constant": false,
											"id": 29,
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"scope": 32,
											"src": "945:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 28,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "945:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 31,
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 32,
											"src": "971:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 30,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "971:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 956,
									"src": "917:73:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "1069:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint))"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 33,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1078:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1069:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint))"
										},
										"valueType": {
											"id": 36,
											"keyType": {
												"id": 34,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1098:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "1089:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
												"typeString": "mapping(uint32 => struct Niu.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 35,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 32,
												"src": "1108:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$32_storage_ptr",
													"typeString": "struct Niu.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 42,
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "1205:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1214:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1205:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 40,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1225:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 47,
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "1324:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 43,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1324:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 45,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1376:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 44,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 965,
											"src": "1366:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 46,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1366:80:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 52,
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "1537:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 48,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1537:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 50,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1593:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 49,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 965,
											"src": "1583:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 51,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1583:71:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 56,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "1732:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 55,
										"keyType": {
											"id": 53,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1741:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1732:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 54,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1752:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when an account changes its delegate",
									"id": 64,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1876:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1903:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1933:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1875:85:0"
									},
									"src": "1854:107:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when a delegate account's vote balance changes",
									"id": 72,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2080:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2106:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2106:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": false,
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2128:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2079:65:0"
									},
									"src": "2053:92:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard EIP-20 transfer event",
									"id": 80,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2217:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2239:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2259:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:58:0"
									},
									"src": "2202:73:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard EIP-20 approval event",
									"id": 88,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "2347:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "2370:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "2395:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2346:64:0"
									},
									"src": "2332:79:0"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2576:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 93,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2586:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 95,
														"indexExpression": {
															"argumentTypes": null,
															"id": 94,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2595:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2586:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 97,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "2613:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2606:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": "uint96"
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2606:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "2586:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "2586:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 105,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 106,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "2670:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 101,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "2640:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2640:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "EmitStatement",
												"src": "2635:47:0"
											}
										]
									},
									"documentation": "@notice Construct a new Niu token\n@param account The initial account to grant all the tokens",
									"id": 110,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2552:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2551:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2576:0:0"
									},
									"scope": 956,
									"src": "2540:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "3067:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 119,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "3084:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 121,
														"indexExpression": {
															"argumentTypes": null,
															"id": 120,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "3095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3084:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 123,
													"indexExpression": {
														"argumentTypes": null,
														"id": 122,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3084:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 118,
												"id": 124,
												"nodeType": "Return",
												"src": "3077:35:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n@param account The address of the account holding the funds\n@param spender The address of the account spending the funds\n@return The number of tokens approved",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3004:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3003:34:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3061:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3061:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3060:6:0"
									},
									"scope": 956,
									"src": "2985:134:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "3661:332:0",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 179,
														"src": "3671:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 135,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "3671:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3671:13:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 138,
														"name": "rawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3698:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "3716:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3717:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3711:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3698:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 159,
													"nodeType": "Block",
													"src": "3771:91:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 152,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "3785:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 154,
																			"name": "rawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "3801:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "4e69753a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
																			"id": 155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3812:38:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302",
																				"typeString": "literal_string \"Niu::approve: amount exceeds 96 bits\""
																			},
																			"value": "Niu::approve: amount exceeds 96 bits"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302",
																				"typeString": "literal_string \"Niu::approve: amount exceeds 96 bits\""
																			}
																		],
																		"id": 153,
																		"name": "safe96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "3794:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																			"typeString": "function (uint256,string memory) pure returns (uint96)"
																		}
																	},
																	"id": 156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3794:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "3785:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 158,
															"nodeType": "ExpressionStatement",
															"src": "3785:66:0"
														}
													]
												},
												"id": 160,
												"nodeType": "IfStatement",
												"src": "3694:168:0",
												"trueBody": {
													"id": 151,
													"nodeType": "Block",
													"src": "3721:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 144,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "3735:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "3751:2:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3752:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3744:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": "uint96"
																	},
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3744:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "3735:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 150,
															"nodeType": "ExpressionStatement",
															"src": "3735:19:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 161,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "3872:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 165,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 162,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "3883:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3883:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3872:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 166,
														"indexExpression": {
															"argumentTypes": null,
															"id": 164,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3895:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3872:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 167,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "3906:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3872:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "3872:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "3937:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3937:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 173,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3958:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 170,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "3928:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3928:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "EmitStatement",
												"src": "3923:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3982:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 134,
												"id": 178,
												"nodeType": "Return",
												"src": "3975:11:0"
											}
										]
									},
									"documentation": "@notice Approve `spender` to transfer up to `amount` from `src`\n@dev This will overwrite the approval amount for `spender`\n and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n@param spender The address of the account which may transfer tokens\n@param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n@return Whether or not the approval succeeded",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3604:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3621:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3603:33:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3655:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3654:6:0"
									},
									"scope": 956,
									"src": "3587:406:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "4254:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 187,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "4271:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 189,
													"indexExpression": {
														"argumentTypes": null,
														"id": 188,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "4280:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4271:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 186,
												"id": 190,
												"nodeType": "Return",
												"src": "4264:24:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens held by the `account`\n@param account The address of the account to get the balance of\n@return The number of tokens held",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4208:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4208:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4207:17:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4248:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4247:6:0"
									},
									"scope": 956,
									"src": "4189:106:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "4622:162:0",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "4632:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 201,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4632:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 204,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "4655:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4666:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa0434f77a6c4f1d00fe7ba5b4b950cbb617a74b279e346f2c71f484bda86400",
																"typeString": "literal_string \"Niu::transfer: amount exceeds 96 bits\""
															},
															"value": "Niu::transfer: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_aa0434f77a6c4f1d00fe7ba5b4b950cbb617a74b279e346f2c71f484bda86400",
																"typeString": "literal_string \"Niu::transfer: amount exceeds 96 bits\""
															}
														],
														"id": 203,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4648:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4648:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4632:74:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "4732:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4732:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 211,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "4744:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "4749:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 208,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "4716:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4716:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "4716:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4773:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 200,
												"id": 216,
												"nodeType": "Return",
												"src": "4766:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `msg.sender` to `dst`\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "4569:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "4582:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4582:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4568:29:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "4616:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4615:6:0"
									},
									"scope": 956,
									"src": "4551:233:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "5173:568:0",
										"statements": [
											{
												"assignments": [
													230
												],
												"declarations": [
													{
														"constant": false,
														"id": 230,
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 291,
														"src": "5183:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 229,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5183:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 231,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "5201:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "5201:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5183:28:0"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"name": "spenderAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 291,
														"src": "5221:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 234,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "5221:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 236,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "5247:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 238,
														"indexExpression": {
															"argumentTypes": null,
															"id": 237,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "5258:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5247:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 240,
													"indexExpression": {
														"argumentTypes": null,
														"id": 239,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "5263:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5247:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5221:50:0"
											},
											{
												"assignments": [
													243
												],
												"declarations": [
													{
														"constant": false,
														"id": 243,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 291,
														"src": "5281:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 242,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "5281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 245,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "5304:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5315:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302",
																"typeString": "literal_string \"Niu::approve: amount exceeds 96 bits\""
															},
															"value": "Niu::approve: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302",
																"typeString": "literal_string \"Niu::approve: amount exceeds 96 bits\""
															}
														],
														"id": 244,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "5297:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5297:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5281:73:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 249,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "5369:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 250,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "5380:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5369:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 252,
															"name": "spenderAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "5387:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "5414:2:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5415:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5407:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint96_$",
																	"typeString": "type(uint96)"
																},
																"typeName": "uint96"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5407:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"src": "5387:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5369:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 282,
												"nodeType": "IfStatement",
												"src": "5365:305:0",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "5419:251:0",
													"statements": [
														{
															"assignments": [
																260
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 260,
																	"name": "newAllowance",
																	"nodeType": "VariableDeclaration",
																	"scope": 281,
																	"src": "5433:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 259,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "5433:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 266,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 262,
																		"name": "spenderAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "5461:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 263,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "5479:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4e69753a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5487:62:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_286b94815ef9c969765b740f7c02d7497dec20279d87a9d16db942ad7a7e336f",
																			"typeString": "literal_string \"Niu::transferFrom: transfer amount exceeds spender allowance\""
																		},
																		"value": "Niu::transferFrom: transfer amount exceeds spender allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_286b94815ef9c969765b740f7c02d7497dec20279d87a9d16db942ad7a7e336f",
																			"typeString": "literal_string \"Niu::transferFrom: transfer amount exceeds spender allowance\""
																		}
																	],
																	"id": 261,
																	"name": "sub96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "5455:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																		"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5455:95:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5433:117:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 267,
																			"name": "allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "5564:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																				"typeString": "mapping(address => mapping(address => uint96))"
																			}
																		},
																		"id": 270,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 268,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "5575:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5564:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																			"typeString": "mapping(address => uint96)"
																		}
																	},
																	"id": 271,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 269,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "5580:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5564:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 272,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "5591:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5564:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 274,
															"nodeType": "ExpressionStatement",
															"src": "5564:39:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 276,
																		"name": "src",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "5632:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 277,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "5637:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 278,
																		"name": "newAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "5646:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 275,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "5623:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5623:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "EmitStatement",
															"src": "5618:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 284,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "5696:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 285,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5701:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 286,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "5706:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 283,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "5680:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5680:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "5680:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5730:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 228,
												"id": 290,
												"nodeType": "Return",
												"src": "5723:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `src` to `dst`\n@param src The address of the source account\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "5107:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "5120:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "5133:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5106:42:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "5167:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5167:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5166:6:0"
									},
									"scope": 956,
									"src": "5085:656:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "5927:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 298,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "5954:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5954:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 300,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "5966:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 297,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "5944:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5944:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 296,
												"id": 302,
												"nodeType": "Return",
												"src": "5937:39:0"
											}
										]
									},
									"documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegatee The address to delegate votes to",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5901:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5900:19:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5927:0:0"
									},
									"scope": 956,
									"src": "5883:100:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "6511:672:0",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "6521:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 319,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 337,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 324,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "6568:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 327,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4,
																					"src": "6601:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				],
																				"id": 326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6595:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": "bytes"
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6595:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 325,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "6585:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6585:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 330,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "6609:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6609:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 333,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "6631:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Niu_$956",
																				"typeString": "contract Niu"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Niu_$956",
																				"typeString": "contract Niu"
																			}
																		],
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6623:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6623:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 322,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "6557:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6557:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6557:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 321,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "6547:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6547:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6521:117:0"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "6648:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 338,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6648:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 343,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "6690:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 344,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "6711:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 345,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "6722:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 346,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "6729:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 341,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "6679:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6679:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6679:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 340,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "6669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6669:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6648:89:0"
											},
											{
												"assignments": [
													351
												],
												"declarations": [
													{
														"constant": false,
														"id": 351,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "6747:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 350,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6747:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6791:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 356,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "6803:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 357,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "6820:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 353,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "6774:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6774:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6774:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 352,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "6764:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6764:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6747:85:0"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "6842:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 361,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6842:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 364,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6872:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 365,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6880:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 366,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "6883:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 367,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "6886:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 363,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "6862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6862:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6842:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 371,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "6906:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6927:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6919:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6919:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6906:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6931:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a3ad0c608c33832a3ff514e5c3e57dbcd9e3501f3d02bdba4dd75e8b3694dbc",
																"typeString": "literal_string \"Niu::delegateBySig: invalid signature\""
															},
															"value": "Niu::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a3ad0c608c33832a3ff514e5c3e57dbcd9e3501f3d02bdba4dd75e8b3694dbc",
																"typeString": "literal_string \"Niu::delegateBySig: invalid signature\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "6898:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "6898:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 380,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "6989:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6998:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 381,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "6998:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 383,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 382,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "7005:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6998:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6989:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7019:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd7149fe72a1be87be4ead6dc6a1d98fa245ff2213cc4223f269de7a7c707425",
																"typeString": "literal_string \"Niu::delegateBySig: invalid nonce\""
															},
															"value": "Niu::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd7149fe72a1be87be4ead6dc6a1d98fa245ff2213cc4223f269de7a7c707425",
																"typeString": "literal_string \"Niu::delegateBySig: invalid nonce\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "6981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6981:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "6981:74:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 390,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "7073:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 391,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "7080:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7073:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7088:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94d278442953e8a40a7fdf141370ff55e3b6df6e750d2f5cde258c09c5a35c64",
																"typeString": "literal_string \"Niu::delegateBySig: signature expired\""
															},
															"value": "Niu::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94d278442953e8a40a7fdf141370ff55e3b6df6e750d2f5cde258c09c5a35c64",
																"typeString": "literal_string \"Niu::delegateBySig: signature expired\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "7065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7065:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "7065:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 397,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "7155:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 398,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "7166:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 396,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "7145:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7145:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 318,
												"id": 400,
												"nodeType": "Return",
												"src": "7138:38:0"
											}
										]
									},
									"documentation": "@notice Delegates votes from signatory to `delegatee`\n@param delegatee The address to delegate votes to\n@param nonce The contract state required to match the signature\n@param expiry The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6429:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6448:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6448:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6460:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6460:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6473:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6473:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6482:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6493:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6428:75:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6511:0:0"
									},
									"scope": 956,
									"src": "6406:777:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "7450:146:0",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "7460:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 409,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "7460:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 411,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "7482:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 413,
													"indexExpression": {
														"argumentTypes": null,
														"id": 412,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "7497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7482:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7460:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 415,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7522:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7537:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7522:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7588:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7522:67:0",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 418,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "7541:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																	}
																},
																"id": 420,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 419,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "7553:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7541:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																	"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																}
															},
															"id": 424,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 421,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "7562:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7577:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7562:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7541:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																"typeString": "struct Niu.Checkpoint storage ref"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "7541:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 408,
												"id": 428,
												"nodeType": "Return",
												"src": "7515:74:0"
											}
										]
									},
									"documentation": "@notice Gets the current votes balance for `account`\n@param account The address to get votes balance\n@return The number of current votes for `account`",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "7402:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7401:17:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "7442:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 406,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "7442:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7441:8:0"
									},
									"scope": 956,
									"src": "7377:219:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "8105:1098:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 440,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "8123:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 441,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "8137:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8137:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8123:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8151:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23d2c3e584d2dae5a522f6448e0710df72687f4acd6e4ed038125be6ad063474",
																"typeString": "literal_string \"Niu::getPriorVotes: not yet determined\""
															},
															"value": "Niu::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23d2c3e584d2dae5a522f6448e0710df72687f4acd6e4ed038125be6ad063474",
																"typeString": "literal_string \"Niu::getPriorVotes: not yet determined\""
															}
														],
														"id": 439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "8115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8115:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "8115:77:0"
											},
											{
												"assignments": [
													448
												],
												"declarations": [
													{
														"constant": false,
														"id": 448,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "8203:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 447,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8203:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 449,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "8225:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 451,
													"indexExpression": {
														"argumentTypes": null,
														"id": 450,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "8240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8225:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8203:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 453,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "8262:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8278:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8262:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 459,
												"nodeType": "IfStatement",
												"src": "8258:56:0",
												"trueBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "8281:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8302:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 438,
															"id": 457,
															"nodeType": "Return",
															"src": "8295:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 460,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "8371:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																	}
																},
																"id": 462,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 461,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "8383:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8371:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																	"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																}
															},
															"id": 466,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 463,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "8392:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8407:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8392:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8371:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																"typeString": "struct Niu.Checkpoint storage ref"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "8371:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 468,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "8423:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8371:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 480,
												"nodeType": "IfStatement",
												"src": "8367:145:0",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "8436:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 470,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 38,
																			"src": "8457:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																			}
																		},
																		"id": 472,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 471,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "8469:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8457:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																			"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																		}
																	},
																	"id": 476,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 473,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 448,
																			"src": "8478:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8493:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8478:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8457:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																		"typeString": "struct Niu.Checkpoint storage ref"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 31,
																"src": "8457:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 438,
															"id": 478,
															"nodeType": "Return",
															"src": "8450:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 481,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "8570:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																	}
																},
																"id": 483,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 482,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "8582:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8570:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																	"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																}
															},
															"id": 485,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8591:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8570:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																"typeString": "struct Niu.Checkpoint storage ref"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "8570:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 487,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "8606:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8570:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 492,
												"nodeType": "IfStatement",
												"src": "8566:86:0",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "8619:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8640:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 438,
															"id": 490,
															"nodeType": "Return",
															"src": "8633:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "8662:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 493,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8677:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8662:16:0"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "8688:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 497,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 499,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "8703:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8718:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8703:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8688:31:0"
											},
											{
												"body": {
													"id": 551,
													"nodeType": "Block",
													"src": "8751:396:0",
													"statements": [
														{
															"assignments": [
																507
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 507,
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"scope": 551,
																	"src": "8765:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 506,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "8765:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 516,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 508,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "8781:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 509,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "8790:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 510,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "8798:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "8790:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 512,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8789:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8807:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "8789:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8781:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8765:43:0"
														},
														{
															"assignments": [
																518
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 518,
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"scope": 551,
																	"src": "8849:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$32_memory_ptr",
																		"typeString": "struct Niu.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 517,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 32,
																		"src": "8849:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$32_storage_ptr",
																			"typeString": "struct Niu.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 524,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 519,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "8872:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																		}
																	},
																	"id": 521,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 520,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "8884:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8872:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																		"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																	}
																},
																"id": 523,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 522,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "8893:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8872:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																	"typeString": "struct Niu.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8849:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 525,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "8918:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$32_memory_ptr",
																			"typeString": "struct Niu.Checkpoint memory"
																		}
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 29,
																	"src": "8918:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 527,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "8934:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8918:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 533,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 518,
																			"src": "9005:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$32_memory_ptr",
																				"typeString": "struct Niu.Checkpoint memory"
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 29,
																		"src": "9005:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 535,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "9020:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9005:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 548,
																	"nodeType": "Block",
																	"src": "9086:51:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 542,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "9104:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 545,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 543,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 507,
																						"src": "9112:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 544,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9121:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "9112:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "9104:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 547,
																			"nodeType": "ExpressionStatement",
																			"src": "9104:18:0"
																		}
																	]
																},
																"id": 549,
																"nodeType": "IfStatement",
																"src": "9001:136:0",
																"trueBody": {
																	"id": 541,
																	"nodeType": "Block",
																	"src": "9033:47:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 537,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "9051:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 538,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 507,
																					"src": "9059:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "9051:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 540,
																			"nodeType": "ExpressionStatement",
																			"src": "9051:14:0"
																		}
																	]
																}
															},
															"id": 550,
															"nodeType": "IfStatement",
															"src": "8914:223:0",
															"trueBody": {
																"id": 532,
																"nodeType": "Block",
																"src": "8947:48:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 529,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 518,
																				"src": "8972:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$32_memory_ptr",
																					"typeString": "struct Niu.Checkpoint memory"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 31,
																			"src": "8972:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 438,
																		"id": 531,
																		"nodeType": "Return",
																		"src": "8965:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 503,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "8736:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 504,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8744:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "8736:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 552,
												"nodeType": "WhileStatement",
												"src": "8729:418:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 553,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "9163:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																}
															},
															"id": 555,
															"indexExpression": {
																"argumentTypes": null,
																"id": 554,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "9175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9163:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
															}
														},
														"id": 557,
														"indexExpression": {
															"argumentTypes": null,
															"id": 556,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "9184:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9163:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
															"typeString": "struct Niu.Checkpoint storage ref"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 31,
													"src": "9163:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 438,
												"id": 559,
												"nodeType": "Return",
												"src": "9156:40:0"
											}
										]
									},
									"documentation": "@notice Determine the prior number of votes for an account as of a block number\n@dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n@param account The address of the account to check\n@param blockNumber The block number to get the vote balance at\n@return The number of votes the account had as of the given block",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "8041:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "8058:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8058:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8040:35:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "8097:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 436,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "8097:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8096:8:0"
									},
									"scope": 956,
									"src": "8018:1185:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "9275:301:0",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "9285:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9285:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 573,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 570,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "9311:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 572,
													"indexExpression": {
														"argumentTypes": null,
														"id": 571,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "9321:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9311:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9285:46:0"
											},
											{
												"assignments": [
													575
												],
												"declarations": [
													{
														"constant": false,
														"id": 575,
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "9341:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 574,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "9341:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 576,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9367:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 578,
													"indexExpression": {
														"argumentTypes": null,
														"id": 577,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "9376:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9367:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9341:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 580,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "9396:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 582,
														"indexExpression": {
															"argumentTypes": null,
															"id": 581,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "9406:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9396:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 583,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "9419:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9396:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "9396:32:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 587,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "9460:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "9471:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 589,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "9488:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 586,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "9444:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9444:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "EmitStatement",
												"src": "9439:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 593,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "9524:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 594,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "9541:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 595,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "9552:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 592,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "9509:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9509:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "9509:60:0"
											}
										]
									},
									"documentation": null,
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "9228:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "9247:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9227:38:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9275:0:0"
									},
									"scope": 956,
									"src": "9209:367:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "9657:526:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 609,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "9675:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9690:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9682:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9682:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9675:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9694:61:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_146cacfb4bc260431b89ec63c777a908ad6748f2b07fb7fc90e13e19e310da71",
																"typeString": "literal_string \"Niu::_transferTokens: cannot transfer from the zero address\""
															},
															"value": "Niu::_transferTokens: cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_146cacfb4bc260431b89ec63c777a908ad6748f2b07fb7fc90e13e19e310da71",
																"typeString": "literal_string \"Niu::_transferTokens: cannot transfer from the zero address\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "9667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9667:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "9667:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 618,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "9774:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9789:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9781:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9781:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9774:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9793:59:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0cc2fd9bbb55c782798aa8161c0ac56a8edb953c83dd31cc403717eed7058eb6",
																"typeString": "literal_string \"Niu::_transferTokens: cannot transfer to the zero address\""
															},
															"value": "Niu::_transferTokens: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0cc2fd9bbb55c782798aa8161c0ac56a8edb953c83dd31cc403717eed7058eb6",
																"typeString": "literal_string \"Niu::_transferTokens: cannot transfer to the zero address\""
															}
														],
														"id": 617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "9766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9766:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "9766:87:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 626,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "9864:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 628,
														"indexExpression": {
															"argumentTypes": null,
															"id": 627,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "9873:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9864:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 630,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "9886:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 632,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 631,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "9895:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9886:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 633,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "9901:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9909:55:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_692ec8c90bc6d060b4b8461e07e5e6df665fc0757847ed6b4e3f21b09d8256ca",
																	"typeString": "literal_string \"Niu::_transferTokens: transfer amount exceeds balance\""
																},
																"value": "Niu::_transferTokens: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_692ec8c90bc6d060b4b8461e07e5e6df665fc0757847ed6b4e3f21b09d8256ca",
																	"typeString": "literal_string \"Niu::_transferTokens: transfer amount exceeds balance\""
																}
															],
															"id": 629,
															"name": "sub96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "9880:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9880:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "9864:101:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "9864:101:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 638,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "9975:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 640,
														"indexExpression": {
															"argumentTypes": null,
															"id": 639,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "9984:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9975:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 642,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "9997:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 644,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 643,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "10006:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9997:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 645,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "10012:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10020:49:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b162a08cdd346994d7a9c03eee20f68ee11c6da5ce67892863a5b8b47f9f80cf",
																	"typeString": "literal_string \"Niu::_transferTokens: transfer amount overflows\""
																},
																"value": "Niu::_transferTokens: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_b162a08cdd346994d7a9c03eee20f68ee11c6da5ce67892863a5b8b47f9f80cf",
																	"typeString": "literal_string \"Niu::_transferTokens: transfer amount overflows\""
																}
															],
															"id": 641,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "9991:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9991:79:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "9975:95:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "9975:95:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 651,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "10094:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 652,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10099:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 653,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10104:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 650,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "10085:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10085:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "EmitStatement",
												"src": "10080:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 657,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "10137:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 659,
															"indexExpression": {
																"argumentTypes": null,
																"id": 658,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "10147:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10137:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 660,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "10153:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 662,
															"indexExpression": {
																"argumentTypes": null,
																"id": 661,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "10163:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10153:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10169:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 656,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "10122:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10122:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "10122:54:0"
											}
										]
									},
									"documentation": null,
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "9607:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "9620:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "9633:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 604,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "9633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9606:41:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9657:0:0"
									},
									"scope": 956,
									"src": "9582:601:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "10269:841:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 676,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "10283:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 677,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "10293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10283:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 679,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "10303:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10312:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10303:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10283:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 772,
												"nodeType": "IfStatement",
												"src": "10279:825:0",
												"trueBody": {
													"id": 771,
													"nodeType": "Block",
													"src": "10315:789:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 683,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "10333:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10351:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10343:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10343:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "10333:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 726,
															"nodeType": "IfStatement",
															"src": "10329:376:0",
															"trueBody": {
																"id": 725,
																"nodeType": "Block",
																"src": "10355:350:0",
																"statements": [
																	{
																		"assignments": [
																			689
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 689,
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 725,
																				"src": "10373:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 688,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "10373:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 693,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 690,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 42,
																				"src": "10392:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 692,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 691,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "10407:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10392:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10373:41:0"
																	},
																	{
																		"assignments": [
																			695
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 695,
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 725,
																				"src": "10432:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 694,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "10432:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 709,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 696,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 689,
																					"src": "10451:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 697,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10463:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "10451:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10510:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "10451:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 699,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "10467:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																							}
																						},
																						"id": 701,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 700,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 669,
																							"src": "10479:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10467:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																							"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																						}
																					},
																					"id": 705,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 704,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 702,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 689,
																							"src": "10487:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 703,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10499:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "10487:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10467:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																						"typeString": "struct Niu.Checkpoint storage ref"
																					}
																				},
																				"id": 706,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 31,
																				"src": "10467:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10432:79:0"
																	},
																	{
																		"assignments": [
																			711
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 711,
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 725,
																				"src": "10529:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 710,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "10529:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 717,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 713,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 695,
																					"src": "10554:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 714,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "10565:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10573:41:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3572f2e3a73d8992ffd14bbdc492a68ea3425b205fa2e411c1a12014bc6f8444",
																						"typeString": "literal_string \"Niu::_moveVotes: vote amount underflows\""
																					},
																					"value": "Niu::_moveVotes: vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3572f2e3a73d8992ffd14bbdc492a68ea3425b205fa2e411c1a12014bc6f8444",
																						"typeString": "literal_string \"Niu::_moveVotes: vote amount underflows\""
																					}
																				],
																				"id": 712,
																				"name": "sub96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 943,
																				"src": "10548:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10548:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10529:86:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 719,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "10650:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 720,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 689,
																					"src": "10658:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 721,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 695,
																					"src": "10669:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 722,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 711,
																					"src": "10680:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 718,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "10633:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10633:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 724,
																		"nodeType": "ExpressionStatement",
																		"src": "10633:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 727,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "10723:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10741:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10733:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10733:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "10723:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 770,
															"nodeType": "IfStatement",
															"src": "10719:375:0",
															"trueBody": {
																"id": 769,
																"nodeType": "Block",
																"src": "10745:349:0",
																"statements": [
																	{
																		"assignments": [
																			733
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 733,
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 769,
																				"src": "10763:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 732,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "10763:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 737,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 734,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 42,
																				"src": "10782:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 736,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 735,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 671,
																				"src": "10797:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10782:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10763:41:0"
																	},
																	{
																		"assignments": [
																			739
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 739,
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 769,
																				"src": "10822:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 738,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "10822:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 753,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 740,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "10841:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 741,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10853:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "10841:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10900:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "10841:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 743,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "10857:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																							}
																						},
																						"id": 745,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 744,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 671,
																							"src": "10869:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10857:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																							"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																						}
																					},
																					"id": 749,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 748,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 746,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 733,
																							"src": "10877:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 747,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10889:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "10877:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10857:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																						"typeString": "struct Niu.Checkpoint storage ref"
																					}
																				},
																				"id": 750,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 31,
																				"src": "10857:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10822:79:0"
																	},
																	{
																		"assignments": [
																			755
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 755,
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 769,
																				"src": "10919:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 754,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "10919:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 761,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 757,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 739,
																					"src": "10944:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 758,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "10955:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
																					"id": 759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10963:40:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ba9d0177eed180b5d6a2c76dfc689b87bfd0698268c3a8db9e79a797cb697239",
																						"typeString": "literal_string \"Niu::_moveVotes: vote amount overflows\""
																					},
																					"value": "Niu::_moveVotes: vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ba9d0177eed180b5d6a2c76dfc689b87bfd0698268c3a8db9e79a797cb697239",
																						"typeString": "literal_string \"Niu::_moveVotes: vote amount overflows\""
																					}
																				],
																				"id": 756,
																				"name": "add96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "10938:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10938:66:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10919:85:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 763,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 671,
																					"src": "11039:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 764,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "11047:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 765,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 739,
																					"src": "11058:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 766,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "11069:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 762,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "11022:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11022:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 768,
																		"nodeType": "ExpressionStatement",
																		"src": "11022:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "10213:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "10229:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "10245:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 672,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "10245:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10212:47:0"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10269:0:0"
									},
									"scope": 956,
									"src": "10189:921:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "11225:508:0",
										"statements": [
											{
												"assignments": [
													786
												],
												"declarations": [
													{
														"constant": false,
														"id": 786,
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"scope": 846,
														"src": "11233:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 785,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "11233:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 792,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 788,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "11261:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11261:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11275:53:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4bece53613ac1432b74b912202f09eb50cb0dcb5908cbbd578098234a3a7791c",
																"typeString": "literal_string \"Niu::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "Niu::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_4bece53613ac1432b74b912202f09eb50cb0dcb5908cbbd578098234a3a7791c",
																"typeString": "literal_string \"Niu::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 787,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "11254:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11254:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11233:96:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 793,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "11342:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11357:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11342:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 796,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "11362:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																		}
																	},
																	"id": 798,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 797,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "11374:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11362:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																		"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																	}
																},
																"id": 802,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 799,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "11385:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11400:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "11385:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11362:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																	"typeString": "struct Niu.Checkpoint storage ref"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 29,
															"src": "11362:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 804,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "11416:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "11362:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11342:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "11513:149:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 819,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 38,
																			"src": "11525:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																			}
																		},
																		"id": 822,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 820,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "11537:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11525:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																			"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																		}
																	},
																	"id": 823,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 821,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "11548:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11525:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																		"typeString": "struct Niu.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 825,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "11575:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 826,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "11588:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"id": 824,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "11564:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$32_storage_ptr_$",
																			"typeString": "type(struct Niu.Checkpoint storage pointer)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11564:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$32_memory",
																		"typeString": "struct Niu.Checkpoint memory"
																	}
																},
																"src": "11525:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																	"typeString": "struct Niu.Checkpoint storage ref"
																}
															},
															"id": 829,
															"nodeType": "ExpressionStatement",
															"src": "11525:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 830,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "11609:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 832,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 831,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "11624:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11609:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 833,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "11637:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11652:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "11637:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "11609:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 837,
															"nodeType": "ExpressionStatement",
															"src": "11609:44:0"
														}
													]
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "11338:324:0",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "11429:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 807,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 38,
																				"src": "11441:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																				}
																			},
																			"id": 812,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 808,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 776,
																				"src": "11453:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11441:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$32_storage_$",
																				"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																			}
																		},
																		"id": 813,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 809,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 778,
																				"src": "11464:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11479:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "11464:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11441:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$32_storage",
																			"typeString": "struct Niu.Checkpoint storage ref"
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 31,
																	"src": "11441:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "11490:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "11441:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 817,
															"nodeType": "ExpressionStatement",
															"src": "11441:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 841,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "11696:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 842,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "11707:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "11717:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 840,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "11675:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11675:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "EmitStatement",
												"src": "11670:56:0"
											}
										]
									},
									"documentation": null,
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "11142:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "11161:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 777,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "11161:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "11182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 779,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "11199:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 781,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11199:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11141:74:0"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11225:0:0"
									},
									"scope": 956,
									"src": "11116:617:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "11822:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 857,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "11840:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11844:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11847:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11844:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "11840:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 862,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "11851:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "11832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11832:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "11832:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 866,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "11888:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11881:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11881:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 855,
												"id": 868,
												"nodeType": "Return",
												"src": "11874:16:0"
											}
										]
									},
									"documentation": null,
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "11755:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11755:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "11763:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11763:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11754:36:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "11814:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 853,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "11814:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11813:8:0"
									},
									"scope": 956,
									"src": "11739:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "11986:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 880,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "12004:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12008:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3936",
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12011:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_96_by_1",
																		"typeString": "int_const 96"
																	},
																	"value": "96"
																},
																"src": "12008:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																}
															},
															"src": "12004:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 885,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "12015:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "11996:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11996:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "11996:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 889,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "12052:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12045:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": "uint96"
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12045:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 878,
												"id": 891,
												"nodeType": "Return",
												"src": "12038:16:0"
											}
										]
									},
									"documentation": null,
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "11919:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11919:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "11927:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11927:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11918:36:0"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "11978:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 876,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11978:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11977:8:0"
									},
									"scope": 956,
									"src": "11903:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "12161:90:0",
										"statements": [
											{
												"assignments": [
													905
												],
												"declarations": [
													{
														"constant": false,
														"id": 905,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 919,
														"src": "12171:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 904,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "12171:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 909,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 906,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "12182:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 907,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "12186:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "12182:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12171:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 911,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "12205:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 912,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "12210:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "12205:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 914,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "12213:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "12197:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12197:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "12197:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 917,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 905,
													"src": "12243:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 903,
												"id": 918,
												"nodeType": "Return",
												"src": "12236:8:0"
											}
										]
									},
									"documentation": null,
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "12082:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 894,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12082:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "12092:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 896,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12092:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "12102:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12081:48:0"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "12153:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 901,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12153:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12152:8:0"
									},
									"scope": 956,
									"src": "12067:184:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "12351:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 932,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "12369:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 933,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "12374:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "12369:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 935,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12377:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 931,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															975
														],
														"referencedDeclaration": 975,
														"src": "12361:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12361:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "12361:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 938,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "12407:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 939,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "12411:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "12407:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 930,
												"id": 941,
												"nodeType": "Return",
												"src": "12400:12:0"
											}
										]
									},
									"documentation": null,
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "12272:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 921,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "12282:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 923,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12282:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "12292:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 925,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12292:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12271:48:0"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "12343:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 928,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12342:8:0"
									},
									"scope": 956,
									"src": "12257:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "12476:98:0",
										"statements": [
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "12486:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12486:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 949,
															"isOffset": false,
															"isSlot": false,
															"src": "12522:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 951,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "12511:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 952,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "12560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 947,
												"id": 953,
												"nodeType": "Return",
												"src": "12553:14:0"
											}
										]
									},
									"documentation": null,
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12444:2:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "12470:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12470:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12469:6:0"
									},
									"scope": 956,
									"src": "12425:149:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 957,
							"src": "62:12514:0"
						}
					],
					"src": "0:12577:0"
				},
				"id": 0
			}
		}
	}
}