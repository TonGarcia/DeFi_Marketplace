{
	"id": "1f51a96965cff71dcf307f264fbd834a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Governance/Niu.sol": {
				"content": "pragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\ncontract Niu {\n    /// @notice EIP-20 token name for this token\n    string public constant name = \"Niural\";\n\n    /// @notice EIP-20 token symbol for this token\n    string public constant symbol = \"NIU\";\n\n    /// @notice EIP-20 token decimals for this token\n    uint8 public constant decimals = 18;\n\n    /// @notice Total number of tokens in circulation\n    uint public constant totalSupply = 10000000e18; // 10 million Niu\n\n    /// @notice Allowance amounts on behalf of others\n    mapping (address => mapping (address => uint96)) internal allowances;\n\n    /// @notice Official record of token balances for each account\n    mapping (address => uint96) internal balances;\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint96 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /// @notice The standard EIP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard EIP-20 approval event\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /**\n     * @notice Construct a new Niu token\n     * @param account The initial account to grant all the tokens\n     */\n    constructor(address account) public {\n        balances[account] = uint96(totalSupply);\n        emit Transfer(address(0), account, totalSupply);\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param account The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address account, address spender) external view returns (uint) {\n        return allowances[account][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n     * @param spender The address of the account which may transfer tokens\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint rawAmount) external returns (bool) {\n        uint96 amount;\n        if (rawAmount == uint(-1)) {\n            amount = uint96(-1);\n        } else {\n            amount = safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\");\n        }\n\n        allowances[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint) {\n        return balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address dst, uint rawAmount) external returns (bool) {\n        uint96 amount = safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\");\n        _transferTokens(msg.sender, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param src The address of the source account\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\n        address spender = msg.sender;\n        uint96 spenderAllowance = allowances[src][spender];\n        uint96 amount = safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\");\n\n        if (spender != src && spenderAllowance != uint96(-1)) {\n            uint96 newAllowance = sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\");\n            allowances[src][spender] = newAllowance;\n\n            emit Approval(src, spender, newAllowance);\n        }\n\n        _transferTokens(src, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Niu::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"Niu::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"Niu::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\n        require(blockNumber < block.number, \"Niu::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint96 delegatorBalance = balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _transferTokens(address src, address dst, uint96 amount) internal {\n        require(src != address(0), \"Niu::_transferTokens: cannot transfer from the zero address\");\n        require(dst != address(0), \"Niu::_transferTokens: cannot transfer to the zero address\");\n\n        balances[src] = sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\");\n        balances[dst] = add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\");\n        emit Transfer(src, dst, amount);\n\n        _moveDelegates(delegates[src], delegates[dst], amount);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint96 srcRepNew = sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\");\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint96 dstRepNew = add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\");\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {\n      uint32 blockNumber = safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\");\n\n      if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n          checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n      } else {\n          checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n          numCheckpoints[delegatee] = nCheckpoints + 1;\n      }\n\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {\n        require(n < 2**96, errorMessage);\n        return uint96(n);\n    }\n\n    function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        uint96 c = a + b;\n        require(c >= a, errorMessage);\n        return c;\n    }\n\n    function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Governance/Niu.sol": {
				"Niu": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint96",
									"name": "votes",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"params": {
									"account": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"return": "The number of tokens approved"
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
								"params": {
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"return": "The number of tokens held"
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens"
								}
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"return": "The number of current votes for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"return": "The number of votes the account had as of the given block"
							},
							"transfer(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer",
									"src": "The address of the source account"
								},
								"return": "Whether or not the transfer succeeded"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"Governance/Niu.sol\":60:12574  contract Niu {... */\n  mstore(0x40, 0x80)\n    /* \"Governance/Niu.sol\":2538:2687  constructor(address account) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Governance/Niu.sol\":2538:2687  constructor(address account) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  tag_2\n  swap2\n  swap1\n  dup2\n  add\n  swap1\n  jump(tag_3)\ntag_2:\n    /* \"Governance/Niu.sol\":452:463  10000000e18 */\n  0x084595161401484a000000\n    /* \"Governance/Niu.sol\":2584:2592  balances */\n  0x01\n    /* \"Governance/Niu.sol\":2584:2601  balances[account] */\n  0x00\n    /* \"Governance/Niu.sol\":2593:2600  account */\n  dup4\n    /* \"Governance/Niu.sol\":2584:2601  balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"Governance/Niu.sol\":2584:2623  balances[account] = uint96(totalSupply) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Governance/Niu.sol\":2659:2666  account */\n  dup1\n    /* \"Governance/Niu.sol\":2638:2680  Transfer(address(0), account, totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Governance/Niu.sol\":2655:2656  0 */\n  0x00\n    /* \"Governance/Niu.sol\":2638:2680  Transfer(address(0), account, totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"Governance/Niu.sol\":452:463  10000000e18 */\n  0x084595161401484a000000\n    /* \"Governance/Niu.sol\":2638:2680  Transfer(address(0), account, totalSupply) */\n  mload(0x40)\n  tag_6\n  swap2\n  swap1\n  jump(tag_7)\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Governance/Niu.sol\":2538:2687  constructor(address account) public {... */\n  pop\n    /* \"Governance/Niu.sol\":60:12574  contract Niu {... */\n  jump(tag_8)\n    /* \"--CODEGEN--\":5:139   */\ntag_10:\n  0x00\n    /* \"--CODEGEN--\":89:95   */\n  dup2\n    /* \"--CODEGEN--\":83:96   */\n  mload\n    /* \"--CODEGEN--\":74:96   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":101:134   */\n  tag_11\n    /* \"--CODEGEN--\":128:133   */\n  dup2\n    /* \"--CODEGEN--\":101:134   */\n  jump(tag_12)\ntag_11:\n    /* \"--CODEGEN--\":68:139   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":146:409   */\ntag_3:\n  0x00\n    /* \"--CODEGEN--\":261:263   */\n  0x20\n    /* \"--CODEGEN--\":249:258   */\n  dup3\n    /* \"--CODEGEN--\":240:247   */\n  dup5\n    /* \"--CODEGEN--\":236:259   */\n  sub\n    /* \"--CODEGEN--\":232:264   */\n  slt\n    /* \"--CODEGEN--\":229:231   */\n  iszero\n  tag_13\n  jumpi\n    /* \"--CODEGEN--\":277:278   */\n  0x00\n    /* \"--CODEGEN--\":274:275   */\n  dup1\n    /* \"--CODEGEN--\":267:279   */\n  revert\n    /* \"--CODEGEN--\":229:231   */\ntag_13:\n    /* \"--CODEGEN--\":312:313   */\n  0x00\n    /* \"--CODEGEN--\":329:393   */\n  tag_14\n    /* \"--CODEGEN--\":385:392   */\n  dup5\n    /* \"--CODEGEN--\":376:382   */\n  dup3\n    /* \"--CODEGEN--\":365:374   */\n  dup6\n    /* \"--CODEGEN--\":361:383   */\n  add\n    /* \"--CODEGEN--\":329:393   */\n  jump(tag_10)\ntag_14:\n    /* \"--CODEGEN--\":319:393   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":291:399   */\n  pop\n    /* \"--CODEGEN--\":223:409   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":416:529   */\ntag_15:\n    /* \"--CODEGEN--\":499:523   */\n  tag_16\n    /* \"--CODEGEN--\":517:522   */\n  dup2\n    /* \"--CODEGEN--\":499:523   */\n  jump(tag_17)\ntag_16:\n    /* \"--CODEGEN--\":494:497   */\n  dup3\n    /* \"--CODEGEN--\":487:524   */\n  mstore\n    /* \"--CODEGEN--\":481:529   */\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":536:749   */\ntag_7:\n  0x00\n    /* \"--CODEGEN--\":654:656   */\n  0x20\n    /* \"--CODEGEN--\":643:652   */\n  dup3\n    /* \"--CODEGEN--\":639:657   */\n  add\n    /* \"--CODEGEN--\":631:657   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":668:739   */\n  tag_18\n    /* \"--CODEGEN--\":736:737   */\n  0x00\n    /* \"--CODEGEN--\":725:734   */\n  dup4\n    /* \"--CODEGEN--\":721:738   */\n  add\n    /* \"--CODEGEN--\":712:718   */\n  dup5\n    /* \"--CODEGEN--\":668:739   */\n  jump(tag_15)\ntag_18:\n    /* \"--CODEGEN--\":625:749   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":756:847   */\ntag_19:\n  0x00\n    /* \"--CODEGEN--\":818:842   */\n  tag_20\n    /* \"--CODEGEN--\":836:841   */\n  dup3\n    /* \"--CODEGEN--\":818:842   */\n  jump(tag_21)\ntag_20:\n    /* \"--CODEGEN--\":807:842   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":801:847   */\n  swap2\n  swap1\n  pop\n  jump\n    /* \"--CODEGEN--\":854:975   */\ntag_21:\n  0x00\n    /* \"--CODEGEN--\":927:969   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"--CODEGEN--\":920:925   */\n  dup3\n    /* \"--CODEGEN--\":916:970   */\n  and\n    /* \"--CODEGEN--\":905:970   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":899:975   */\n  swap2\n  swap1\n  pop\n  jump\n    /* \"--CODEGEN--\":982:1054   */\ntag_17:\n  0x00\n    /* \"--CODEGEN--\":1044:1049   */\n  dup2\n    /* \"--CODEGEN--\":1033:1049   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":1027:1054   */\n  swap2\n  swap1\n  pop\n  jump\n    /* \"--CODEGEN--\":1061:1178   */\ntag_12:\n    /* \"--CODEGEN--\":1130:1154   */\n  tag_22\n    /* \"--CODEGEN--\":1148:1153   */\n  dup2\n    /* \"--CODEGEN--\":1130:1154   */\n  jump(tag_19)\ntag_22:\n    /* \"--CODEGEN--\":1123:1128   */\n  dup2\n    /* \"--CODEGEN--\":1120:1155   */\n  eq\n    /* \"--CODEGEN--\":1110:1112   */\n  tag_23\n  jumpi\n    /* \"--CODEGEN--\":1169:1170   */\n  0x00\n    /* \"--CODEGEN--\":1166:1167   */\n  dup1\n    /* \"--CODEGEN--\":1159:1171   */\n  revert\n    /* \"--CODEGEN--\":1110:1112   */\ntag_23:\n    /* \"--CODEGEN--\":1104:1178   */\n  pop\n  jump\n    /* \"Governance/Niu.sol\":60:12574  contract Niu {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Governance/Niu.sol\":60:12574  contract Niu {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Governance/Niu.sol\":60:12574  contract Niu {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb4b5ea57\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Governance/Niu.sol\":128:166  string public constant name = \"Niural\" */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":3585:3991  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_30\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_31)\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      jump(tag_34)\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":417:463  uint public constant totalSupply = 10000000e18 */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      jump(tag_38)\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":1322:1444  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      jump(tag_42)\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":5083:5739  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_44\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_45)\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      jump(tag_34)\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":321:356  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      jump(tag_51)\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":787:832  mapping (address => address) public delegates */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_53\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_54)\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      jump(tag_57)\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":5881:5981  function delegate(address delegatee) public {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_59\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_54)\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Governance/Niu.sol\":1203:1252  mapping (address => uint32) public numCheckpoints */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_62\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_54)\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      jump(tag_65)\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":4187:4293  function balanceOf(address account) external view returns (uint) {... */\n    tag_12:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_67\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_54)\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      jump(tag_38)\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":8016:9201  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_13:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_71\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_31)\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      jump(tag_74)\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":1730:1769  mapping (address => uint) public nonces */\n    tag_14:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_76\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_54)\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      jump(tag_38)\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":224:261  string public constant symbol = \"NIU\" */\n    tag_15:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      jump(tag_28)\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":4549:4782  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_16:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_83\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_31)\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      jump(tag_34)\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":7375:7594  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_17:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_87\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_54)\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      jump(tag_74)\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":6404:7181  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_18:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_91\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_92)\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      stop\n        /* \"Governance/Niu.sol\":2983:3117  function allowance(address account, address spender) external view returns (uint) {... */\n    tag_19:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_95\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_96)\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      jump(tag_38)\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":1535:1652  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_20:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      jump(tag_42)\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":1067:1137  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_21:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_103\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_104)\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_106\n      swap3\n      swap2\n      swap1\n      jump(tag_107)\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Governance/Niu.sol\":128:166  string public constant name = \"Niural\" */\n    tag_26:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4e697572616c0000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":3585:3991  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_32:\n        /* \"Governance/Niu.sol\":3653:3657  bool */\n      0x00\n        /* \"Governance/Niu.sol\":3669:3682  uint96 amount */\n      dup1\n        /* \"Governance/Niu.sol\":3714:3716  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Governance/Niu.sol\":3696:3705  rawAmount */\n      dup4\n        /* \"Governance/Niu.sol\":3696:3717  rawAmount == uint(-1) */\n      eq\n        /* \"Governance/Niu.sol\":3692:3860  if (rawAmount == uint(-1)) {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"Governance/Niu.sol\":3749:3751  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Governance/Niu.sol\":3733:3752  amount = uint96(-1) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":3692:3860  if (rawAmount == uint(-1)) {... */\n      jump(tag_110)\n    tag_109:\n        /* \"Governance/Niu.sol\":3792:3849  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      tag_111\n        /* \"Governance/Niu.sol\":3799:3808  rawAmount */\n      dup4\n        /* \"Governance/Niu.sol\":3792:3849  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302\n      0x24\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":3792:3798  safe96 */\n      tag_112\n        /* \"Governance/Niu.sol\":3792:3849  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_111:\n        /* \"Governance/Niu.sol\":3783:3849  amount = safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":3692:3860  if (rawAmount == uint(-1)) {... */\n    tag_110:\n        /* \"Governance/Niu.sol\":3904:3910  amount */\n      dup1\n        /* \"Governance/Niu.sol\":3870:3880  allowances */\n      0x00\n        /* \"Governance/Niu.sol\":3870:3892  allowances[msg.sender] */\n      dup1\n        /* \"Governance/Niu.sol\":3881:3891  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":3870:3892  allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":3870:3901  allowances[msg.sender][spender] */\n      0x00\n        /* \"Governance/Niu.sol\":3893:3900  spender */\n      dup7\n        /* \"Governance/Niu.sol\":3870:3901  allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":3870:3910  allowances[msg.sender][spender] = amount */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":3947:3954  spender */\n      dup4\n        /* \"Governance/Niu.sol\":3926:3963  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":3935:3945  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":3926:3963  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Governance/Niu.sol\":3956:3962  amount */\n      dup4\n        /* \"Governance/Niu.sol\":3926:3963  Approval(msg.sender, spender, amount) */\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      jump(tag_114)\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Governance/Niu.sol\":3980:3984  true */\n      0x01\n        /* \"Governance/Niu.sol\":3973:3984  return true */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":3585:3991  function approve(address spender, uint rawAmount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":417:463  uint public constant totalSupply = 10000000e18 */\n    tag_36:\n        /* \"Governance/Niu.sol\":452:463  10000000e18 */\n      0x084595161401484a000000\n        /* \"Governance/Niu.sol\":417:463  uint public constant totalSupply = 10000000e18 */\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":1322:1444  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_40:\n        /* \"Governance/Niu.sol\":1364:1444  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      tag_115\n      swap1\n      jump(tag_116)\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Governance/Niu.sol\":1322:1444  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":5083:5739  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_46:\n        /* \"Governance/Niu.sol\":5165:5169  bool */\n      0x00\n        /* \"Governance/Niu.sol\":5181:5196  address spender */\n      dup1\n        /* \"Governance/Niu.sol\":5199:5209  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":5181:5209  address spender = msg.sender */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":5219:5242  uint96 spenderAllowance */\n      0x00\n        /* \"Governance/Niu.sol\":5245:5255  allowances */\n      dup1\n        /* \"Governance/Niu.sol\":5245:5260  allowances[src] */\n      0x00\n        /* \"Governance/Niu.sol\":5256:5259  src */\n      dup8\n        /* \"Governance/Niu.sol\":5245:5260  allowances[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":5245:5269  allowances[src][spender] */\n      0x00\n        /* \"Governance/Niu.sol\":5261:5268  spender */\n      dup4\n        /* \"Governance/Niu.sol\":5245:5269  allowances[src][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":5219:5269  uint96 spenderAllowance = allowances[src][spender] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":5279:5292  uint96 amount */\n      0x00\n        /* \"Governance/Niu.sol\":5295:5352  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      tag_118\n        /* \"Governance/Niu.sol\":5302:5311  rawAmount */\n      dup6\n        /* \"Governance/Niu.sol\":5295:5352  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302\n      0x24\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":5295:5301  safe96 */\n      tag_112\n        /* \"Governance/Niu.sol\":5295:5352  safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_118:\n        /* \"Governance/Niu.sol\":5279:5352  uint96 amount = safe96(rawAmount, \"Niu::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":5378:5381  src */\n      dup7\n        /* \"Governance/Niu.sol\":5367:5381  spender != src */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":5367:5374  spender */\n      dup4\n        /* \"Governance/Niu.sol\":5367:5381  spender != src */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":5367:5415  spender != src && spenderAllowance != uint96(-1) */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"Governance/Niu.sol\":5412:5414  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Governance/Niu.sol\":5385:5415  spenderAllowance != uint96(-1) */\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":5385:5401  spenderAllowance */\n      dup3\n        /* \"Governance/Niu.sol\":5385:5415  spenderAllowance != uint96(-1) */\n      0xffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":5367:5415  spender != src && spenderAllowance != uint96(-1) */\n    tag_119:\n        /* \"Governance/Niu.sol\":5363:5668  if (spender != src && spenderAllowance != uint96(-1)) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"Governance/Niu.sol\":5431:5450  uint96 newAllowance */\n      0x00\n        /* \"Governance/Niu.sol\":5453:5548  sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\") */\n      tag_121\n        /* \"Governance/Niu.sol\":5459:5475  spenderAllowance */\n      dup4\n        /* \"Governance/Niu.sol\":5477:5483  amount */\n      dup4\n        /* \"Governance/Niu.sol\":5453:5548  sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x3c\n      dup2\n      mstore\n      0x20\n      add\n      data_286b94815ef9c969765b740f7c02d7497dec20279d87a9d16db942ad7a7e336f\n      0x3c\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":5453:5458  sub96 */\n      tag_122\n        /* \"Governance/Niu.sol\":5453:5548  sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\") */\n      jump\t// in\n    tag_121:\n        /* \"Governance/Niu.sol\":5431:5548  uint96 newAllowance = sub96(spenderAllowance, amount, \"Niu::transferFrom: transfer amount exceeds spender allowance\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":5589:5601  newAllowance */\n      dup1\n        /* \"Governance/Niu.sol\":5562:5572  allowances */\n      0x00\n        /* \"Governance/Niu.sol\":5562:5577  allowances[src] */\n      dup1\n        /* \"Governance/Niu.sol\":5573:5576  src */\n      dup11\n        /* \"Governance/Niu.sol\":5562:5577  allowances[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":5562:5586  allowances[src][spender] */\n      0x00\n        /* \"Governance/Niu.sol\":5578:5585  spender */\n      dup7\n        /* \"Governance/Niu.sol\":5562:5586  allowances[src][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":5562:5601  allowances[src][spender] = newAllowance */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":5635:5642  spender */\n      dup4\n        /* \"Governance/Niu.sol\":5621:5657  Approval(src, spender, newAllowance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":5630:5633  src */\n      dup9\n        /* \"Governance/Niu.sol\":5621:5657  Approval(src, spender, newAllowance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Governance/Niu.sol\":5644:5656  newAllowance */\n      dup4\n        /* \"Governance/Niu.sol\":5621:5657  Approval(src, spender, newAllowance) */\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      jump(tag_114)\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Governance/Niu.sol\":5363:5668  if (spender != src && spenderAllowance != uint96(-1)) {... */\n      pop\n    tag_120:\n        /* \"Governance/Niu.sol\":5678:5711  _transferTokens(src, dst, amount) */\n      tag_124\n        /* \"Governance/Niu.sol\":5694:5697  src */\n      dup8\n        /* \"Governance/Niu.sol\":5699:5702  dst */\n      dup8\n        /* \"Governance/Niu.sol\":5704:5710  amount */\n      dup4\n        /* \"Governance/Niu.sol\":5678:5693  _transferTokens */\n      tag_125\n        /* \"Governance/Niu.sol\":5678:5711  _transferTokens(src, dst, amount) */\n      jump\t// in\n    tag_124:\n        /* \"Governance/Niu.sol\":5728:5732  true */\n      0x01\n        /* \"Governance/Niu.sol\":5721:5732  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Governance/Niu.sol\":5083:5739  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":321:356  uint8 public constant decimals = 18 */\n    tag_49:\n        /* \"Governance/Niu.sol\":354:356  18 */\n      0x12\n        /* \"Governance/Niu.sol\":321:356  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":787:832  mapping (address => address) public delegates */\n    tag_55:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":5881:5981  function delegate(address delegatee) public {... */\n    tag_60:\n        /* \"Governance/Niu.sol\":5942:5974  _delegate(msg.sender, delegatee) */\n      tag_127\n        /* \"Governance/Niu.sol\":5952:5962  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":5964:5973  delegatee */\n      dup3\n        /* \"Governance/Niu.sol\":5942:5951  _delegate */\n      tag_128\n        /* \"Governance/Niu.sol\":5942:5974  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_127:\n        /* \"Governance/Niu.sol\":5881:5981  function delegate(address delegatee) public {... */\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":1203:1252  mapping (address => uint32) public numCheckpoints */\n    tag_63:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":4187:4293  function balanceOf(address account) external view returns (uint) {... */\n    tag_68:\n        /* \"Governance/Niu.sol\":4246:4250  uint */\n      0x00\n        /* \"Governance/Niu.sol\":4269:4277  balances */\n      0x01\n        /* \"Governance/Niu.sol\":4269:4286  balances[account] */\n      0x00\n        /* \"Governance/Niu.sol\":4278:4285  account */\n      dup4\n        /* \"Governance/Niu.sol\":4269:4286  balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":4262:4286  return balances[account] */\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":4187:4293  function balanceOf(address account) external view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":8016:9201  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_72:\n        /* \"Governance/Niu.sol\":8095:8101  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":8135:8147  block.number */\n      number\n        /* \"Governance/Niu.sol\":8121:8132  blockNumber */\n      dup3\n        /* \"Governance/Niu.sol\":8121:8147  blockNumber < block.number */\n      lt\n        /* \"Governance/Niu.sol\":8113:8190  require(blockNumber < block.number, \"Niu::getPriorVotes: not yet determined\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      jump(tag_133)\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"Governance/Niu.sol\":8201:8220  uint32 nCheckpoints */\n      0x00\n        /* \"Governance/Niu.sol\":8223:8237  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":8223:8246  numCheckpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8238:8245  account */\n      dup6\n        /* \"Governance/Niu.sol\":8223:8246  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":8201:8246  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8276:8277  0 */\n      0x00\n        /* \"Governance/Niu.sol\":8260:8272  nCheckpoints */\n      dup2\n        /* \"Governance/Niu.sol\":8260:8277  nCheckpoints == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":8256:8312  if (nCheckpoints == 0) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"Governance/Niu.sol\":8300:8301  0 */\n      0x00\n        /* \"Governance/Niu.sol\":8293:8301  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_130)\n        /* \"Governance/Niu.sol\":8256:8312  if (nCheckpoints == 0) {... */\n    tag_134:\n        /* \"Governance/Niu.sol\":8421:8432  blockNumber */\n      dup3\n        /* \"Governance/Niu.sol\":8369:8380  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":8369:8389  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8381:8388  account */\n      dup7\n        /* \"Governance/Niu.sol\":8369:8389  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8369:8407  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":8405:8406  1 */\n      0x01\n        /* \"Governance/Niu.sol\":8390:8402  nCheckpoints */\n      dup5\n        /* \"Governance/Niu.sol\":8390:8406  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":8369:8407  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8369:8417  checkpoints[account][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":8369:8432  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":8365:8510  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_135\n      jumpi\n        /* \"Governance/Niu.sol\":8455:8466  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":8455:8475  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8467:8474  account */\n      dup6\n        /* \"Governance/Niu.sol\":8455:8475  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8455:8493  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":8491:8492  1 */\n      0x01\n        /* \"Governance/Niu.sol\":8476:8488  nCheckpoints */\n      dup4\n        /* \"Governance/Niu.sol\":8476:8492  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":8455:8493  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8455:8499  checkpoints[account][nCheckpoints - 1].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":8448:8499  return checkpoints[account][nCheckpoints - 1].votes */\n      swap2\n      pop\n      pop\n      jump(tag_130)\n        /* \"Governance/Niu.sol\":8365:8510  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_135:\n        /* \"Governance/Niu.sol\":8604:8615  blockNumber */\n      dup3\n        /* \"Governance/Niu.sol\":8568:8579  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":8568:8588  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8580:8587  account */\n      dup7\n        /* \"Governance/Niu.sol\":8568:8588  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8568:8591  checkpoints[account][0] */\n      0x00\n        /* \"Governance/Niu.sol\":8589:8590  0 */\n      dup1\n        /* \"Governance/Niu.sol\":8568:8591  checkpoints[account][0] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8568:8601  checkpoints[account][0].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":8568:8615  checkpoints[account][0].fromBlock > blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":8564:8650  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"Governance/Niu.sol\":8638:8639  0 */\n      0x00\n        /* \"Governance/Niu.sol\":8631:8639  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_130)\n        /* \"Governance/Niu.sol\":8564:8650  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_136:\n        /* \"Governance/Niu.sol\":8660:8672  uint32 lower */\n      0x00\n        /* \"Governance/Niu.sol\":8675:8676  0 */\n      dup1\n        /* \"Governance/Niu.sol\":8660:8676  uint32 lower = 0 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8686:8698  uint32 upper */\n      0x00\n        /* \"Governance/Niu.sol\":8716:8717  1 */\n      0x01\n        /* \"Governance/Niu.sol\":8701:8713  nCheckpoints */\n      dup4\n        /* \"Governance/Niu.sol\":8701:8717  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":8686:8717  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8727:9145  while (upper > lower) {... */\n    tag_137:\n        /* \"Governance/Niu.sol\":8742:8747  lower */\n      dup2\n        /* \"Governance/Niu.sol\":8734:8747  upper > lower */\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":8734:8739  upper */\n      dup2\n        /* \"Governance/Niu.sol\":8734:8747  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":8727:9145  while (upper > lower) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"Governance/Niu.sol\":8763:8776  uint32 center */\n      0x00\n        /* \"Governance/Niu.sol\":8805:8806  2 */\n      0x02\n        /* \"Governance/Niu.sol\":8796:8801  lower */\n      dup4\n        /* \"Governance/Niu.sol\":8788:8793  upper */\n      dup4\n        /* \"Governance/Niu.sol\":8788:8801  upper - lower */\n      sub\n        /* \"Governance/Niu.sol\":8787:8806  (upper - lower) / 2 */\n      0xffffffff\n      and\n      dup2\n      tag_139\n      jumpi\n      invalid\n    tag_139:\n      div\n        /* \"Governance/Niu.sol\":8779:8784  upper */\n      dup3\n        /* \"Governance/Niu.sol\":8779:8806  upper - (upper - lower) / 2 */\n      sub\n        /* \"Governance/Niu.sol\":8763:8806  uint32 center = upper - (upper - lower) / 2 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8847:8867  Checkpoint memory cp */\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"Governance/Niu.sol\":8870:8881  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":8870:8890  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":8882:8889  account */\n      dup10\n        /* \"Governance/Niu.sol\":8870:8890  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8870:8898  checkpoints[account][center] */\n      0x00\n        /* \"Governance/Niu.sol\":8891:8897  center */\n      dup4\n        /* \"Governance/Niu.sol\":8870:8898  checkpoints[account][center] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":8847:8898  Checkpoint memory cp = checkpoints[account][center] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":8932:8943  blockNumber */\n      dup7\n        /* \"Governance/Niu.sol\":8916:8918  cp */\n      dup2\n        /* \"Governance/Niu.sol\":8916:8928  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"Governance/Niu.sol\":8916:8943  cp.fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":8912:9135  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"Governance/Niu.sol\":8970:8972  cp */\n      dup1\n        /* \"Governance/Niu.sol\":8970:8978  cp.votes */\n      0x20\n      add\n      mload\n        /* \"Governance/Niu.sol\":8963:8978  return cp.votes */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_130)\n        /* \"Governance/Niu.sol\":8912:9135  if (cp.fromBlock == blockNumber) {... */\n    tag_142:\n        /* \"Governance/Niu.sol\":9018:9029  blockNumber */\n      dup7\n        /* \"Governance/Niu.sol\":9003:9005  cp */\n      dup2\n        /* \"Governance/Niu.sol\":9003:9015  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"Governance/Niu.sol\":9003:9029  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      lt\n        /* \"Governance/Niu.sol\":8999:9135  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"Governance/Niu.sol\":9057:9063  center */\n      dup2\n        /* \"Governance/Niu.sol\":9049:9063  lower = center */\n      swap4\n      pop\n        /* \"Governance/Niu.sol\":8999:9135  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_145)\n    tag_144:\n        /* \"Governance/Niu.sol\":9119:9120  1 */\n      0x01\n        /* \"Governance/Niu.sol\":9110:9116  center */\n      dup3\n        /* \"Governance/Niu.sol\":9110:9120  center - 1 */\n      sub\n        /* \"Governance/Niu.sol\":9102:9120  upper = center - 1 */\n      swap3\n      pop\n        /* \"Governance/Niu.sol\":8999:9135  if (cp.fromBlock < blockNumber) {... */\n    tag_145:\n        /* \"Governance/Niu.sol\":8727:9145  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_137)\n    tag_138:\n        /* \"Governance/Niu.sol\":9161:9172  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":9161:9181  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":9173:9180  account */\n      dup8\n        /* \"Governance/Niu.sol\":9161:9181  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":9161:9188  checkpoints[account][lower] */\n      0x00\n        /* \"Governance/Niu.sol\":9182:9187  lower */\n      dup4\n        /* \"Governance/Niu.sol\":9161:9188  checkpoints[account][lower] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":9161:9194  checkpoints[account][lower].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9154:9194  return checkpoints[account][lower].votes */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Governance/Niu.sol\":8016:9201  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_130:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":1730:1769  mapping (address => uint) public nonces */\n    tag_77:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":224:261  string public constant symbol = \"NIU\" */\n    tag_80:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4e49550000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":4549:4782  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_84:\n        /* \"Governance/Niu.sol\":4614:4618  bool */\n      0x00\n        /* \"Governance/Niu.sol\":4630:4643  uint96 amount */\n      dup1\n        /* \"Governance/Niu.sol\":4646:4704  safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\") */\n      tag_147\n        /* \"Governance/Niu.sol\":4653:4662  rawAmount */\n      dup4\n        /* \"Governance/Niu.sol\":4646:4704  safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_aa0434f77a6c4f1d00fe7ba5b4b950cbb617a74b279e346f2c71f484bda86400\n      0x25\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":4646:4652  safe96 */\n      tag_112\n        /* \"Governance/Niu.sol\":4646:4704  safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_147:\n        /* \"Governance/Niu.sol\":4630:4704  uint96 amount = safe96(rawAmount, \"Niu::transfer: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":4714:4754  _transferTokens(msg.sender, dst, amount) */\n      tag_148\n        /* \"Governance/Niu.sol\":4730:4740  msg.sender */\n      caller\n        /* \"Governance/Niu.sol\":4742:4745  dst */\n      dup6\n        /* \"Governance/Niu.sol\":4747:4753  amount */\n      dup4\n        /* \"Governance/Niu.sol\":4714:4729  _transferTokens */\n      tag_125\n        /* \"Governance/Niu.sol\":4714:4754  _transferTokens(msg.sender, dst, amount) */\n      jump\t// in\n    tag_148:\n        /* \"Governance/Niu.sol\":4771:4775  true */\n      0x01\n        /* \"Governance/Niu.sol\":4764:4775  return true */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":4549:4782  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":7375:7594  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_88:\n        /* \"Governance/Niu.sol\":7440:7446  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":7458:7477  uint32 nCheckpoints */\n      dup1\n        /* \"Governance/Niu.sol\":7480:7494  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":7480:7503  numCheckpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":7495:7502  account */\n      dup5\n        /* \"Governance/Niu.sol\":7480:7503  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":7458:7503  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":7535:7536  0 */\n      0x00\n        /* \"Governance/Niu.sol\":7520:7532  nCheckpoints */\n      dup2\n        /* \"Governance/Niu.sol\":7520:7536  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":7520:7587  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_150\n      jumpi\n        /* \"Governance/Niu.sol\":7586:7587  0 */\n      0x00\n        /* \"Governance/Niu.sol\":7520:7587  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_151)\n    tag_150:\n        /* \"Governance/Niu.sol\":7539:7550  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":7539:7559  checkpoints[account] */\n      0x00\n        /* \"Governance/Niu.sol\":7551:7558  account */\n      dup5\n        /* \"Governance/Niu.sol\":7539:7559  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":7539:7577  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":7575:7576  1 */\n      0x01\n        /* \"Governance/Niu.sol\":7560:7572  nCheckpoints */\n      dup4\n        /* \"Governance/Niu.sol\":7560:7576  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":7539:7577  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":7539:7583  checkpoints[account][nCheckpoints - 1].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":7520:7587  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_151:\n        /* \"Governance/Niu.sol\":7513:7587  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":7375:7594  function getCurrentVotes(address account) external view returns (uint96) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":6404:7181  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_93:\n        /* \"Governance/Niu.sol\":6519:6542  bytes32 domainSeparator */\n      0x00\n        /* \"Governance/Niu.sol\":1364:1444  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      tag_153\n      swap1\n      jump(tag_116)\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Governance/Niu.sol\":6599:6603  name */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4e697572616c0000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Governance/Niu.sol\":6583:6605  keccak256(bytes(name)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Governance/Niu.sol\":6607:6619  getChainId() */\n      tag_154\n        /* \"Governance/Niu.sol\":6607:6617  getChainId */\n      tag_155\n        /* \"Governance/Niu.sol\":6607:6619  getChainId() */\n      jump\t// in\n    tag_154:\n        /* \"Governance/Niu.sol\":6629:6633  this */\n      address\n        /* \"Governance/Niu.sol\":6555:6635  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      add(0x20, mload(0x40))\n      tag_156\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      jump(tag_157)\n    tag_156:\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Governance/Niu.sol\":6555:6635  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      swap1\n      0x40\n      mstore\n        /* \"Governance/Niu.sol\":6545:6636  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Governance/Niu.sol\":6519:6636  bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":6646:6664  bytes32 structHash */\n      0x00\n        /* \"Governance/Niu.sol\":1581:1652  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      tag_158\n      swap1\n      jump(tag_159)\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Governance/Niu.sol\":6709:6718  delegatee */\n      dup9\n        /* \"Governance/Niu.sol\":6720:6725  nonce */\n      dup9\n        /* \"Governance/Niu.sol\":6727:6733  expiry */\n      dup9\n        /* \"Governance/Niu.sol\":6677:6734  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      add(0x20, mload(0x40))\n      tag_160\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      jump(tag_161)\n    tag_160:\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Governance/Niu.sol\":6677:6734  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap1\n      0x40\n      mstore\n        /* \"Governance/Niu.sol\":6667:6735  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Governance/Niu.sol\":6646:6735  bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":6745:6759  bytes32 digest */\n      0x00\n        /* \"Governance/Niu.sol\":6801:6816  domainSeparator */\n      dup3\n        /* \"Governance/Niu.sol\":6818:6828  structHash */\n      dup3\n        /* \"Governance/Niu.sol\":6772:6829  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      add(0x20, mload(0x40))\n      tag_162\n      swap3\n      swap2\n      swap1\n      jump(tag_163)\n    tag_162:\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Governance/Niu.sol\":6772:6829  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      swap1\n      0x40\n      mstore\n        /* \"Governance/Niu.sol\":6762:6830  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Governance/Niu.sol\":6745:6830  bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":6840:6857  address signatory */\n      0x00\n        /* \"Governance/Niu.sol\":6860:6886  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"Governance/Niu.sol\":6870:6876  digest */\n      dup3\n        /* \"Governance/Niu.sol\":6878:6879  v */\n      dup9\n        /* \"Governance/Niu.sol\":6881:6882  r */\n      dup9\n        /* \"Governance/Niu.sol\":6884:6885  s */\n      dup9\n        /* \"Governance/Niu.sol\":6860:6886  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_164\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      jump(tag_165)\n    tag_164:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_166:\n        /* \"Governance/Niu.sol\":6860:6886  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"Governance/Niu.sol\":6840:6886  address signatory = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":6925:6926  0 */\n      0x00\n        /* \"Governance/Niu.sol\":6904:6927  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":6904:6913  signatory */\n      dup2\n        /* \"Governance/Niu.sol\":6904:6927  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":6896:6969  require(signatory != address(0), \"Niu::delegateBySig: invalid signature\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      jump(tag_169)\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"Governance/Niu.sol\":6996:7002  nonces */\n      0x05\n        /* \"Governance/Niu.sol\":6996:7013  nonces[signatory] */\n      0x00\n        /* \"Governance/Niu.sol\":7003:7012  signatory */\n      dup3\n        /* \"Governance/Niu.sol\":6996:7013  nonces[signatory] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":6996:7015  nonces[signatory]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"Governance/Niu.sol\":6987:6992  nonce */\n      dup10\n        /* \"Governance/Niu.sol\":6987:7015  nonce == nonces[signatory]++ */\n      eq\n        /* \"Governance/Niu.sol\":6979:7053  require(nonce == nonces[signatory]++, \"Niu::delegateBySig: invalid nonce\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      jump(tag_172)\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"Governance/Niu.sol\":7078:7084  expiry */\n      dup8\n        /* \"Governance/Niu.sol\":7071:7074  now */\n      timestamp\n        /* \"Governance/Niu.sol\":7071:7084  now <= expiry */\n      gt\n      iszero\n        /* \"Governance/Niu.sol\":7063:7126  require(now <= expiry, \"Niu::delegateBySig: signature expired\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      jump(tag_175)\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"Governance/Niu.sol\":7143:7174  _delegate(signatory, delegatee) */\n      tag_176\n        /* \"Governance/Niu.sol\":7153:7162  signatory */\n      dup2\n        /* \"Governance/Niu.sol\":7164:7173  delegatee */\n      dup12\n        /* \"Governance/Niu.sol\":7143:7152  _delegate */\n      tag_128\n        /* \"Governance/Niu.sol\":7143:7174  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_176:\n        /* \"Governance/Niu.sol\":7136:7174  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"Governance/Niu.sol\":6404:7181  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":2983:3117  function allowance(address account, address spender) external view returns (uint) {... */\n    tag_97:\n        /* \"Governance/Niu.sol\":3059:3063  uint */\n      0x00\n        /* \"Governance/Niu.sol\":3082:3092  allowances */\n      dup1\n        /* \"Governance/Niu.sol\":3082:3101  allowances[account] */\n      0x00\n        /* \"Governance/Niu.sol\":3093:3100  account */\n      dup5\n        /* \"Governance/Niu.sol\":3082:3101  allowances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":3082:3110  allowances[account][spender] */\n      0x00\n        /* \"Governance/Niu.sol\":3102:3109  spender */\n      dup4\n        /* \"Governance/Niu.sol\":3082:3110  allowances[account][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":3075:3110  return allowances[account][spender] */\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":2983:3117  function allowance(address account, address spender) external view returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":1535:1652  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_100:\n        /* \"Governance/Niu.sol\":1581:1652  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      tag_178\n      swap1\n      jump(tag_159)\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Governance/Niu.sol\":1535:1652  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"Governance/Niu.sol\":1067:1137  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_105:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"Governance/Niu.sol\":11901:12059  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_112:\n        /* \"Governance/Niu.sol\":11976:11982  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":12006:12011  2**96 */\n      0x01000000000000000000000000\n        /* \"Governance/Niu.sol\":12002:12003  n */\n      dup4\n        /* \"Governance/Niu.sol\":12002:12011  n < 2**96 */\n      lt\n        /* \"Governance/Niu.sol\":12013:12025  errorMessage */\n      dup3\n        /* \"Governance/Niu.sol\":11994:12026  require(n < 2**96, errorMessage) */\n      swap1\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      jump(tag_182)\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n      pop\n        /* \"Governance/Niu.sol\":12050:12051  n */\n      dup3\n        /* \"Governance/Niu.sol\":12036:12052  return uint96(n) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":11901:12059  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":12255:12417  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_122:\n        /* \"Governance/Niu.sol\":12341:12347  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":12372:12373  a */\n      dup4\n        /* \"Governance/Niu.sol\":12367:12373  b <= a */\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":12367:12368  b */\n      dup4\n        /* \"Governance/Niu.sol\":12367:12373  b <= a */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"Governance/Niu.sol\":12375:12387  errorMessage */\n      dup3\n        /* \"Governance/Niu.sol\":12359:12388  require(b <= a, errorMessage) */\n      swap1\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      jump(tag_182)\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n      pop\n        /* \"Governance/Niu.sol\":12409:12410  b */\n      dup3\n        /* \"Governance/Niu.sol\":12405:12406  a */\n      dup5\n        /* \"Governance/Niu.sol\":12405:12410  a - b */\n      sub\n        /* \"Governance/Niu.sol\":12398:12410  return a - b */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":12255:12417  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":9580:10181  function _transferTokens(address src, address dst, uint96 amount) internal {... */\n    tag_125:\n        /* \"Governance/Niu.sol\":9688:9689  0 */\n      0x00\n        /* \"Governance/Niu.sol\":9673:9690  src != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9673:9676  src */\n      dup4\n        /* \"Governance/Niu.sol\":9673:9690  src != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":9665:9754  require(src != address(0), \"Niu::_transferTokens: cannot transfer from the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      jump(tag_189)\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"Governance/Niu.sol\":9787:9788  0 */\n      0x00\n        /* \"Governance/Niu.sol\":9772:9789  dst != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9772:9775  dst */\n      dup3\n        /* \"Governance/Niu.sol\":9772:9789  dst != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":9764:9851  require(dst != address(0), \"Niu::_transferTokens: cannot transfer to the zero address\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      jump(tag_192)\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"Governance/Niu.sol\":9878:9963  sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\") */\n      tag_193\n        /* \"Governance/Niu.sol\":9884:9892  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9884:9897  balances[src] */\n      0x00\n        /* \"Governance/Niu.sol\":9893:9896  src */\n      dup6\n        /* \"Governance/Niu.sol\":9884:9897  balances[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9899:9905  amount */\n      dup3\n        /* \"Governance/Niu.sol\":9878:9963  sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      data_692ec8c90bc6d060b4b8461e07e5e6df665fc0757847ed6b4e3f21b09d8256ca\n      0x35\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":9878:9883  sub96 */\n      tag_122\n        /* \"Governance/Niu.sol\":9878:9963  sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_193:\n        /* \"Governance/Niu.sol\":9862:9870  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9862:9875  balances[src] */\n      0x00\n        /* \"Governance/Niu.sol\":9871:9874  src */\n      dup6\n        /* \"Governance/Niu.sol\":9862:9875  balances[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":9862:9963  balances[src] = sub96(balances[src], amount, \"Niu::_transferTokens: transfer amount exceeds balance\") */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":9989:10068  add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\") */\n      tag_194\n        /* \"Governance/Niu.sol\":9995:10003  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9995:10008  balances[dst] */\n      0x00\n        /* \"Governance/Niu.sol\":10004:10007  dst */\n      dup5\n        /* \"Governance/Niu.sol\":9995:10008  balances[dst] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10010:10016  amount */\n      dup3\n        /* \"Governance/Niu.sol\":9989:10068  add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      data_b162a08cdd346994d7a9c03eee20f68ee11c6da5ce67892863a5b8b47f9f80cf\n      0x2f\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":9989:9994  add96 */\n      tag_195\n        /* \"Governance/Niu.sol\":9989:10068  add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\") */\n      jump\t// in\n    tag_194:\n        /* \"Governance/Niu.sol\":9973:9981  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9973:9986  balances[dst] */\n      0x00\n        /* \"Governance/Niu.sol\":9982:9985  dst */\n      dup5\n        /* \"Governance/Niu.sol\":9973:9986  balances[dst] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":9973:10068  balances[dst] = add96(balances[dst], amount, \"Niu::_transferTokens: transfer amount overflows\") */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":10097:10100  dst */\n      dup2\n        /* \"Governance/Niu.sol\":10083:10109  Transfer(src, dst, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10092:10095  src */\n      dup4\n        /* \"Governance/Niu.sol\":10083:10109  Transfer(src, dst, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Governance/Niu.sol\":10102:10108  amount */\n      dup4\n        /* \"Governance/Niu.sol\":10083:10109  Transfer(src, dst, amount) */\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      jump(tag_114)\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Governance/Niu.sol\":10120:10174  _moveDelegates(delegates[src], delegates[dst], amount) */\n      tag_197\n        /* \"Governance/Niu.sol\":10135:10144  delegates */\n      0x02\n        /* \"Governance/Niu.sol\":10135:10149  delegates[src] */\n      0x00\n        /* \"Governance/Niu.sol\":10145:10148  src */\n      dup6\n        /* \"Governance/Niu.sol\":10135:10149  delegates[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10151:10160  delegates */\n      0x02\n        /* \"Governance/Niu.sol\":10151:10165  delegates[dst] */\n      0x00\n        /* \"Governance/Niu.sol\":10161:10164  dst */\n      dup6\n        /* \"Governance/Niu.sol\":10151:10165  delegates[dst] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10167:10173  amount */\n      dup4\n        /* \"Governance/Niu.sol\":10120:10134  _moveDelegates */\n      tag_198\n        /* \"Governance/Niu.sol\":10120:10174  _moveDelegates(delegates[src], delegates[dst], amount) */\n      jump\t// in\n    tag_197:\n        /* \"Governance/Niu.sol\":9580:10181  function _transferTokens(address src, address dst, uint96 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":9207:9574  function _delegate(address delegator, address delegatee) internal {... */\n    tag_128:\n        /* \"Governance/Niu.sol\":9283:9306  address currentDelegate */\n      0x00\n        /* \"Governance/Niu.sol\":9309:9318  delegates */\n      0x02\n        /* \"Governance/Niu.sol\":9309:9329  delegates[delegator] */\n      0x00\n        /* \"Governance/Niu.sol\":9319:9328  delegator */\n      dup5\n        /* \"Governance/Niu.sol\":9309:9329  delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9283:9329  address currentDelegate = delegates[delegator] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":9339:9362  uint96 delegatorBalance */\n      0x00\n        /* \"Governance/Niu.sol\":9365:9373  balances */\n      0x01\n        /* \"Governance/Niu.sol\":9365:9384  balances[delegator] */\n      0x00\n        /* \"Governance/Niu.sol\":9374:9383  delegator */\n      dup6\n        /* \"Governance/Niu.sol\":9365:9384  balances[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9339:9384  uint96 delegatorBalance = balances[delegator] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":9417:9426  delegatee */\n      dup3\n        /* \"Governance/Niu.sol\":9394:9403  delegates */\n      0x02\n        /* \"Governance/Niu.sol\":9394:9414  delegates[delegator] */\n      0x00\n        /* \"Governance/Niu.sol\":9404:9413  delegator */\n      dup7\n        /* \"Governance/Niu.sol\":9394:9414  delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":9394:9426  delegates[delegator] = delegatee */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":9486:9495  delegatee */\n      dup3\n        /* \"Governance/Niu.sol\":9442:9496  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9469:9484  currentDelegate */\n      dup3\n        /* \"Governance/Niu.sol\":9442:9496  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":9458:9467  delegator */\n      dup6\n        /* \"Governance/Niu.sol\":9442:9496  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Governance/Niu.sol\":9507:9567  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_200\n        /* \"Governance/Niu.sol\":9522:9537  currentDelegate */\n      dup3\n        /* \"Governance/Niu.sol\":9539:9548  delegatee */\n      dup5\n        /* \"Governance/Niu.sol\":9550:9566  delegatorBalance */\n      dup4\n        /* \"Governance/Niu.sol\":9507:9521  _moveDelegates */\n      tag_198\n        /* \"Governance/Niu.sol\":9507:9567  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_200:\n        /* \"Governance/Niu.sol\":9207:9574  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":12423:12572  function getChainId() internal pure returns (uint) {... */\n    tag_155:\n        /* \"Governance/Niu.sol\":12468:12472  uint */\n      0x00\n        /* \"Governance/Niu.sol\":12484:12499  uint256 chainId */\n      dup1\n        /* \"Governance/Niu.sol\":12531:12540  chainid() */\n      chainid\n        /* \"Governance/Niu.sol\":12520:12540  chainId := chainid() */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":12558:12565  chainId */\n      dup1\n        /* \"Governance/Niu.sol\":12551:12565  return chainId */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":12423:12572  function getChainId() internal pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Governance/Niu.sol\":12065:12249  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_195:\n        /* \"Governance/Niu.sol\":12151:12157  uint96 */\n      0x00\n        /* \"Governance/Niu.sol\":12169:12177  uint96 c */\n      dup1\n        /* \"Governance/Niu.sol\":12184:12185  b */\n      dup4\n        /* \"Governance/Niu.sol\":12180:12181  a */\n      dup6\n        /* \"Governance/Niu.sol\":12180:12185  a + b */\n      add\n        /* \"Governance/Niu.sol\":12169:12185  uint96 c = a + b */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":12208:12209  a */\n      dup5\n        /* \"Governance/Niu.sol\":12203:12209  c >= a */\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":12203:12204  c */\n      dup2\n        /* \"Governance/Niu.sol\":12203:12209  c >= a */\n      0xffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"Governance/Niu.sol\":12211:12223  errorMessage */\n      dup4\n        /* \"Governance/Niu.sol\":12195:12224  require(c >= a, errorMessage) */\n      swap1\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      jump(tag_182)\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n      pop\n        /* \"Governance/Niu.sol\":12241:12242  c */\n      dup1\n        /* \"Governance/Niu.sol\":12234:12242  return c */\n      swap2\n      pop\n      pop\n        /* \"Governance/Niu.sol\":12065:12249  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":10187:11108  function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {... */\n    tag_198:\n        /* \"Governance/Niu.sol\":10291:10297  dstRep */\n      dup2\n        /* \"Governance/Niu.sol\":10281:10297  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10281:10287  srcRep */\n      dup4\n        /* \"Governance/Niu.sol\":10281:10297  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Governance/Niu.sol\":10281:10311  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n        /* \"Governance/Niu.sol\":10310:10311  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10301:10307  amount */\n      dup2\n        /* \"Governance/Niu.sol\":10301:10311  amount > 0 */\n      0xffffffffffffffffffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":10281:10311  srcRep != dstRep && amount > 0 */\n    tag_206:\n        /* \"Governance/Niu.sol\":10277:11102  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"Governance/Niu.sol\":10349:10350  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10331:10351  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10331:10337  srcRep */\n      dup4\n        /* \"Governance/Niu.sol\":10331:10351  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":10327:10703  if (srcRep != address(0)) {... */\n      tag_208\n      jumpi\n        /* \"Governance/Niu.sol\":10371:10387  uint32 srcRepNum */\n      0x00\n        /* \"Governance/Niu.sol\":10390:10404  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":10390:10412  numCheckpoints[srcRep] */\n      0x00\n        /* \"Governance/Niu.sol\":10405:10411  srcRep */\n      dup6\n        /* \"Governance/Niu.sol\":10390:10412  numCheckpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":10371:10412  uint32 srcRepNum = numCheckpoints[srcRep] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10430:10446  uint96 srcRepOld */\n      0x00\n        /* \"Governance/Niu.sol\":10461:10462  0 */\n      dup1\n        /* \"Governance/Niu.sol\":10449:10458  srcRepNum */\n      dup3\n        /* \"Governance/Niu.sol\":10449:10462  srcRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":10449:10509  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_209\n      jumpi\n        /* \"Governance/Niu.sol\":10508:10509  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10449:10509  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_210)\n    tag_209:\n        /* \"Governance/Niu.sol\":10465:10476  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":10465:10484  checkpoints[srcRep] */\n      0x00\n        /* \"Governance/Niu.sol\":10477:10483  srcRep */\n      dup7\n        /* \"Governance/Niu.sol\":10465:10484  checkpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":10465:10499  checkpoints[srcRep][srcRepNum - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":10497:10498  1 */\n      0x01\n        /* \"Governance/Niu.sol\":10485:10494  srcRepNum */\n      dup5\n        /* \"Governance/Niu.sol\":10485:10498  srcRepNum - 1 */\n      sub\n        /* \"Governance/Niu.sol\":10465:10499  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":10465:10505  checkpoints[srcRep][srcRepNum - 1].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10449:10509  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_210:\n        /* \"Governance/Niu.sol\":10430:10509  uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10527:10543  uint96 srcRepNew */\n      0x00\n        /* \"Governance/Niu.sol\":10546:10613  sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\") */\n      tag_211\n        /* \"Governance/Niu.sol\":10552:10561  srcRepOld */\n      dup3\n        /* \"Governance/Niu.sol\":10563:10569  amount */\n      dup6\n        /* \"Governance/Niu.sol\":10546:10613  sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_3572f2e3a73d8992ffd14bbdc492a68ea3425b205fa2e411c1a12014bc6f8444\n      0x27\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":10546:10551  sub96 */\n      tag_122\n        /* \"Governance/Niu.sol\":10546:10613  sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\") */\n      jump\t// in\n    tag_211:\n        /* \"Governance/Niu.sol\":10527:10613  uint96 srcRepNew = sub96(srcRepOld, amount, \"Niu::_moveVotes: vote amount underflows\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10631:10688  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_212\n        /* \"Governance/Niu.sol\":10648:10654  srcRep */\n      dup7\n        /* \"Governance/Niu.sol\":10656:10665  srcRepNum */\n      dup5\n        /* \"Governance/Niu.sol\":10667:10676  srcRepOld */\n      dup5\n        /* \"Governance/Niu.sol\":10678:10687  srcRepNew */\n      dup5\n        /* \"Governance/Niu.sol\":10631:10647  _writeCheckpoint */\n      tag_213\n        /* \"Governance/Niu.sol\":10631:10688  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_212:\n        /* \"Governance/Niu.sol\":10327:10703  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_208:\n        /* \"Governance/Niu.sol\":10739:10740  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10721:10741  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10721:10727  dstRep */\n      dup3\n        /* \"Governance/Niu.sol\":10721:10741  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":10717:11092  if (dstRep != address(0)) {... */\n      tag_214\n      jumpi\n        /* \"Governance/Niu.sol\":10761:10777  uint32 dstRepNum */\n      0x00\n        /* \"Governance/Niu.sol\":10780:10794  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":10780:10802  numCheckpoints[dstRep] */\n      0x00\n        /* \"Governance/Niu.sol\":10795:10801  dstRep */\n      dup5\n        /* \"Governance/Niu.sol\":10780:10802  numCheckpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":10761:10802  uint32 dstRepNum = numCheckpoints[dstRep] */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10820:10836  uint96 dstRepOld */\n      0x00\n        /* \"Governance/Niu.sol\":10851:10852  0 */\n      dup1\n        /* \"Governance/Niu.sol\":10839:10848  dstRepNum */\n      dup3\n        /* \"Governance/Niu.sol\":10839:10852  dstRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":10839:10899  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_215\n      jumpi\n        /* \"Governance/Niu.sol\":10898:10899  0 */\n      0x00\n        /* \"Governance/Niu.sol\":10839:10899  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_216)\n    tag_215:\n        /* \"Governance/Niu.sol\":10855:10866  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":10855:10874  checkpoints[dstRep] */\n      0x00\n        /* \"Governance/Niu.sol\":10867:10873  dstRep */\n      dup6\n        /* \"Governance/Niu.sol\":10855:10874  checkpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":10855:10889  checkpoints[dstRep][dstRepNum - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":10887:10888  1 */\n      0x01\n        /* \"Governance/Niu.sol\":10875:10884  dstRepNum */\n      dup5\n        /* \"Governance/Niu.sol\":10875:10888  dstRepNum - 1 */\n      sub\n        /* \"Governance/Niu.sol\":10855:10889  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":10855:10895  checkpoints[dstRep][dstRepNum - 1].votes */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Governance/Niu.sol\":10839:10899  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_216:\n        /* \"Governance/Niu.sol\":10820:10899  uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":10917:10933  uint96 dstRepNew */\n      0x00\n        /* \"Governance/Niu.sol\":10936:11002  add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\") */\n      tag_217\n        /* \"Governance/Niu.sol\":10942:10951  dstRepOld */\n      dup3\n        /* \"Governance/Niu.sol\":10953:10959  amount */\n      dup6\n        /* \"Governance/Niu.sol\":10936:11002  add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_ba9d0177eed180b5d6a2c76dfc689b87bfd0698268c3a8db9e79a797cb697239\n      0x26\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":10936:10941  add96 */\n      tag_195\n        /* \"Governance/Niu.sol\":10936:11002  add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\") */\n      jump\t// in\n    tag_217:\n        /* \"Governance/Niu.sol\":10917:11002  uint96 dstRepNew = add96(dstRepOld, amount, \"Niu::_moveVotes: vote amount overflows\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":11020:11077  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_218\n        /* \"Governance/Niu.sol\":11037:11043  dstRep */\n      dup6\n        /* \"Governance/Niu.sol\":11045:11054  dstRepNum */\n      dup5\n        /* \"Governance/Niu.sol\":11056:11065  dstRepOld */\n      dup5\n        /* \"Governance/Niu.sol\":11067:11076  dstRepNew */\n      dup5\n        /* \"Governance/Niu.sol\":11020:11036  _writeCheckpoint */\n      tag_213\n        /* \"Governance/Niu.sol\":11020:11077  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n    tag_218:\n        /* \"Governance/Niu.sol\":10717:11092  if (dstRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_214:\n        /* \"Governance/Niu.sol\":10277:11102  if (srcRep != dstRep && amount > 0) {... */\n    tag_207:\n        /* \"Governance/Niu.sol\":10187:11108  function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":11114:11731  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n    tag_213:\n        /* \"Governance/Niu.sol\":11231:11249  uint32 blockNumber */\n      0x00\n        /* \"Governance/Niu.sol\":11252:11327  safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_220\n        /* \"Governance/Niu.sol\":11259:11271  block.number */\n      number\n        /* \"Governance/Niu.sol\":11252:11327  safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x33\n      dup2\n      mstore\n      0x20\n      add\n      data_4bece53613ac1432b74b912202f09eb50cb0dcb5908cbbd578098234a3a7791c\n      0x33\n      swap2\n      codecopy\n        /* \"Governance/Niu.sol\":11252:11258  safe32 */\n      tag_221\n        /* \"Governance/Niu.sol\":11252:11327  safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_220:\n        /* \"Governance/Niu.sol\":11231:11327  uint32 blockNumber = safe32(block.number, \"Niu::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":11355:11356  0 */\n      0x00\n        /* \"Governance/Niu.sol\":11340:11352  nCheckpoints */\n      dup5\n        /* \"Governance/Niu.sol\":11340:11356  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"Governance/Niu.sol\":11340:11425  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n        /* \"Governance/Niu.sol\":11414:11425  blockNumber */\n      dup1\n        /* \"Governance/Niu.sol\":11360:11425  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":11360:11371  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":11360:11382  checkpoints[delegatee] */\n      0x00\n        /* \"Governance/Niu.sol\":11372:11381  delegatee */\n      dup8\n        /* \"Governance/Niu.sol\":11360:11382  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11360:11400  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":11398:11399  1 */\n      0x01\n        /* \"Governance/Niu.sol\":11383:11395  nCheckpoints */\n      dup8\n        /* \"Governance/Niu.sol\":11383:11399  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":11360:11400  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11360:11410  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"Governance/Niu.sol\":11360:11425  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"Governance/Niu.sol\":11340:11425  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_222:\n        /* \"Governance/Niu.sol\":11336:11660  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"Governance/Niu.sol\":11488:11496  newVotes */\n      dup2\n        /* \"Governance/Niu.sol\":11439:11450  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":11439:11461  checkpoints[delegatee] */\n      0x00\n        /* \"Governance/Niu.sol\":11451:11460  delegatee */\n      dup8\n        /* \"Governance/Niu.sol\":11439:11461  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11439:11479  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"Governance/Niu.sol\":11477:11478  1 */\n      0x01\n        /* \"Governance/Niu.sol\":11462:11474  nCheckpoints */\n      dup8\n        /* \"Governance/Niu.sol\":11462:11478  nCheckpoints - 1 */\n      sub\n        /* \"Governance/Niu.sol\":11439:11479  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11439:11485  checkpoints[delegatee][nCheckpoints - 1].votes */\n      0x00\n      add\n      0x04\n        /* \"Governance/Niu.sol\":11439:11496  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":11336:11660  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_224)\n    tag_223:\n        /* \"Governance/Niu.sol\":11562:11595  Checkpoint(blockNumber, newVotes) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Governance/Niu.sol\":11573:11584  blockNumber */\n      dup3\n        /* \"Governance/Niu.sol\":11562:11595  Checkpoint(blockNumber, newVotes) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Governance/Niu.sol\":11586:11594  newVotes */\n      dup4\n        /* \"Governance/Niu.sol\":11562:11595  Checkpoint(blockNumber, newVotes) */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Governance/Niu.sol\":11523:11534  checkpoints */\n      0x03\n        /* \"Governance/Niu.sol\":11523:11545  checkpoints[delegatee] */\n      0x00\n        /* \"Governance/Niu.sol\":11535:11544  delegatee */\n      dup8\n        /* \"Governance/Niu.sol\":11523:11545  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11523:11559  checkpoints[delegatee][nCheckpoints] */\n      0x00\n        /* \"Governance/Niu.sol\":11546:11558  nCheckpoints */\n      dup7\n        /* \"Governance/Niu.sol\":11523:11559  checkpoints[delegatee][nCheckpoints] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Governance/Niu.sol\":11523:11595  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x04)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Governance/Niu.sol\":11650:11651  1 */\n      0x01\n        /* \"Governance/Niu.sol\":11635:11647  nCheckpoints */\n      dup5\n        /* \"Governance/Niu.sol\":11635:11651  nCheckpoints + 1 */\n      add\n        /* \"Governance/Niu.sol\":11607:11621  numCheckpoints */\n      0x04\n        /* \"Governance/Niu.sol\":11607:11632  numCheckpoints[delegatee] */\n      0x00\n        /* \"Governance/Niu.sol\":11622:11631  delegatee */\n      dup8\n        /* \"Governance/Niu.sol\":11607:11632  numCheckpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Governance/Niu.sol\":11607:11651  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Governance/Niu.sol\":11336:11660  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_224:\n        /* \"Governance/Niu.sol\":11694:11703  delegatee */\n      dup5\n        /* \"Governance/Niu.sol\":11673:11724  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n        /* \"Governance/Niu.sol\":11705:11713  oldVotes */\n      dup5\n        /* \"Governance/Niu.sol\":11715:11723  newVotes */\n      dup5\n        /* \"Governance/Niu.sol\":11673:11724  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      tag_225\n      swap3\n      swap2\n      swap1\n      jump(tag_226)\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Governance/Niu.sol\":11114:11731  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":11737:11895  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_221:\n        /* \"Governance/Niu.sol\":11812:11818  uint32 */\n      0x00\n        /* \"Governance/Niu.sol\":11842:11847  2**32 */\n      0x0100000000\n        /* \"Governance/Niu.sol\":11838:11839  n */\n      dup4\n        /* \"Governance/Niu.sol\":11838:11847  n < 2**32 */\n      lt\n        /* \"Governance/Niu.sol\":11849:11861  errorMessage */\n      dup3\n        /* \"Governance/Niu.sol\":11830:11862  require(n < 2**32, errorMessage) */\n      swap1\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      jump(tag_182)\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n      pop\n        /* \"Governance/Niu.sol\":11886:11887  n */\n      dup3\n        /* \"Governance/Niu.sol\":11872:11888  return uint32(n) */\n      swap1\n      pop\n        /* \"Governance/Niu.sol\":11737:11895  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Governance/Niu.sol\":60:12574  contract Niu {... */\n    tag_141:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_231:\n      0x00\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":63:92   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":97:130   */\n      tag_232\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      jump(tag_233)\n    tag_232:\n        /* \"--CODEGEN--\":57:135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":142:272   */\n    tag_234:\n      0x00\n        /* \"--CODEGEN--\":222:228   */\n      dup2\n        /* \"--CODEGEN--\":209:229   */\n      calldataload\n        /* \"--CODEGEN--\":200:229   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":234:267   */\n      tag_235\n        /* \"--CODEGEN--\":261:266   */\n      dup2\n        /* \"--CODEGEN--\":234:267   */\n      jump(tag_236)\n    tag_235:\n        /* \"--CODEGEN--\":194:272   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":279:409   */\n    tag_237:\n      0x00\n        /* \"--CODEGEN--\":359:365   */\n      dup2\n        /* \"--CODEGEN--\":346:366   */\n      calldataload\n        /* \"--CODEGEN--\":337:366   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":371:404   */\n      tag_238\n        /* \"--CODEGEN--\":398:403   */\n      dup2\n        /* \"--CODEGEN--\":371:404   */\n      jump(tag_239)\n    tag_238:\n        /* \"--CODEGEN--\":331:409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":416:544   */\n    tag_240:\n      0x00\n        /* \"--CODEGEN--\":495:501   */\n      dup2\n        /* \"--CODEGEN--\":482:502   */\n      calldataload\n        /* \"--CODEGEN--\":473:502   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":507:539   */\n      tag_241\n        /* \"--CODEGEN--\":533:538   */\n      dup2\n        /* \"--CODEGEN--\":507:539   */\n      jump(tag_242)\n    tag_241:\n        /* \"--CODEGEN--\":467:544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":551:677   */\n    tag_243:\n      0x00\n        /* \"--CODEGEN--\":629:635   */\n      dup2\n        /* \"--CODEGEN--\":616:636   */\n      calldataload\n        /* \"--CODEGEN--\":607:636   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":641:672   */\n      tag_244\n        /* \"--CODEGEN--\":666:671   */\n      dup2\n        /* \"--CODEGEN--\":641:672   */\n      jump(tag_245)\n    tag_244:\n        /* \"--CODEGEN--\":601:677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":684:925   */\n    tag_54:\n      0x00\n        /* \"--CODEGEN--\":788:790   */\n      0x20\n        /* \"--CODEGEN--\":776:785   */\n      dup3\n        /* \"--CODEGEN--\":767:774   */\n      dup5\n        /* \"--CODEGEN--\":763:786   */\n      sub\n        /* \"--CODEGEN--\":759:791   */\n      slt\n        /* \"--CODEGEN--\":756:758   */\n      iszero\n      tag_246\n      jumpi\n        /* \"--CODEGEN--\":804:805   */\n      0x00\n        /* \"--CODEGEN--\":801:802   */\n      dup1\n        /* \"--CODEGEN--\":794:806   */\n      revert\n        /* \"--CODEGEN--\":756:758   */\n    tag_246:\n        /* \"--CODEGEN--\":839:840   */\n      0x00\n        /* \"--CODEGEN--\":856:909   */\n      tag_247\n        /* \"--CODEGEN--\":901:908   */\n      dup5\n        /* \"--CODEGEN--\":892:898   */\n      dup3\n        /* \"--CODEGEN--\":881:890   */\n      dup6\n        /* \"--CODEGEN--\":877:899   */\n      add\n        /* \"--CODEGEN--\":856:909   */\n      jump(tag_231)\n    tag_247:\n        /* \"--CODEGEN--\":846:909   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":818:915   */\n      pop\n        /* \"--CODEGEN--\":750:925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":932:1298   */\n    tag_96:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1053:1055   */\n      0x40\n        /* \"--CODEGEN--\":1041:1050   */\n      dup4\n        /* \"--CODEGEN--\":1032:1039   */\n      dup6\n        /* \"--CODEGEN--\":1028:1051   */\n      sub\n        /* \"--CODEGEN--\":1024:1056   */\n      slt\n        /* \"--CODEGEN--\":1021:1023   */\n      iszero\n      tag_248\n      jumpi\n        /* \"--CODEGEN--\":1069:1070   */\n      0x00\n        /* \"--CODEGEN--\":1066:1067   */\n      dup1\n        /* \"--CODEGEN--\":1059:1071   */\n      revert\n        /* \"--CODEGEN--\":1021:1023   */\n    tag_248:\n        /* \"--CODEGEN--\":1104:1105   */\n      0x00\n        /* \"--CODEGEN--\":1121:1174   */\n      tag_249\n        /* \"--CODEGEN--\":1166:1173   */\n      dup6\n        /* \"--CODEGEN--\":1157:1163   */\n      dup3\n        /* \"--CODEGEN--\":1146:1155   */\n      dup7\n        /* \"--CODEGEN--\":1142:1164   */\n      add\n        /* \"--CODEGEN--\":1121:1174   */\n      jump(tag_231)\n    tag_249:\n        /* \"--CODEGEN--\":1111:1174   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1083:1180   */\n      pop\n        /* \"--CODEGEN--\":1211:1213   */\n      0x20\n        /* \"--CODEGEN--\":1229:1282   */\n      tag_250\n        /* \"--CODEGEN--\":1274:1281   */\n      dup6\n        /* \"--CODEGEN--\":1265:1271   */\n      dup3\n        /* \"--CODEGEN--\":1254:1263   */\n      dup7\n        /* \"--CODEGEN--\":1250:1272   */\n      add\n        /* \"--CODEGEN--\":1229:1282   */\n      jump(tag_231)\n    tag_250:\n        /* \"--CODEGEN--\":1219:1282   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1190:1288   */\n      pop\n        /* \"--CODEGEN--\":1015:1298   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1305:1796   */\n    tag_45:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":1443:1445   */\n      0x60\n        /* \"--CODEGEN--\":1431:1440   */\n      dup5\n        /* \"--CODEGEN--\":1422:1429   */\n      dup7\n        /* \"--CODEGEN--\":1418:1441   */\n      sub\n        /* \"--CODEGEN--\":1414:1446   */\n      slt\n        /* \"--CODEGEN--\":1411:1413   */\n      iszero\n      tag_251\n      jumpi\n        /* \"--CODEGEN--\":1459:1460   */\n      0x00\n        /* \"--CODEGEN--\":1456:1457   */\n      dup1\n        /* \"--CODEGEN--\":1449:1461   */\n      revert\n        /* \"--CODEGEN--\":1411:1413   */\n    tag_251:\n        /* \"--CODEGEN--\":1494:1495   */\n      0x00\n        /* \"--CODEGEN--\":1511:1564   */\n      tag_252\n        /* \"--CODEGEN--\":1556:1563   */\n      dup7\n        /* \"--CODEGEN--\":1547:1553   */\n      dup3\n        /* \"--CODEGEN--\":1536:1545   */\n      dup8\n        /* \"--CODEGEN--\":1532:1554   */\n      add\n        /* \"--CODEGEN--\":1511:1564   */\n      jump(tag_231)\n    tag_252:\n        /* \"--CODEGEN--\":1501:1564   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":1473:1570   */\n      pop\n        /* \"--CODEGEN--\":1601:1603   */\n      0x20\n        /* \"--CODEGEN--\":1619:1672   */\n      tag_253\n        /* \"--CODEGEN--\":1664:1671   */\n      dup7\n        /* \"--CODEGEN--\":1655:1661   */\n      dup3\n        /* \"--CODEGEN--\":1644:1653   */\n      dup8\n        /* \"--CODEGEN--\":1640:1662   */\n      add\n        /* \"--CODEGEN--\":1619:1672   */\n      jump(tag_231)\n    tag_253:\n        /* \"--CODEGEN--\":1609:1672   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1580:1678   */\n      pop\n        /* \"--CODEGEN--\":1709:1711   */\n      0x40\n        /* \"--CODEGEN--\":1727:1780   */\n      tag_254\n        /* \"--CODEGEN--\":1772:1779   */\n      dup7\n        /* \"--CODEGEN--\":1763:1769   */\n      dup3\n        /* \"--CODEGEN--\":1752:1761   */\n      dup8\n        /* \"--CODEGEN--\":1748:1770   */\n      add\n        /* \"--CODEGEN--\":1727:1780   */\n      jump(tag_237)\n    tag_254:\n        /* \"--CODEGEN--\":1717:1780   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1688:1786   */\n      pop\n        /* \"--CODEGEN--\":1405:1796   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\n        /* \"--CODEGEN--\":1803:2169   */\n    tag_31:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1924:1926   */\n      0x40\n        /* \"--CODEGEN--\":1912:1921   */\n      dup4\n        /* \"--CODEGEN--\":1903:1910   */\n      dup6\n        /* \"--CODEGEN--\":1899:1922   */\n      sub\n        /* \"--CODEGEN--\":1895:1927   */\n      slt\n        /* \"--CODEGEN--\":1892:1894   */\n      iszero\n      tag_255\n      jumpi\n        /* \"--CODEGEN--\":1940:1941   */\n      0x00\n        /* \"--CODEGEN--\":1937:1938   */\n      dup1\n        /* \"--CODEGEN--\":1930:1942   */\n      revert\n        /* \"--CODEGEN--\":1892:1894   */\n    tag_255:\n        /* \"--CODEGEN--\":1975:1976   */\n      0x00\n        /* \"--CODEGEN--\":1992:2045   */\n      tag_256\n        /* \"--CODEGEN--\":2037:2044   */\n      dup6\n        /* \"--CODEGEN--\":2028:2034   */\n      dup3\n        /* \"--CODEGEN--\":2017:2026   */\n      dup7\n        /* \"--CODEGEN--\":2013:2035   */\n      add\n        /* \"--CODEGEN--\":1992:2045   */\n      jump(tag_231)\n    tag_256:\n        /* \"--CODEGEN--\":1982:2045   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1954:2051   */\n      pop\n        /* \"--CODEGEN--\":2082:2084   */\n      0x20\n        /* \"--CODEGEN--\":2100:2153   */\n      tag_257\n        /* \"--CODEGEN--\":2145:2152   */\n      dup6\n        /* \"--CODEGEN--\":2136:2142   */\n      dup3\n        /* \"--CODEGEN--\":2125:2134   */\n      dup7\n        /* \"--CODEGEN--\":2121:2143   */\n      add\n        /* \"--CODEGEN--\":2100:2153   */\n      jump(tag_237)\n    tag_257:\n        /* \"--CODEGEN--\":2090:2153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2061:2159   */\n      pop\n        /* \"--CODEGEN--\":1886:2169   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2176:3041   */\n    tag_92:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":2363:2366   */\n      0xc0\n        /* \"--CODEGEN--\":2351:2360   */\n      dup8\n        /* \"--CODEGEN--\":2342:2349   */\n      dup10\n        /* \"--CODEGEN--\":2338:2361   */\n      sub\n        /* \"--CODEGEN--\":2334:2367   */\n      slt\n        /* \"--CODEGEN--\":2331:2333   */\n      iszero\n      tag_258\n      jumpi\n        /* \"--CODEGEN--\":2380:2381   */\n      0x00\n        /* \"--CODEGEN--\":2377:2378   */\n      dup1\n        /* \"--CODEGEN--\":2370:2382   */\n      revert\n        /* \"--CODEGEN--\":2331:2333   */\n    tag_258:\n        /* \"--CODEGEN--\":2415:2416   */\n      0x00\n        /* \"--CODEGEN--\":2432:2485   */\n      tag_259\n        /* \"--CODEGEN--\":2477:2484   */\n      dup10\n        /* \"--CODEGEN--\":2468:2474   */\n      dup3\n        /* \"--CODEGEN--\":2457:2466   */\n      dup11\n        /* \"--CODEGEN--\":2453:2475   */\n      add\n        /* \"--CODEGEN--\":2432:2485   */\n      jump(tag_231)\n    tag_259:\n        /* \"--CODEGEN--\":2422:2485   */\n      swap7\n      pop\n        /* \"--CODEGEN--\":2394:2491   */\n      pop\n        /* \"--CODEGEN--\":2522:2524   */\n      0x20\n        /* \"--CODEGEN--\":2540:2593   */\n      tag_260\n        /* \"--CODEGEN--\":2585:2592   */\n      dup10\n        /* \"--CODEGEN--\":2576:2582   */\n      dup3\n        /* \"--CODEGEN--\":2565:2574   */\n      dup11\n        /* \"--CODEGEN--\":2561:2583   */\n      add\n        /* \"--CODEGEN--\":2540:2593   */\n      jump(tag_237)\n    tag_260:\n        /* \"--CODEGEN--\":2530:2593   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":2501:2599   */\n      pop\n        /* \"--CODEGEN--\":2630:2632   */\n      0x40\n        /* \"--CODEGEN--\":2648:2701   */\n      tag_261\n        /* \"--CODEGEN--\":2693:2700   */\n      dup10\n        /* \"--CODEGEN--\":2684:2690   */\n      dup3\n        /* \"--CODEGEN--\":2673:2682   */\n      dup11\n        /* \"--CODEGEN--\":2669:2691   */\n      add\n        /* \"--CODEGEN--\":2648:2701   */\n      jump(tag_237)\n    tag_261:\n        /* \"--CODEGEN--\":2638:2701   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":2609:2707   */\n      pop\n        /* \"--CODEGEN--\":2738:2740   */\n      0x60\n        /* \"--CODEGEN--\":2756:2807   */\n      tag_262\n        /* \"--CODEGEN--\":2799:2806   */\n      dup10\n        /* \"--CODEGEN--\":2790:2796   */\n      dup3\n        /* \"--CODEGEN--\":2779:2788   */\n      dup11\n        /* \"--CODEGEN--\":2775:2797   */\n      add\n        /* \"--CODEGEN--\":2756:2807   */\n      jump(tag_243)\n    tag_262:\n        /* \"--CODEGEN--\":2746:2807   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":2717:2813   */\n      pop\n        /* \"--CODEGEN--\":2844:2847   */\n      0x80\n        /* \"--CODEGEN--\":2863:2916   */\n      tag_263\n        /* \"--CODEGEN--\":2908:2915   */\n      dup10\n        /* \"--CODEGEN--\":2899:2905   */\n      dup3\n        /* \"--CODEGEN--\":2888:2897   */\n      dup11\n        /* \"--CODEGEN--\":2884:2906   */\n      add\n        /* \"--CODEGEN--\":2863:2916   */\n      jump(tag_234)\n    tag_263:\n        /* \"--CODEGEN--\":2853:2916   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":2823:2922   */\n      pop\n        /* \"--CODEGEN--\":2953:2956   */\n      0xa0\n        /* \"--CODEGEN--\":2972:3025   */\n      tag_264\n        /* \"--CODEGEN--\":3017:3024   */\n      dup10\n        /* \"--CODEGEN--\":3008:3014   */\n      dup3\n        /* \"--CODEGEN--\":2997:3006   */\n      dup11\n        /* \"--CODEGEN--\":2993:3015   */\n      add\n        /* \"--CODEGEN--\":2972:3025   */\n      jump(tag_234)\n    tag_264:\n        /* \"--CODEGEN--\":2962:3025   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2932:3031   */\n      pop\n        /* \"--CODEGEN--\":2325:3041   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\n        /* \"--CODEGEN--\":3048:3412   */\n    tag_104:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3168:3170   */\n      0x40\n        /* \"--CODEGEN--\":3156:3165   */\n      dup4\n        /* \"--CODEGEN--\":3147:3154   */\n      dup6\n        /* \"--CODEGEN--\":3143:3166   */\n      sub\n        /* \"--CODEGEN--\":3139:3171   */\n      slt\n        /* \"--CODEGEN--\":3136:3138   */\n      iszero\n      tag_265\n      jumpi\n        /* \"--CODEGEN--\":3184:3185   */\n      0x00\n        /* \"--CODEGEN--\":3181:3182   */\n      dup1\n        /* \"--CODEGEN--\":3174:3186   */\n      revert\n        /* \"--CODEGEN--\":3136:3138   */\n    tag_265:\n        /* \"--CODEGEN--\":3219:3220   */\n      0x00\n        /* \"--CODEGEN--\":3236:3289   */\n      tag_266\n        /* \"--CODEGEN--\":3281:3288   */\n      dup6\n        /* \"--CODEGEN--\":3272:3278   */\n      dup3\n        /* \"--CODEGEN--\":3261:3270   */\n      dup7\n        /* \"--CODEGEN--\":3257:3279   */\n      add\n        /* \"--CODEGEN--\":3236:3289   */\n      jump(tag_231)\n    tag_266:\n        /* \"--CODEGEN--\":3226:3289   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":3198:3295   */\n      pop\n        /* \"--CODEGEN--\":3326:3328   */\n      0x20\n        /* \"--CODEGEN--\":3344:3396   */\n      tag_267\n        /* \"--CODEGEN--\":3388:3395   */\n      dup6\n        /* \"--CODEGEN--\":3379:3385   */\n      dup3\n        /* \"--CODEGEN--\":3368:3377   */\n      dup7\n        /* \"--CODEGEN--\":3364:3386   */\n      add\n        /* \"--CODEGEN--\":3344:3396   */\n      jump(tag_240)\n    tag_267:\n        /* \"--CODEGEN--\":3334:3396   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":3305:3402   */\n      pop\n        /* \"--CODEGEN--\":3130:3412   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":3419:3532   */\n    tag_268:\n        /* \"--CODEGEN--\":3502:3526   */\n      tag_269\n        /* \"--CODEGEN--\":3520:3525   */\n      dup2\n        /* \"--CODEGEN--\":3502:3526   */\n      jump(tag_270)\n    tag_269:\n        /* \"--CODEGEN--\":3497:3500   */\n      dup3\n        /* \"--CODEGEN--\":3490:3527   */\n      mstore\n        /* \"--CODEGEN--\":3484:3532   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3539:3643   */\n    tag_271:\n        /* \"--CODEGEN--\":3616:3637   */\n      tag_272\n        /* \"--CODEGEN--\":3631:3636   */\n      dup2\n        /* \"--CODEGEN--\":3616:3637   */\n      jump(tag_273)\n    tag_272:\n        /* \"--CODEGEN--\":3611:3614   */\n      dup3\n        /* \"--CODEGEN--\":3604:3638   */\n      mstore\n        /* \"--CODEGEN--\":3598:3643   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3650:3763   */\n    tag_274:\n        /* \"--CODEGEN--\":3733:3757   */\n      tag_275\n        /* \"--CODEGEN--\":3751:3756   */\n      dup2\n        /* \"--CODEGEN--\":3733:3757   */\n      jump(tag_276)\n    tag_275:\n        /* \"--CODEGEN--\":3728:3731   */\n      dup3\n        /* \"--CODEGEN--\":3721:3758   */\n      mstore\n        /* \"--CODEGEN--\":3715:3763   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3770:3922   */\n    tag_277:\n        /* \"--CODEGEN--\":3871:3916   */\n      tag_278\n        /* \"--CODEGEN--\":3891:3915   */\n      tag_279\n        /* \"--CODEGEN--\":3909:3914   */\n      dup3\n        /* \"--CODEGEN--\":3891:3915   */\n      jump(tag_276)\n    tag_279:\n        /* \"--CODEGEN--\":3871:3916   */\n      jump(tag_280)\n    tag_278:\n        /* \"--CODEGEN--\":3866:3869   */\n      dup3\n        /* \"--CODEGEN--\":3859:3917   */\n      mstore\n        /* \"--CODEGEN--\":3853:3922   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3929:4276   */\n    tag_281:\n      0x00\n        /* \"--CODEGEN--\":4041:4080   */\n      tag_282\n        /* \"--CODEGEN--\":4074:4079   */\n      dup3\n        /* \"--CODEGEN--\":4041:4080   */\n      jump(tag_283)\n    tag_282:\n        /* \"--CODEGEN--\":4092:4163   */\n      tag_284\n        /* \"--CODEGEN--\":4156:4162   */\n      dup2\n        /* \"--CODEGEN--\":4151:4154   */\n      dup6\n        /* \"--CODEGEN--\":4092:4163   */\n      jump(tag_285)\n    tag_284:\n        /* \"--CODEGEN--\":4085:4163   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":4168:4220   */\n      tag_286\n        /* \"--CODEGEN--\":4213:4219   */\n      dup2\n        /* \"--CODEGEN--\":4208:4211   */\n      dup6\n        /* \"--CODEGEN--\":4201:4205   */\n      0x20\n        /* \"--CODEGEN--\":4194:4199   */\n      dup7\n        /* \"--CODEGEN--\":4190:4206   */\n      add\n        /* \"--CODEGEN--\":4168:4220   */\n      jump(tag_287)\n    tag_286:\n        /* \"--CODEGEN--\":4241:4270   */\n      tag_288\n        /* \"--CODEGEN--\":4263:4269   */\n      dup2\n        /* \"--CODEGEN--\":4241:4270   */\n      jump(tag_289)\n    tag_288:\n        /* \"--CODEGEN--\":4236:4239   */\n      dup5\n        /* \"--CODEGEN--\":4232:4271   */\n      add\n        /* \"--CODEGEN--\":4225:4271   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":4021:4276   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":4283:4622   */\n    tag_290:\n      0x00\n        /* \"--CODEGEN--\":4391:4426   */\n      tag_291\n        /* \"--CODEGEN--\":4420:4425   */\n      dup3\n        /* \"--CODEGEN--\":4391:4426   */\n      jump(tag_292)\n    tag_291:\n        /* \"--CODEGEN--\":4438:4509   */\n      tag_293\n        /* \"--CODEGEN--\":4502:4508   */\n      dup2\n        /* \"--CODEGEN--\":4497:4500   */\n      dup6\n        /* \"--CODEGEN--\":4438:4509   */\n      jump(tag_285)\n    tag_293:\n        /* \"--CODEGEN--\":4431:4509   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":4514:4566   */\n      tag_294\n        /* \"--CODEGEN--\":4559:4565   */\n      dup2\n        /* \"--CODEGEN--\":4554:4557   */\n      dup6\n        /* \"--CODEGEN--\":4547:4551   */\n      0x20\n        /* \"--CODEGEN--\":4540:4545   */\n      dup7\n        /* \"--CODEGEN--\":4536:4552   */\n      add\n        /* \"--CODEGEN--\":4514:4566   */\n      jump(tag_287)\n    tag_294:\n        /* \"--CODEGEN--\":4587:4616   */\n      tag_295\n        /* \"--CODEGEN--\":4609:4615   */\n      dup2\n        /* \"--CODEGEN--\":4587:4616   */\n      jump(tag_289)\n    tag_295:\n        /* \"--CODEGEN--\":4582:4585   */\n      dup5\n        /* \"--CODEGEN--\":4578:4617   */\n      add\n        /* \"--CODEGEN--\":4571:4617   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":4371:4622   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":4630:5024   */\n    tag_296:\n      0x00\n        /* \"--CODEGEN--\":4790:4857   */\n      tag_297\n        /* \"--CODEGEN--\":4854:4856   */\n      0x39\n        /* \"--CODEGEN--\":4849:4852   */\n      dup4\n        /* \"--CODEGEN--\":4790:4857   */\n      jump(tag_285)\n    tag_297:\n        /* \"--CODEGEN--\":4783:4857   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":4890:4924   */\n      0x4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747261\n        /* \"--CODEGEN--\":4886:4887   */\n      0x00\n        /* \"--CODEGEN--\":4881:4884   */\n      dup4\n        /* \"--CODEGEN--\":4877:4888   */\n      add\n        /* \"--CODEGEN--\":4870:4925   */\n      mstore\n        /* \"--CODEGEN--\":4959:4986   */\n      0x6e7366657220746f20746865207a65726f206164647265737300000000000000\n        /* \"--CODEGEN--\":4954:4956   */\n      0x20\n        /* \"--CODEGEN--\":4949:4952   */\n      dup4\n        /* \"--CODEGEN--\":4945:4957   */\n      add\n        /* \"--CODEGEN--\":4938:4987   */\n      mstore\n        /* \"--CODEGEN--\":5015:5017   */\n      0x40\n        /* \"--CODEGEN--\":5010:5013   */\n      dup3\n        /* \"--CODEGEN--\":5006:5018   */\n      add\n        /* \"--CODEGEN--\":4999:5018   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4776:5024   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5033:5429   */\n    tag_298:\n      0x00\n        /* \"--CODEGEN--\":5193:5260   */\n      tag_299\n        /* \"--CODEGEN--\":5257:5259   */\n      0x3b\n        /* \"--CODEGEN--\":5252:5255   */\n      dup4\n        /* \"--CODEGEN--\":5193:5260   */\n      jump(tag_285)\n    tag_299:\n        /* \"--CODEGEN--\":5186:5260   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5293:5327   */\n      0x4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747261\n        /* \"--CODEGEN--\":5289:5290   */\n      0x00\n        /* \"--CODEGEN--\":5284:5287   */\n      dup4\n        /* \"--CODEGEN--\":5280:5291   */\n      add\n        /* \"--CODEGEN--\":5273:5328   */\n      mstore\n        /* \"--CODEGEN--\":5362:5391   */\n      0x6e736665722066726f6d20746865207a65726f20616464726573730000000000\n        /* \"--CODEGEN--\":5357:5359   */\n      0x20\n        /* \"--CODEGEN--\":5352:5355   */\n      dup4\n        /* \"--CODEGEN--\":5348:5360   */\n      add\n        /* \"--CODEGEN--\":5341:5392   */\n      mstore\n        /* \"--CODEGEN--\":5420:5422   */\n      0x40\n        /* \"--CODEGEN--\":5415:5418   */\n      dup3\n        /* \"--CODEGEN--\":5411:5423   */\n      add\n        /* \"--CODEGEN--\":5404:5423   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5179:5429   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5438:5813   */\n    tag_300:\n      0x00\n        /* \"--CODEGEN--\":5598:5665   */\n      tag_301\n        /* \"--CODEGEN--\":5662:5664   */\n      0x26\n        /* \"--CODEGEN--\":5657:5660   */\n      dup4\n        /* \"--CODEGEN--\":5598:5665   */\n      jump(tag_285)\n    tag_301:\n        /* \"--CODEGEN--\":5591:5665   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5698:5732   */\n      0x4e69753a3a6765745072696f72566f7465733a206e6f74207965742064657465\n        /* \"--CODEGEN--\":5694:5695   */\n      0x00\n        /* \"--CODEGEN--\":5689:5692   */\n      dup4\n        /* \"--CODEGEN--\":5685:5696   */\n      add\n        /* \"--CODEGEN--\":5678:5733   */\n      mstore\n        /* \"--CODEGEN--\":5767:5775   */\n      0x726d696e65640000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":5762:5764   */\n      0x20\n        /* \"--CODEGEN--\":5757:5760   */\n      dup4\n        /* \"--CODEGEN--\":5753:5765   */\n      add\n        /* \"--CODEGEN--\":5746:5776   */\n      mstore\n        /* \"--CODEGEN--\":5804:5806   */\n      0x40\n        /* \"--CODEGEN--\":5799:5802   */\n      dup3\n        /* \"--CODEGEN--\":5795:5807   */\n      add\n        /* \"--CODEGEN--\":5788:5807   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5584:5813   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5822:6220   */\n    tag_302:\n      0x00\n        /* \"--CODEGEN--\":6000:6084   */\n      tag_303\n        /* \"--CODEGEN--\":6082:6083   */\n      0x02\n        /* \"--CODEGEN--\":6077:6080   */\n      dup4\n        /* \"--CODEGEN--\":6000:6084   */\n      jump(tag_304)\n    tag_303:\n        /* \"--CODEGEN--\":5993:6084   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":6117:6183   */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":6113:6114   */\n      0x00\n        /* \"--CODEGEN--\":6108:6111   */\n      dup4\n        /* \"--CODEGEN--\":6104:6115   */\n      add\n        /* \"--CODEGEN--\":6097:6184   */\n      mstore\n        /* \"--CODEGEN--\":6212:6213   */\n      0x02\n        /* \"--CODEGEN--\":6207:6210   */\n      dup3\n        /* \"--CODEGEN--\":6203:6214   */\n      add\n        /* \"--CODEGEN--\":6196:6214   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5986:6220   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":6229:6603   */\n    tag_305:\n      0x00\n        /* \"--CODEGEN--\":6389:6456   */\n      tag_306\n        /* \"--CODEGEN--\":6453:6455   */\n      0x25\n        /* \"--CODEGEN--\":6448:6451   */\n      dup4\n        /* \"--CODEGEN--\":6389:6456   */\n      jump(tag_285)\n    tag_306:\n        /* \"--CODEGEN--\":6382:6456   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":6489:6523   */\n      0x4e69753a3a64656c656761746542795369673a20696e76616c6964207369676e\n        /* \"--CODEGEN--\":6485:6486   */\n      0x00\n        /* \"--CODEGEN--\":6480:6483   */\n      dup4\n        /* \"--CODEGEN--\":6476:6487   */\n      add\n        /* \"--CODEGEN--\":6469:6524   */\n      mstore\n        /* \"--CODEGEN--\":6558:6565   */\n      0x6174757265000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":6553:6555   */\n      0x20\n        /* \"--CODEGEN--\":6548:6551   */\n      dup4\n        /* \"--CODEGEN--\":6544:6556   */\n      add\n        /* \"--CODEGEN--\":6537:6566   */\n      mstore\n        /* \"--CODEGEN--\":6594:6596   */\n      0x40\n        /* \"--CODEGEN--\":6589:6592   */\n      dup3\n        /* \"--CODEGEN--\":6585:6597   */\n      add\n        /* \"--CODEGEN--\":6578:6597   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6375:6603   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":6612:7089   */\n    tag_307:\n      0x00\n        /* \"--CODEGEN--\":6790:6875   */\n      tag_308\n        /* \"--CODEGEN--\":6872:6874   */\n      0x43\n        /* \"--CODEGEN--\":6867:6870   */\n      dup4\n        /* \"--CODEGEN--\":6790:6875   */\n      jump(tag_304)\n    tag_308:\n        /* \"--CODEGEN--\":6783:6875   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":6908:6942   */\n      0x454950373132446f6d61696e28737472696e67206e616d652c75696e74323536\n        /* \"--CODEGEN--\":6904:6905   */\n      0x00\n        /* \"--CODEGEN--\":6899:6902   */\n      dup4\n        /* \"--CODEGEN--\":6895:6906   */\n      add\n        /* \"--CODEGEN--\":6888:6943   */\n      mstore\n        /* \"--CODEGEN--\":6977:7011   */\n      0x20636861696e49642c6164647265737320766572696679696e67436f6e747261\n        /* \"--CODEGEN--\":6972:6974   */\n      0x20\n        /* \"--CODEGEN--\":6967:6970   */\n      dup4\n        /* \"--CODEGEN--\":6963:6975   */\n      add\n        /* \"--CODEGEN--\":6956:7012   */\n      mstore\n        /* \"--CODEGEN--\":7046:7051   */\n      0x6374290000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":7041:7043   */\n      0x40\n        /* \"--CODEGEN--\":7036:7039   */\n      dup4\n        /* \"--CODEGEN--\":7032:7044   */\n      add\n        /* \"--CODEGEN--\":7025:7052   */\n      mstore\n        /* \"--CODEGEN--\":7080:7082   */\n      0x43\n        /* \"--CODEGEN--\":7075:7078   */\n      dup3\n        /* \"--CODEGEN--\":7071:7083   */\n      add\n        /* \"--CODEGEN--\":7064:7083   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6776:7089   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":7098:7472   */\n    tag_309:\n      0x00\n        /* \"--CODEGEN--\":7258:7325   */\n      tag_310\n        /* \"--CODEGEN--\":7322:7324   */\n      0x25\n        /* \"--CODEGEN--\":7317:7320   */\n      dup4\n        /* \"--CODEGEN--\":7258:7325   */\n      jump(tag_285)\n    tag_310:\n        /* \"--CODEGEN--\":7251:7325   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7358:7392   */\n      0x4e69753a3a64656c656761746542795369673a207369676e6174757265206578\n        /* \"--CODEGEN--\":7354:7355   */\n      0x00\n        /* \"--CODEGEN--\":7349:7352   */\n      dup4\n        /* \"--CODEGEN--\":7345:7356   */\n      add\n        /* \"--CODEGEN--\":7338:7393   */\n      mstore\n        /* \"--CODEGEN--\":7427:7434   */\n      0x7069726564000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":7422:7424   */\n      0x20\n        /* \"--CODEGEN--\":7417:7420   */\n      dup4\n        /* \"--CODEGEN--\":7413:7425   */\n      add\n        /* \"--CODEGEN--\":7406:7435   */\n      mstore\n        /* \"--CODEGEN--\":7463:7465   */\n      0x40\n        /* \"--CODEGEN--\":7458:7461   */\n      dup3\n        /* \"--CODEGEN--\":7454:7466   */\n      add\n        /* \"--CODEGEN--\":7447:7466   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":7244:7472   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":7481:7851   */\n    tag_311:\n      0x00\n        /* \"--CODEGEN--\":7641:7708   */\n      tag_312\n        /* \"--CODEGEN--\":7705:7707   */\n      0x21\n        /* \"--CODEGEN--\":7700:7703   */\n      dup4\n        /* \"--CODEGEN--\":7641:7708   */\n      jump(tag_285)\n    tag_312:\n        /* \"--CODEGEN--\":7634:7708   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7741:7775   */\n      0x4e69753a3a64656c656761746542795369673a20696e76616c6964206e6f6e63\n        /* \"--CODEGEN--\":7737:7738   */\n      0x00\n        /* \"--CODEGEN--\":7732:7735   */\n      dup4\n        /* \"--CODEGEN--\":7728:7739   */\n      add\n        /* \"--CODEGEN--\":7721:7776   */\n      mstore\n        /* \"--CODEGEN--\":7810:7813   */\n      0x6500000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":7805:7807   */\n      0x20\n        /* \"--CODEGEN--\":7800:7803   */\n      dup4\n        /* \"--CODEGEN--\":7796:7808   */\n      add\n        /* \"--CODEGEN--\":7789:7814   */\n      mstore\n        /* \"--CODEGEN--\":7842:7844   */\n      0x40\n        /* \"--CODEGEN--\":7837:7840   */\n      dup3\n        /* \"--CODEGEN--\":7833:7845   */\n      add\n        /* \"--CODEGEN--\":7826:7845   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":7627:7851   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":7860:8291   */\n    tag_313:\n      0x00\n        /* \"--CODEGEN--\":8038:8123   */\n      tag_314\n        /* \"--CODEGEN--\":8120:8122   */\n      0x3a\n        /* \"--CODEGEN--\":8115:8118   */\n      dup4\n        /* \"--CODEGEN--\":8038:8123   */\n      jump(tag_304)\n    tag_314:\n        /* \"--CODEGEN--\":8031:8123   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":8156:8190   */\n      0x44656c65676174696f6e28616464726573732064656c6567617465652c75696e\n        /* \"--CODEGEN--\":8152:8153   */\n      0x00\n        /* \"--CODEGEN--\":8147:8150   */\n      dup4\n        /* \"--CODEGEN--\":8143:8154   */\n      add\n        /* \"--CODEGEN--\":8136:8191   */\n      mstore\n        /* \"--CODEGEN--\":8225:8253   */\n      0x74323536206e6f6e63652c75696e743235362065787069727929000000000000\n        /* \"--CODEGEN--\":8220:8222   */\n      0x20\n        /* \"--CODEGEN--\":8215:8218   */\n      dup4\n        /* \"--CODEGEN--\":8211:8223   */\n      add\n        /* \"--CODEGEN--\":8204:8254   */\n      mstore\n        /* \"--CODEGEN--\":8282:8284   */\n      0x3a\n        /* \"--CODEGEN--\":8277:8280   */\n      dup3\n        /* \"--CODEGEN--\":8273:8285   */\n      add\n        /* \"--CODEGEN--\":8266:8285   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8024:8291   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":8299:8412   */\n    tag_315:\n        /* \"--CODEGEN--\":8382:8406   */\n      tag_316\n        /* \"--CODEGEN--\":8400:8405   */\n      dup2\n        /* \"--CODEGEN--\":8382:8406   */\n      jump(tag_317)\n    tag_316:\n        /* \"--CODEGEN--\":8377:8380   */\n      dup3\n        /* \"--CODEGEN--\":8370:8407   */\n      mstore\n        /* \"--CODEGEN--\":8364:8412   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":8419:8529   */\n    tag_318:\n        /* \"--CODEGEN--\":8500:8523   */\n      tag_319\n        /* \"--CODEGEN--\":8517:8522   */\n      dup2\n        /* \"--CODEGEN--\":8500:8523   */\n      jump(tag_320)\n    tag_319:\n        /* \"--CODEGEN--\":8495:8498   */\n      dup3\n        /* \"--CODEGEN--\":8488:8524   */\n      mstore\n        /* \"--CODEGEN--\":8482:8529   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":8536:8643   */\n    tag_321:\n        /* \"--CODEGEN--\":8615:8637   */\n      tag_322\n        /* \"--CODEGEN--\":8631:8636   */\n      dup2\n        /* \"--CODEGEN--\":8615:8637   */\n      jump(tag_323)\n    tag_322:\n        /* \"--CODEGEN--\":8610:8613   */\n      dup3\n        /* \"--CODEGEN--\":8603:8638   */\n      mstore\n        /* \"--CODEGEN--\":8597:8643   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":8650:8774   */\n    tag_324:\n        /* \"--CODEGEN--\":8732:8768   */\n      tag_325\n        /* \"--CODEGEN--\":8762:8767   */\n      dup2\n        /* \"--CODEGEN--\":8732:8768   */\n      jump(tag_326)\n    tag_325:\n        /* \"--CODEGEN--\":8727:8730   */\n      dup3\n        /* \"--CODEGEN--\":8720:8769   */\n      mstore\n        /* \"--CODEGEN--\":8714:8774   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":8781:8891   */\n    tag_327:\n        /* \"--CODEGEN--\":8862:8885   */\n      tag_328\n        /* \"--CODEGEN--\":8879:8884   */\n      dup2\n        /* \"--CODEGEN--\":8862:8885   */\n      jump(tag_329)\n    tag_328:\n        /* \"--CODEGEN--\":8857:8860   */\n      dup3\n        /* \"--CODEGEN--\":8850:8886   */\n      mstore\n        /* \"--CODEGEN--\":8844:8891   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":8898:9548   */\n    tag_163:\n      0x00\n        /* \"--CODEGEN--\":9153:9301   */\n      tag_330\n        /* \"--CODEGEN--\":9297:9300   */\n      dup3\n        /* \"--CODEGEN--\":9153:9301   */\n      jump(tag_302)\n    tag_330:\n        /* \"--CODEGEN--\":9146:9301   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":9312:9387   */\n      tag_331\n        /* \"--CODEGEN--\":9383:9386   */\n      dup3\n        /* \"--CODEGEN--\":9374:9380   */\n      dup6\n        /* \"--CODEGEN--\":9312:9387   */\n      jump(tag_277)\n    tag_331:\n        /* \"--CODEGEN--\":9409:9411   */\n      0x20\n        /* \"--CODEGEN--\":9404:9407   */\n      dup3\n        /* \"--CODEGEN--\":9400:9412   */\n      add\n        /* \"--CODEGEN--\":9393:9412   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":9423:9498   */\n      tag_332\n        /* \"--CODEGEN--\":9494:9497   */\n      dup3\n        /* \"--CODEGEN--\":9485:9491   */\n      dup5\n        /* \"--CODEGEN--\":9423:9498   */\n      jump(tag_277)\n    tag_332:\n        /* \"--CODEGEN--\":9520:9522   */\n      0x20\n        /* \"--CODEGEN--\":9515:9518   */\n      dup3\n        /* \"--CODEGEN--\":9511:9523   */\n      add\n        /* \"--CODEGEN--\":9504:9523   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":9540:9543   */\n      dup2\n        /* \"--CODEGEN--\":9533:9543   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":9134:9548   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":9555:9927   */\n    tag_116:\n      0x00\n        /* \"--CODEGEN--\":9754:9902   */\n      tag_333\n        /* \"--CODEGEN--\":9898:9901   */\n      dup3\n        /* \"--CODEGEN--\":9754:9902   */\n      jump(tag_307)\n    tag_333:\n        /* \"--CODEGEN--\":9747:9902   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":9919:9922   */\n      dup2\n        /* \"--CODEGEN--\":9912:9922   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":9735:9927   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":9934:10306   */\n    tag_159:\n      0x00\n        /* \"--CODEGEN--\":10133:10281   */\n      tag_334\n        /* \"--CODEGEN--\":10277:10280   */\n      dup3\n        /* \"--CODEGEN--\":10133:10281   */\n      jump(tag_313)\n    tag_334:\n        /* \"--CODEGEN--\":10126:10281   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":10298:10301   */\n      dup2\n        /* \"--CODEGEN--\":10291:10301   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":10114:10306   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":10313:10526   */\n    tag_57:\n      0x00\n        /* \"--CODEGEN--\":10431:10433   */\n      0x20\n        /* \"--CODEGEN--\":10420:10429   */\n      dup3\n        /* \"--CODEGEN--\":10416:10434   */\n      add\n        /* \"--CODEGEN--\":10408:10434   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":10445:10516   */\n      tag_335\n        /* \"--CODEGEN--\":10513:10514   */\n      0x00\n        /* \"--CODEGEN--\":10502:10511   */\n      dup4\n        /* \"--CODEGEN--\":10498:10515   */\n      add\n        /* \"--CODEGEN--\":10489:10495   */\n      dup5\n        /* \"--CODEGEN--\":10445:10516   */\n      jump(tag_268)\n    tag_335:\n        /* \"--CODEGEN--\":10402:10526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":10533:10734   */\n    tag_34:\n      0x00\n        /* \"--CODEGEN--\":10645:10647   */\n      0x20\n        /* \"--CODEGEN--\":10634:10643   */\n      dup3\n        /* \"--CODEGEN--\":10630:10648   */\n      add\n        /* \"--CODEGEN--\":10622:10648   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":10659:10724   */\n      tag_336\n        /* \"--CODEGEN--\":10721:10722   */\n      0x00\n        /* \"--CODEGEN--\":10710:10719   */\n      dup4\n        /* \"--CODEGEN--\":10706:10723   */\n      add\n        /* \"--CODEGEN--\":10697:10703   */\n      dup5\n        /* \"--CODEGEN--\":10659:10724   */\n      jump(tag_271)\n    tag_336:\n        /* \"--CODEGEN--\":10616:10734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":10741:10954   */\n    tag_42:\n      0x00\n        /* \"--CODEGEN--\":10859:10861   */\n      0x20\n        /* \"--CODEGEN--\":10848:10857   */\n      dup3\n        /* \"--CODEGEN--\":10844:10862   */\n      add\n        /* \"--CODEGEN--\":10836:10862   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":10873:10944   */\n      tag_337\n        /* \"--CODEGEN--\":10941:10942   */\n      0x00\n        /* \"--CODEGEN--\":10930:10939   */\n      dup4\n        /* \"--CODEGEN--\":10926:10943   */\n      add\n        /* \"--CODEGEN--\":10917:10923   */\n      dup5\n        /* \"--CODEGEN--\":10873:10944   */\n      jump(tag_274)\n    tag_337:\n        /* \"--CODEGEN--\":10830:10954   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":10961:11508   */\n    tag_161:\n      0x00\n        /* \"--CODEGEN--\":11163:11166   */\n      0x80\n        /* \"--CODEGEN--\":11152:11161   */\n      dup3\n        /* \"--CODEGEN--\":11148:11167   */\n      add\n        /* \"--CODEGEN--\":11140:11167   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":11178:11249   */\n      tag_338\n        /* \"--CODEGEN--\":11246:11247   */\n      0x00\n        /* \"--CODEGEN--\":11235:11244   */\n      dup4\n        /* \"--CODEGEN--\":11231:11248   */\n      add\n        /* \"--CODEGEN--\":11222:11228   */\n      dup8\n        /* \"--CODEGEN--\":11178:11249   */\n      jump(tag_274)\n    tag_338:\n        /* \"--CODEGEN--\":11260:11332   */\n      tag_339\n        /* \"--CODEGEN--\":11328:11330   */\n      0x20\n        /* \"--CODEGEN--\":11317:11326   */\n      dup4\n        /* \"--CODEGEN--\":11313:11331   */\n      add\n        /* \"--CODEGEN--\":11304:11310   */\n      dup7\n        /* \"--CODEGEN--\":11260:11332   */\n      jump(tag_268)\n    tag_339:\n        /* \"--CODEGEN--\":11343:11415   */\n      tag_340\n        /* \"--CODEGEN--\":11411:11413   */\n      0x40\n        /* \"--CODEGEN--\":11400:11409   */\n      dup4\n        /* \"--CODEGEN--\":11396:11414   */\n      add\n        /* \"--CODEGEN--\":11387:11393   */\n      dup6\n        /* \"--CODEGEN--\":11343:11415   */\n      jump(tag_315)\n    tag_340:\n        /* \"--CODEGEN--\":11426:11498   */\n      tag_341\n        /* \"--CODEGEN--\":11494:11496   */\n      0x60\n        /* \"--CODEGEN--\":11483:11492   */\n      dup4\n        /* \"--CODEGEN--\":11479:11497   */\n      add\n        /* \"--CODEGEN--\":11470:11476   */\n      dup5\n        /* \"--CODEGEN--\":11426:11498   */\n      jump(tag_315)\n    tag_341:\n        /* \"--CODEGEN--\":11134:11508   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":11515:12062   */\n    tag_157:\n      0x00\n        /* \"--CODEGEN--\":11717:11720   */\n      0x80\n        /* \"--CODEGEN--\":11706:11715   */\n      dup3\n        /* \"--CODEGEN--\":11702:11721   */\n      add\n        /* \"--CODEGEN--\":11694:11721   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":11732:11803   */\n      tag_342\n        /* \"--CODEGEN--\":11800:11801   */\n      0x00\n        /* \"--CODEGEN--\":11789:11798   */\n      dup4\n        /* \"--CODEGEN--\":11785:11802   */\n      add\n        /* \"--CODEGEN--\":11776:11782   */\n      dup8\n        /* \"--CODEGEN--\":11732:11803   */\n      jump(tag_274)\n    tag_342:\n        /* \"--CODEGEN--\":11814:11886   */\n      tag_343\n        /* \"--CODEGEN--\":11882:11884   */\n      0x20\n        /* \"--CODEGEN--\":11871:11880   */\n      dup4\n        /* \"--CODEGEN--\":11867:11885   */\n      add\n        /* \"--CODEGEN--\":11858:11864   */\n      dup7\n        /* \"--CODEGEN--\":11814:11886   */\n      jump(tag_274)\n    tag_343:\n        /* \"--CODEGEN--\":11897:11969   */\n      tag_344\n        /* \"--CODEGEN--\":11965:11967   */\n      0x40\n        /* \"--CODEGEN--\":11954:11963   */\n      dup4\n        /* \"--CODEGEN--\":11950:11968   */\n      add\n        /* \"--CODEGEN--\":11941:11947   */\n      dup6\n        /* \"--CODEGEN--\":11897:11969   */\n      jump(tag_315)\n    tag_344:\n        /* \"--CODEGEN--\":11980:12052   */\n      tag_345\n        /* \"--CODEGEN--\":12048:12050   */\n      0x60\n        /* \"--CODEGEN--\":12037:12046   */\n      dup4\n        /* \"--CODEGEN--\":12033:12051   */\n      add\n        /* \"--CODEGEN--\":12024:12030   */\n      dup5\n        /* \"--CODEGEN--\":11980:12052   */\n      jump(tag_268)\n    tag_345:\n        /* \"--CODEGEN--\":11688:12062   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":12069:12608   */\n    tag_165:\n      0x00\n        /* \"--CODEGEN--\":12267:12270   */\n      0x80\n        /* \"--CODEGEN--\":12256:12265   */\n      dup3\n        /* \"--CODEGEN--\":12252:12271   */\n      add\n        /* \"--CODEGEN--\":12244:12271   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":12282:12353   */\n      tag_346\n        /* \"--CODEGEN--\":12350:12351   */\n      0x00\n        /* \"--CODEGEN--\":12339:12348   */\n      dup4\n        /* \"--CODEGEN--\":12335:12352   */\n      add\n        /* \"--CODEGEN--\":12326:12332   */\n      dup8\n        /* \"--CODEGEN--\":12282:12353   */\n      jump(tag_274)\n    tag_346:\n        /* \"--CODEGEN--\":12364:12432   */\n      tag_347\n        /* \"--CODEGEN--\":12428:12430   */\n      0x20\n        /* \"--CODEGEN--\":12417:12426   */\n      dup4\n        /* \"--CODEGEN--\":12413:12431   */\n      add\n        /* \"--CODEGEN--\":12404:12410   */\n      dup7\n        /* \"--CODEGEN--\":12364:12432   */\n      jump(tag_321)\n    tag_347:\n        /* \"--CODEGEN--\":12443:12515   */\n      tag_348\n        /* \"--CODEGEN--\":12511:12513   */\n      0x40\n        /* \"--CODEGEN--\":12500:12509   */\n      dup4\n        /* \"--CODEGEN--\":12496:12514   */\n      add\n        /* \"--CODEGEN--\":12487:12493   */\n      dup6\n        /* \"--CODEGEN--\":12443:12515   */\n      jump(tag_274)\n    tag_348:\n        /* \"--CODEGEN--\":12526:12598   */\n      tag_349\n        /* \"--CODEGEN--\":12594:12596   */\n      0x60\n        /* \"--CODEGEN--\":12583:12592   */\n      dup4\n        /* \"--CODEGEN--\":12579:12597   */\n      add\n        /* \"--CODEGEN--\":12570:12576   */\n      dup5\n        /* \"--CODEGEN--\":12526:12598   */\n      jump(tag_274)\n    tag_349:\n        /* \"--CODEGEN--\":12238:12608   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":12615:12908   */\n    tag_28:\n      0x00\n        /* \"--CODEGEN--\":12749:12751   */\n      0x20\n        /* \"--CODEGEN--\":12738:12747   */\n      dup3\n        /* \"--CODEGEN--\":12734:12752   */\n      add\n        /* \"--CODEGEN--\":12726:12752   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":12799:12808   */\n      dup2\n        /* \"--CODEGEN--\":12793:12797   */\n      dup2\n        /* \"--CODEGEN--\":12789:12809   */\n      sub\n        /* \"--CODEGEN--\":12785:12786   */\n      0x00\n        /* \"--CODEGEN--\":12774:12783   */\n      dup4\n        /* \"--CODEGEN--\":12770:12787   */\n      add\n        /* \"--CODEGEN--\":12763:12810   */\n      mstore\n        /* \"--CODEGEN--\":12824:12898   */\n      tag_350\n        /* \"--CODEGEN--\":12893:12897   */\n      dup2\n        /* \"--CODEGEN--\":12884:12890   */\n      dup5\n        /* \"--CODEGEN--\":12824:12898   */\n      jump(tag_290)\n    tag_350:\n        /* \"--CODEGEN--\":12816:12898   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":12720:12908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":12915:13216   */\n    tag_182:\n      0x00\n        /* \"--CODEGEN--\":13053:13055   */\n      0x20\n        /* \"--CODEGEN--\":13042:13051   */\n      dup3\n        /* \"--CODEGEN--\":13038:13056   */\n      add\n        /* \"--CODEGEN--\":13030:13056   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":13103:13112   */\n      dup2\n        /* \"--CODEGEN--\":13097:13101   */\n      dup2\n        /* \"--CODEGEN--\":13093:13113   */\n      sub\n        /* \"--CODEGEN--\":13089:13090   */\n      0x00\n        /* \"--CODEGEN--\":13078:13087   */\n      dup4\n        /* \"--CODEGEN--\":13074:13091   */\n      add\n        /* \"--CODEGEN--\":13067:13114   */\n      mstore\n        /* \"--CODEGEN--\":13128:13206   */\n      tag_351\n        /* \"--CODEGEN--\":13201:13205   */\n      dup2\n        /* \"--CODEGEN--\":13192:13198   */\n      dup5\n        /* \"--CODEGEN--\":13128:13206   */\n      jump(tag_281)\n    tag_351:\n        /* \"--CODEGEN--\":13120:13206   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":13024:13216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":13223:13630   */\n    tag_192:\n      0x00\n        /* \"--CODEGEN--\":13414:13416   */\n      0x20\n        /* \"--CODEGEN--\":13403:13412   */\n      dup3\n        /* \"--CODEGEN--\":13399:13417   */\n      add\n        /* \"--CODEGEN--\":13391:13417   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":13464:13473   */\n      dup2\n        /* \"--CODEGEN--\":13458:13462   */\n      dup2\n        /* \"--CODEGEN--\":13454:13474   */\n      sub\n        /* \"--CODEGEN--\":13450:13451   */\n      0x00\n        /* \"--CODEGEN--\":13439:13448   */\n      dup4\n        /* \"--CODEGEN--\":13435:13452   */\n      add\n        /* \"--CODEGEN--\":13428:13475   */\n      mstore\n        /* \"--CODEGEN--\":13489:13620   */\n      tag_352\n        /* \"--CODEGEN--\":13615:13619   */\n      dup2\n        /* \"--CODEGEN--\":13489:13620   */\n      jump(tag_296)\n    tag_352:\n        /* \"--CODEGEN--\":13481:13620   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":13385:13630   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":13637:14044   */\n    tag_189:\n      0x00\n        /* \"--CODEGEN--\":13828:13830   */\n      0x20\n        /* \"--CODEGEN--\":13817:13826   */\n      dup3\n        /* \"--CODEGEN--\":13813:13831   */\n      add\n        /* \"--CODEGEN--\":13805:13831   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":13878:13887   */\n      dup2\n        /* \"--CODEGEN--\":13872:13876   */\n      dup2\n        /* \"--CODEGEN--\":13868:13888   */\n      sub\n        /* \"--CODEGEN--\":13864:13865   */\n      0x00\n        /* \"--CODEGEN--\":13853:13862   */\n      dup4\n        /* \"--CODEGEN--\":13849:13866   */\n      add\n        /* \"--CODEGEN--\":13842:13889   */\n      mstore\n        /* \"--CODEGEN--\":13903:14034   */\n      tag_353\n        /* \"--CODEGEN--\":14029:14033   */\n      dup2\n        /* \"--CODEGEN--\":13903:14034   */\n      jump(tag_298)\n    tag_353:\n        /* \"--CODEGEN--\":13895:14034   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":13799:14044   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":14051:14458   */\n    tag_133:\n      0x00\n        /* \"--CODEGEN--\":14242:14244   */\n      0x20\n        /* \"--CODEGEN--\":14231:14240   */\n      dup3\n        /* \"--CODEGEN--\":14227:14245   */\n      add\n        /* \"--CODEGEN--\":14219:14245   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":14292:14301   */\n      dup2\n        /* \"--CODEGEN--\":14286:14290   */\n      dup2\n        /* \"--CODEGEN--\":14282:14302   */\n      sub\n        /* \"--CODEGEN--\":14278:14279   */\n      0x00\n        /* \"--CODEGEN--\":14267:14276   */\n      dup4\n        /* \"--CODEGEN--\":14263:14280   */\n      add\n        /* \"--CODEGEN--\":14256:14303   */\n      mstore\n        /* \"--CODEGEN--\":14317:14448   */\n      tag_354\n        /* \"--CODEGEN--\":14443:14447   */\n      dup2\n        /* \"--CODEGEN--\":14317:14448   */\n      jump(tag_300)\n    tag_354:\n        /* \"--CODEGEN--\":14309:14448   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":14213:14458   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":14465:14872   */\n    tag_169:\n      0x00\n        /* \"--CODEGEN--\":14656:14658   */\n      0x20\n        /* \"--CODEGEN--\":14645:14654   */\n      dup3\n        /* \"--CODEGEN--\":14641:14659   */\n      add\n        /* \"--CODEGEN--\":14633:14659   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":14706:14715   */\n      dup2\n        /* \"--CODEGEN--\":14700:14704   */\n      dup2\n        /* \"--CODEGEN--\":14696:14716   */\n      sub\n        /* \"--CODEGEN--\":14692:14693   */\n      0x00\n        /* \"--CODEGEN--\":14681:14690   */\n      dup4\n        /* \"--CODEGEN--\":14677:14694   */\n      add\n        /* \"--CODEGEN--\":14670:14717   */\n      mstore\n        /* \"--CODEGEN--\":14731:14862   */\n      tag_355\n        /* \"--CODEGEN--\":14857:14861   */\n      dup2\n        /* \"--CODEGEN--\":14731:14862   */\n      jump(tag_305)\n    tag_355:\n        /* \"--CODEGEN--\":14723:14862   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":14627:14872   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":14879:15286   */\n    tag_175:\n      0x00\n        /* \"--CODEGEN--\":15070:15072   */\n      0x20\n        /* \"--CODEGEN--\":15059:15068   */\n      dup3\n        /* \"--CODEGEN--\":15055:15073   */\n      add\n        /* \"--CODEGEN--\":15047:15073   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":15120:15129   */\n      dup2\n        /* \"--CODEGEN--\":15114:15118   */\n      dup2\n        /* \"--CODEGEN--\":15110:15130   */\n      sub\n        /* \"--CODEGEN--\":15106:15107   */\n      0x00\n        /* \"--CODEGEN--\":15095:15104   */\n      dup4\n        /* \"--CODEGEN--\":15091:15108   */\n      add\n        /* \"--CODEGEN--\":15084:15131   */\n      mstore\n        /* \"--CODEGEN--\":15145:15276   */\n      tag_356\n        /* \"--CODEGEN--\":15271:15275   */\n      dup2\n        /* \"--CODEGEN--\":15145:15276   */\n      jump(tag_309)\n    tag_356:\n        /* \"--CODEGEN--\":15137:15276   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":15041:15286   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":15293:15700   */\n    tag_172:\n      0x00\n        /* \"--CODEGEN--\":15484:15486   */\n      0x20\n        /* \"--CODEGEN--\":15473:15482   */\n      dup3\n        /* \"--CODEGEN--\":15469:15487   */\n      add\n        /* \"--CODEGEN--\":15461:15487   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":15534:15543   */\n      dup2\n        /* \"--CODEGEN--\":15528:15532   */\n      dup2\n        /* \"--CODEGEN--\":15524:15544   */\n      sub\n        /* \"--CODEGEN--\":15520:15521   */\n      0x00\n        /* \"--CODEGEN--\":15509:15518   */\n      dup4\n        /* \"--CODEGEN--\":15505:15522   */\n      add\n        /* \"--CODEGEN--\":15498:15545   */\n      mstore\n        /* \"--CODEGEN--\":15559:15690   */\n      tag_357\n        /* \"--CODEGEN--\":15685:15689   */\n      dup2\n        /* \"--CODEGEN--\":15559:15690   */\n      jump(tag_311)\n    tag_357:\n        /* \"--CODEGEN--\":15551:15690   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":15455:15700   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":15707:15920   */\n    tag_38:\n      0x00\n        /* \"--CODEGEN--\":15825:15827   */\n      0x20\n        /* \"--CODEGEN--\":15814:15823   */\n      dup3\n        /* \"--CODEGEN--\":15810:15828   */\n      add\n        /* \"--CODEGEN--\":15802:15828   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":15839:15910   */\n      tag_358\n        /* \"--CODEGEN--\":15907:15908   */\n      0x00\n        /* \"--CODEGEN--\":15896:15905   */\n      dup4\n        /* \"--CODEGEN--\":15892:15909   */\n      add\n        /* \"--CODEGEN--\":15883:15889   */\n      dup5\n        /* \"--CODEGEN--\":15839:15910   */\n      jump(tag_315)\n    tag_358:\n        /* \"--CODEGEN--\":15796:15920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":15927:16136   */\n    tag_65:\n      0x00\n        /* \"--CODEGEN--\":16043:16045   */\n      0x20\n        /* \"--CODEGEN--\":16032:16041   */\n      dup3\n        /* \"--CODEGEN--\":16028:16046   */\n      add\n        /* \"--CODEGEN--\":16020:16046   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":16057:16126   */\n      tag_359\n        /* \"--CODEGEN--\":16123:16124   */\n      0x00\n        /* \"--CODEGEN--\":16112:16121   */\n      dup4\n        /* \"--CODEGEN--\":16108:16125   */\n      add\n        /* \"--CODEGEN--\":16099:16105   */\n      dup5\n        /* \"--CODEGEN--\":16057:16126   */\n      jump(tag_318)\n    tag_359:\n        /* \"--CODEGEN--\":16014:16136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":16143:16459   */\n    tag_107:\n      0x00\n        /* \"--CODEGEN--\":16285:16287   */\n      0x40\n        /* \"--CODEGEN--\":16274:16283   */\n      dup3\n        /* \"--CODEGEN--\":16270:16288   */\n      add\n        /* \"--CODEGEN--\":16262:16288   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":16299:16368   */\n      tag_360\n        /* \"--CODEGEN--\":16365:16366   */\n      0x00\n        /* \"--CODEGEN--\":16354:16363   */\n      dup4\n        /* \"--CODEGEN--\":16350:16367   */\n      add\n        /* \"--CODEGEN--\":16341:16347   */\n      dup6\n        /* \"--CODEGEN--\":16299:16368   */\n      jump(tag_318)\n    tag_360:\n        /* \"--CODEGEN--\":16379:16449   */\n      tag_361\n        /* \"--CODEGEN--\":16445:16447   */\n      0x20\n        /* \"--CODEGEN--\":16434:16443   */\n      dup4\n        /* \"--CODEGEN--\":16430:16448   */\n      add\n        /* \"--CODEGEN--\":16421:16427   */\n      dup5\n        /* \"--CODEGEN--\":16379:16449   */\n      jump(tag_327)\n    tag_361:\n        /* \"--CODEGEN--\":16256:16459   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":16466:16671   */\n    tag_51:\n      0x00\n        /* \"--CODEGEN--\":16580:16582   */\n      0x20\n        /* \"--CODEGEN--\":16569:16578   */\n      dup3\n        /* \"--CODEGEN--\":16565:16583   */\n      add\n        /* \"--CODEGEN--\":16557:16583   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":16594:16661   */\n      tag_362\n        /* \"--CODEGEN--\":16658:16659   */\n      0x00\n        /* \"--CODEGEN--\":16647:16656   */\n      dup4\n        /* \"--CODEGEN--\":16643:16660   */\n      add\n        /* \"--CODEGEN--\":16634:16640   */\n      dup5\n        /* \"--CODEGEN--\":16594:16661   */\n      jump(tag_321)\n    tag_362:\n        /* \"--CODEGEN--\":16551:16671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":16678:16889   */\n    tag_114:\n      0x00\n        /* \"--CODEGEN--\":16795:16797   */\n      0x20\n        /* \"--CODEGEN--\":16784:16793   */\n      dup3\n        /* \"--CODEGEN--\":16780:16798   */\n      add\n        /* \"--CODEGEN--\":16772:16798   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":16809:16879   */\n      tag_363\n        /* \"--CODEGEN--\":16876:16877   */\n      0x00\n        /* \"--CODEGEN--\":16865:16874   */\n      dup4\n        /* \"--CODEGEN--\":16861:16878   */\n      add\n        /* \"--CODEGEN--\":16852:16858   */\n      dup5\n        /* \"--CODEGEN--\":16809:16879   */\n      jump(tag_324)\n    tag_363:\n        /* \"--CODEGEN--\":16766:16889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":16896:17105   */\n    tag_74:\n      0x00\n        /* \"--CODEGEN--\":17012:17014   */\n      0x20\n        /* \"--CODEGEN--\":17001:17010   */\n      dup3\n        /* \"--CODEGEN--\":16997:17015   */\n      add\n        /* \"--CODEGEN--\":16989:17015   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":17026:17095   */\n      tag_364\n        /* \"--CODEGEN--\":17092:17093   */\n      0x00\n        /* \"--CODEGEN--\":17081:17090   */\n      dup4\n        /* \"--CODEGEN--\":17077:17094   */\n      add\n        /* \"--CODEGEN--\":17068:17074   */\n      dup5\n        /* \"--CODEGEN--\":17026:17095   */\n      jump(tag_327)\n    tag_364:\n        /* \"--CODEGEN--\":16983:17105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":17112:17432   */\n    tag_226:\n      0x00\n        /* \"--CODEGEN--\":17256:17258   */\n      0x40\n        /* \"--CODEGEN--\":17245:17254   */\n      dup3\n        /* \"--CODEGEN--\":17241:17259   */\n      add\n        /* \"--CODEGEN--\":17233:17259   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":17270:17340   */\n      tag_365\n        /* \"--CODEGEN--\":17337:17338   */\n      0x00\n        /* \"--CODEGEN--\":17326:17335   */\n      dup4\n        /* \"--CODEGEN--\":17322:17339   */\n      add\n        /* \"--CODEGEN--\":17313:17319   */\n      dup6\n        /* \"--CODEGEN--\":17270:17340   */\n      jump(tag_324)\n    tag_365:\n        /* \"--CODEGEN--\":17351:17422   */\n      tag_366\n        /* \"--CODEGEN--\":17418:17420   */\n      0x20\n        /* \"--CODEGEN--\":17407:17416   */\n      dup4\n        /* \"--CODEGEN--\":17403:17421   */\n      add\n        /* \"--CODEGEN--\":17394:17400   */\n      dup5\n        /* \"--CODEGEN--\":17351:17422   */\n      jump(tag_324)\n    tag_366:\n        /* \"--CODEGEN--\":17227:17432   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":17439:17557   */\n    tag_292:\n      0x00\n        /* \"--CODEGEN--\":17529:17534   */\n      dup2\n        /* \"--CODEGEN--\":17523:17535   */\n      mload\n        /* \"--CODEGEN--\":17513:17535   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":17494:17557   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":17564:17686   */\n    tag_283:\n      0x00\n        /* \"--CODEGEN--\":17658:17663   */\n      dup2\n        /* \"--CODEGEN--\":17652:17664   */\n      mload\n        /* \"--CODEGEN--\":17642:17664   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":17623:17686   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":17694:17857   */\n    tag_285:\n      0x00\n        /* \"--CODEGEN--\":17809:17815   */\n      dup3\n        /* \"--CODEGEN--\":17804:17807   */\n      dup3\n        /* \"--CODEGEN--\":17797:17816   */\n      mstore\n        /* \"--CODEGEN--\":17846:17850   */\n      0x20\n        /* \"--CODEGEN--\":17841:17844   */\n      dup3\n        /* \"--CODEGEN--\":17837:17851   */\n      add\n        /* \"--CODEGEN--\":17822:17851   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":17790:17857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":17866:18011   */\n    tag_304:\n      0x00\n        /* \"--CODEGEN--\":18002:18005   */\n      dup2\n        /* \"--CODEGEN--\":17987:18005   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":17980:18011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":18019:18110   */\n    tag_270:\n      0x00\n        /* \"--CODEGEN--\":18081:18105   */\n      tag_367\n        /* \"--CODEGEN--\":18099:18104   */\n      dup3\n        /* \"--CODEGEN--\":18081:18105   */\n      jump(tag_368)\n    tag_367:\n        /* \"--CODEGEN--\":18070:18105   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18064:18110   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":18117:18202   */\n    tag_273:\n      0x00\n        /* \"--CODEGEN--\":18190:18195   */\n      dup2\n        /* \"--CODEGEN--\":18183:18196   */\n      iszero\n        /* \"--CODEGEN--\":18176:18197   */\n      iszero\n        /* \"--CODEGEN--\":18165:18197   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18159:18202   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":18209:18281   */\n    tag_276:\n      0x00\n        /* \"--CODEGEN--\":18271:18276   */\n      dup2\n        /* \"--CODEGEN--\":18260:18276   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18254:18281   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":18288:18409   */\n    tag_368:\n      0x00\n        /* \"--CODEGEN--\":18361:18403   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":18354:18359   */\n      dup3\n        /* \"--CODEGEN--\":18350:18404   */\n      and\n        /* \"--CODEGEN--\":18339:18404   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18333:18409   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":18416:18488   */\n    tag_317:\n      0x00\n        /* \"--CODEGEN--\":18478:18483   */\n      dup2\n        /* \"--CODEGEN--\":18467:18483   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18461:18488   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":18495:18583   */\n    tag_320:\n      0x00\n        /* \"--CODEGEN--\":18567:18577   */\n      0xffffffff\n        /* \"--CODEGEN--\":18560:18565   */\n      dup3\n        /* \"--CODEGEN--\":18556:18578   */\n      and\n        /* \"--CODEGEN--\":18545:18578   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18539:18583   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":18590:18671   */\n    tag_323:\n      0x00\n        /* \"--CODEGEN--\":18661:18665   */\n      0xff\n        /* \"--CODEGEN--\":18654:18659   */\n      dup3\n        /* \"--CODEGEN--\":18650:18666   */\n      and\n        /* \"--CODEGEN--\":18639:18666   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18633:18671   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":18678:18782   */\n    tag_329:\n      0x00\n        /* \"--CODEGEN--\":18750:18776   */\n      0xffffffffffffffffffffffff\n        /* \"--CODEGEN--\":18743:18748   */\n      dup3\n        /* \"--CODEGEN--\":18739:18777   */\n      and\n        /* \"--CODEGEN--\":18728:18777   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18722:18782   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":18789:18895   */\n    tag_326:\n      0x00\n        /* \"--CODEGEN--\":18867:18890   */\n      tag_369\n        /* \"--CODEGEN--\":18884:18889   */\n      dup3\n        /* \"--CODEGEN--\":18867:18890   */\n      jump(tag_329)\n    tag_369:\n        /* \"--CODEGEN--\":18854:18890   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18848:18895   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":18903:19171   */\n    tag_287:\n        /* \"--CODEGEN--\":18968:18969   */\n      0x00\n        /* \"--CODEGEN--\":18975:19076   */\n    tag_370:\n        /* \"--CODEGEN--\":18989:18995   */\n      dup4\n        /* \"--CODEGEN--\":18986:18987   */\n      dup2\n        /* \"--CODEGEN--\":18983:18996   */\n      lt\n        /* \"--CODEGEN--\":18975:19076   */\n      iszero\n      tag_372\n      jumpi\n        /* \"--CODEGEN--\":19065:19066   */\n      dup1\n        /* \"--CODEGEN--\":19060:19063   */\n      dup3\n        /* \"--CODEGEN--\":19056:19067   */\n      add\n        /* \"--CODEGEN--\":19050:19068   */\n      mload\n        /* \"--CODEGEN--\":19046:19047   */\n      dup2\n        /* \"--CODEGEN--\":19041:19044   */\n      dup5\n        /* \"--CODEGEN--\":19037:19048   */\n      add\n        /* \"--CODEGEN--\":19030:19069   */\n      mstore\n        /* \"--CODEGEN--\":19011:19013   */\n      0x20\n        /* \"--CODEGEN--\":19008:19009   */\n      dup2\n        /* \"--CODEGEN--\":19004:19014   */\n      add\n        /* \"--CODEGEN--\":18999:19014   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18975:19076   */\n      jump(tag_370)\n    tag_372:\n        /* \"--CODEGEN--\":19091:19097   */\n      dup4\n        /* \"--CODEGEN--\":19088:19089   */\n      dup2\n        /* \"--CODEGEN--\":19085:19098   */\n      gt\n        /* \"--CODEGEN--\":19082:19084   */\n      iszero\n      tag_373\n      jumpi\n        /* \"--CODEGEN--\":19156:19157   */\n      0x00\n        /* \"--CODEGEN--\":19147:19153   */\n      dup5\n        /* \"--CODEGEN--\":19142:19145   */\n      dup5\n        /* \"--CODEGEN--\":19138:19154   */\n      add\n        /* \"--CODEGEN--\":19131:19158   */\n      mstore\n        /* \"--CODEGEN--\":19082:19084   */\n    tag_373:\n        /* \"--CODEGEN--\":18952:19171   */\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":19179:19253   */\n    tag_280:\n      0x00\n        /* \"--CODEGEN--\":19243:19248   */\n      dup2\n        /* \"--CODEGEN--\":19232:19248   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":19226:19253   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":19260:19357   */\n    tag_289:\n      0x00\n        /* \"--CODEGEN--\":19348:19350   */\n      0x1f\n        /* \"--CODEGEN--\":19344:19351   */\n      not\n        /* \"--CODEGEN--\":19339:19341   */\n      0x1f\n        /* \"--CODEGEN--\":19332:19337   */\n      dup4\n        /* \"--CODEGEN--\":19328:19342   */\n      add\n        /* \"--CODEGEN--\":19324:19352   */\n      and\n        /* \"--CODEGEN--\":19314:19352   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":19308:19357   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":19365:19482   */\n    tag_233:\n        /* \"--CODEGEN--\":19434:19458   */\n      tag_374\n        /* \"--CODEGEN--\":19452:19457   */\n      dup2\n        /* \"--CODEGEN--\":19434:19458   */\n      jump(tag_270)\n    tag_374:\n        /* \"--CODEGEN--\":19427:19432   */\n      dup2\n        /* \"--CODEGEN--\":19424:19459   */\n      eq\n        /* \"--CODEGEN--\":19414:19416   */\n      tag_375\n      jumpi\n        /* \"--CODEGEN--\":19473:19474   */\n      0x00\n        /* \"--CODEGEN--\":19470:19471   */\n      dup1\n        /* \"--CODEGEN--\":19463:19475   */\n      revert\n        /* \"--CODEGEN--\":19414:19416   */\n    tag_375:\n        /* \"--CODEGEN--\":19408:19482   */\n      pop\n      jump\n        /* \"--CODEGEN--\":19489:19606   */\n    tag_236:\n        /* \"--CODEGEN--\":19558:19582   */\n      tag_376\n        /* \"--CODEGEN--\":19576:19581   */\n      dup2\n        /* \"--CODEGEN--\":19558:19582   */\n      jump(tag_276)\n    tag_376:\n        /* \"--CODEGEN--\":19551:19556   */\n      dup2\n        /* \"--CODEGEN--\":19548:19583   */\n      eq\n        /* \"--CODEGEN--\":19538:19540   */\n      tag_377\n      jumpi\n        /* \"--CODEGEN--\":19597:19598   */\n      0x00\n        /* \"--CODEGEN--\":19594:19595   */\n      dup1\n        /* \"--CODEGEN--\":19587:19599   */\n      revert\n        /* \"--CODEGEN--\":19538:19540   */\n    tag_377:\n        /* \"--CODEGEN--\":19532:19606   */\n      pop\n      jump\n        /* \"--CODEGEN--\":19613:19730   */\n    tag_239:\n        /* \"--CODEGEN--\":19682:19706   */\n      tag_378\n        /* \"--CODEGEN--\":19700:19705   */\n      dup2\n        /* \"--CODEGEN--\":19682:19706   */\n      jump(tag_317)\n    tag_378:\n        /* \"--CODEGEN--\":19675:19680   */\n      dup2\n        /* \"--CODEGEN--\":19672:19707   */\n      eq\n        /* \"--CODEGEN--\":19662:19664   */\n      tag_379\n      jumpi\n        /* \"--CODEGEN--\":19721:19722   */\n      0x00\n        /* \"--CODEGEN--\":19718:19719   */\n      dup1\n        /* \"--CODEGEN--\":19711:19723   */\n      revert\n        /* \"--CODEGEN--\":19662:19664   */\n    tag_379:\n        /* \"--CODEGEN--\":19656:19730   */\n      pop\n      jump\n        /* \"--CODEGEN--\":19737:19852   */\n    tag_242:\n        /* \"--CODEGEN--\":19805:19828   */\n      tag_380\n        /* \"--CODEGEN--\":19822:19827   */\n      dup2\n        /* \"--CODEGEN--\":19805:19828   */\n      jump(tag_320)\n    tag_380:\n        /* \"--CODEGEN--\":19798:19803   */\n      dup2\n        /* \"--CODEGEN--\":19795:19829   */\n      eq\n        /* \"--CODEGEN--\":19785:19787   */\n      tag_381\n      jumpi\n        /* \"--CODEGEN--\":19843:19844   */\n      0x00\n        /* \"--CODEGEN--\":19840:19841   */\n      dup1\n        /* \"--CODEGEN--\":19833:19845   */\n      revert\n        /* \"--CODEGEN--\":19785:19787   */\n    tag_381:\n        /* \"--CODEGEN--\":19779:19852   */\n      pop\n      jump\n        /* \"--CODEGEN--\":19859:19972   */\n    tag_245:\n        /* \"--CODEGEN--\":19926:19948   */\n      tag_382\n        /* \"--CODEGEN--\":19942:19947   */\n      dup2\n        /* \"--CODEGEN--\":19926:19948   */\n      jump(tag_323)\n    tag_382:\n        /* \"--CODEGEN--\":19919:19924   */\n      dup2\n        /* \"--CODEGEN--\":19916:19949   */\n      eq\n        /* \"--CODEGEN--\":19906:19908   */\n      tag_383\n      jumpi\n        /* \"--CODEGEN--\":19963:19964   */\n      0x00\n        /* \"--CODEGEN--\":19960:19961   */\n      dup1\n        /* \"--CODEGEN--\":19953:19965   */\n      revert\n        /* \"--CODEGEN--\":19906:19908   */\n    tag_383:\n        /* \"--CODEGEN--\":19900:19972   */\n      pop\n      jump\n    stop\n    data_286b94815ef9c969765b740f7c02d7497dec20279d87a9d16db942ad7a7e336f 4e69753a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365\n    data_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302 4e69753a3a617070726f76653a20616d6f756e7420657863656564732039362062697473\n    data_3572f2e3a73d8992ffd14bbdc492a68ea3425b205fa2e411c1a12014bc6f8444 4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773\n    data_4bece53613ac1432b74b912202f09eb50cb0dcb5908cbbd578098234a3a7791c 4e69753a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_692ec8c90bc6d060b4b8461e07e5e6df665fc0757847ed6b4e3f21b09d8256ca 4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_aa0434f77a6c4f1d00fe7ba5b4b950cbb617a74b279e346f2c71f484bda86400 4e69753a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473\n    data_b162a08cdd346994d7a9c03eee20f68ee11c6da5ce67892863a5b8b47f9f80cf 4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773\n    data_ba9d0177eed180b5d6a2c76dfc689b87bfd0698268c3a8db9e79a797cb697239 4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773\n\n    auxdata: 0xa365627a7a72315820793d25fd9b1aa810558f7b3797f4e4f1f55667cc3c8f702c3875249b93814a696c6578706572696d656e74616cf564736f6c63430005110040\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002f7e38038062002f7e833981810160405262000037919081019062000141565b6a084595161401484a000000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6a084595161401484a0000006040516200011b91906200017e565b60405180910390a350620001f3565b6000815190506200013b81620001d9565b92915050565b6000602082840312156200015457600080fd5b600062000164848285016200012a565b91505092915050565b6200017881620001cf565b82525050565b60006020820190506200019560008301846200016d565b92915050565b6000620001a882620001af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001e4816200019b565b8114620001f057600080fd5b50565b612d7b80620002036000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b4b5ea5711610071578063b4b5ea5714610358578063c3cda52014610388578063dd62ed3e146103a4578063e7a324dc146103d4578063f1127ed8146103f257610121565b806370a082311461027a578063782d6fe1146102aa5780637ecebe00146102da57806395d89b411461030a578063a9059cbb1461032857610121565b806323b872dd116100f457806323b872dd146101b0578063313ce567146101e0578063587cde1e146101fe5780635c19a95c1461022e5780636fcfff451461024a57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806320606b7014610192575b600080fd5b61012e610423565b60405161013b9190612866565b60405180910390f35b61015e6004803603610159919081019061214d565b61045c565b60405161016b9190612761565b60405180910390f35b61017c6105ee565b604051610189919061296a565b60405180910390f35b61019a6105fd565b6040516101a7919061277c565b60405180910390f35b6101ca60048036036101c591908101906120fe565b610614565b6040516101d79190612761565b60405180910390f35b6101e86108a6565b6040516101f591906129c9565b60405180910390f35b61021860048036036102139190810190612099565b6108ab565b6040516102259190612746565b60405180910390f35b61024860048036036102439190810190612099565b6108de565b005b610264600480360361025f9190810190612099565b6108eb565b6040516102719190612985565b60405180910390f35b610294600480360361028f9190810190612099565b61090e565b6040516102a1919061296a565b60405180910390f35b6102c460048036036102bf919081019061214d565b61097d565b6040516102d191906129ff565b60405180910390f35b6102f460048036036102ef9190810190612099565b610d90565b604051610301919061296a565b60405180910390f35b610312610da8565b60405161031f9190612866565b60405180910390f35b610342600480360361033d919081019061214d565b610de1565b60405161034f9190612761565b60405180910390f35b610372600480360361036d9190810190612099565b610e1e565b60405161037f91906129ff565b60405180910390f35b6103a2600480360361039d9190810190612189565b610f0c565b005b6103be60048036036103b991908101906120c2565b6111af565b6040516103cb919061296a565b60405180910390f35b6103dc61125b565b6040516103e9919061277c565b60405180910390f35b61040c60048036036104079190810190612212565b611272565b60405161041a9291906129a0565b60405180910390f35b6040518060400160405280600681526020017f4e697572616c000000000000000000000000000000000000000000000000000081525081565b6000807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8314156104af577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90506104d4565b6104d183604051806060016040528060248152602001612c0c602491396112cb565b90505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516105db91906129e4565b60405180910390a3600191505092915050565b6a084595161401484a00000081565b6040516106099061271c565b604051809103902081565b60008033905060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff16905060006106d685604051806060016040528060248152602001612c0c602491396112cb565b90508673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561075057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff16826bffffffffffffffffffffffff1614155b1561088d57600061077a83836040518060600160405280603c8152602001612bd0603c9139611329565b9050806000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161088391906129e4565b60405180910390a3505b61089887878361139a565b600193505050509392505050565b601281565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108e8338261177b565b50565b60046020528060005260406000206000915054906101000a900463ffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050919050565b60004382106109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b8906128ea565b60405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff161415610a2e576000915050610d8a565b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611610b3057600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff16915050610d8a565b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161115610bb1576000915050610d8a565b600080905060006001830390505b8163ffffffff168163ffffffff161115610d0c576000600283830363ffffffff1681610be757fe5b0482039050610bf4612002565b600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681525050905086816000015163ffffffff161415610ce457806020015195505050505050610d8a565b86816000015163ffffffff161015610cfe57819350610d05565b6001820392505b5050610bbf565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff1693505050505b92915050565b60056020528060005260406000206000915090505481565b6040518060400160405280600381526020017f4e4955000000000000000000000000000000000000000000000000000000000081525081565b600080610e0683604051806060016040528060258152602001612cbf602591396112cb565b9050610e1333858361139a565b600191505092915050565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff1611610e88576000610f04565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff165b915050919050565b6000604051610f1a9061271c565b60405180910390206040518060400160405280600681526020017f4e697572616c000000000000000000000000000000000000000000000000000081525080519060200120610f6761193b565b30604051602001610f7b94939291906127dc565b6040516020818303038152906040528051906020012090506000604051610fa190612731565b6040518091039020888888604051602001610fbf9493929190612797565b60405160208183030381529060405280519060200120905060008282604051602001610fec9291906126e5565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516110299493929190612821565b6020604051602081039080840390855afa15801561104b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110be9061290a565b60405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558914611156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114d9061294a565b60405180910390fd5b87421115611199576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111909061292a565b60405180910390fd5b6111a3818b61177b565b50505050505050505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905092915050565b60405161126790612731565b604051809103902081565b6003602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060000160049054906101000a90046bffffffffffffffffffffffff16905082565b60006c010000000000000000000000008310829061131f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113169190612888565b60405180910390fd5b5082905092915050565b6000836bffffffffffffffffffffffff16836bffffffffffffffffffffffff161115829061138d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113849190612888565b60405180910390fd5b5082840390509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561140a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611401906128ca565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561147a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611471906128aa565b60405180910390fd5b6114f4600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff1682604051806060016040528060358152602001612c8a60359139611329565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506115db600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff16826040518060600160405280602f8152602001612ce4602f9139611948565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116a591906129e4565b60405180910390a3611776600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836119be565b505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff16905082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46119358284836119be565b50505050565b6000804690508091505090565b6000808385019050846bffffffffffffffffffffffff16816bffffffffffffffffffffffff16101583906119b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a99190612888565b60405180910390fd5b50809150509392505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a0857506000816bffffffffffffffffffffffff16115b15611cb457600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611b60576000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff1611611aab576000611b27565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff165b90506000611b4e8285604051806060016040528060278152602001612c3060279139611329565b9050611b5c86848484611cb9565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611cb3576000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff1611611bfe576000611c7a565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160049054906101000a90046bffffffffffffffffffffffff165b90506000611ca18285604051806060016040528060268152602001612d1360269139611948565b9050611caf85848484611cb9565b5050505b5b505050565b6000611cdd43604051806060016040528060338152602001612c5760339139611fac565b905060008463ffffffff16118015611d7257508063ffffffff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b15611e0d5781600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160046101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550611f55565b60405180604001604052808263ffffffff168152602001836bffffffffffffffffffffffff16815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060018401600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051611f9d929190612a1a565b60405180910390a25050505050565b600064010000000083108290611ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fef9190612888565b60405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160006bffffffffffffffffffffffff1681525090565b60008135905061203f81612b5c565b92915050565b60008135905061205481612b73565b92915050565b60008135905061206981612b8a565b92915050565b60008135905061207e81612ba1565b92915050565b60008135905061209381612bb8565b92915050565b6000602082840312156120ab57600080fd5b60006120b984828501612030565b91505092915050565b600080604083850312156120d557600080fd5b60006120e385828601612030565b92505060206120f485828601612030565b9150509250929050565b60008060006060848603121561211357600080fd5b600061212186828701612030565b935050602061213286828701612030565b92505060406121438682870161205a565b9150509250925092565b6000806040838503121561216057600080fd5b600061216e85828601612030565b925050602061217f8582860161205a565b9150509250929050565b60008060008060008060c087890312156121a257600080fd5b60006121b089828a01612030565b96505060206121c189828a0161205a565b95505060406121d289828a0161205a565b94505060606121e389828a01612084565b93505060806121f489828a01612045565b92505060a061220589828a01612045565b9150509295509295509295565b6000806040838503121561222557600080fd5b600061223385828601612030565b92505060206122448582860161206f565b9150509250929050565b61225781612a75565b82525050565b61226681612a87565b82525050565b61227581612a93565b82525050565b61228c61228782612a93565b612b41565b82525050565b600061229d82612a4e565b6122a78185612a59565b93506122b7818560208601612b0e565b6122c081612b4b565b840191505092915050565b60006122d682612a43565b6122e08185612a59565b93506122f0818560208601612b0e565b6122f981612b4b565b840191505092915050565b6000612311603983612a59565b91507f4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726160008301527f6e7366657220746f20746865207a65726f2061646472657373000000000000006020830152604082019050919050565b6000612377603b83612a59565b91507f4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726160008301527f6e736665722066726f6d20746865207a65726f206164647265737300000000006020830152604082019050919050565b60006123dd602683612a59565b91507f4e69753a3a6765745072696f72566f7465733a206e6f7420796574206465746560008301527f726d696e656400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612443600283612a6a565b91507f19010000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b6000612483602583612a59565b91507f4e69753a3a64656c656761746542795369673a20696e76616c6964207369676e60008301527f61747572650000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124e9604383612a6a565b91507f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353660008301527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208301527f63742900000000000000000000000000000000000000000000000000000000006040830152604382019050919050565b6000612575602583612a59565b91507f4e69753a3a64656c656761746542795369673a207369676e617475726520657860008301527f70697265640000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006125db602183612a59565b91507f4e69753a3a64656c656761746542795369673a20696e76616c6964206e6f6e6360008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612641603a83612a6a565b91507f44656c65676174696f6e28616464726573732064656c6567617465652c75696e60008301527f74323536206e6f6e63652c75696e7432353620657870697279290000000000006020830152603a82019050919050565b6126a381612abd565b82525050565b6126b281612ac7565b82525050565b6126c181612ad7565b82525050565b6126d081612afc565b82525050565b6126df81612ae4565b82525050565b60006126f082612436565b91506126fc828561227b565b60208201915061270c828461227b565b6020820191508190509392505050565b6000612727826124dc565b9150819050919050565b600061273c82612634565b9150819050919050565b600060208201905061275b600083018461224e565b92915050565b6000602082019050612776600083018461225d565b92915050565b6000602082019050612791600083018461226c565b92915050565b60006080820190506127ac600083018761226c565b6127b9602083018661224e565b6127c6604083018561269a565b6127d3606083018461269a565b95945050505050565b60006080820190506127f1600083018761226c565b6127fe602083018661226c565b61280b604083018561269a565b612818606083018461224e565b95945050505050565b6000608082019050612836600083018761226c565b61284360208301866126b8565b612850604083018561226c565b61285d606083018461226c565b95945050505050565b6000602082019050818103600083015261288081846122cb565b905092915050565b600060208201905081810360008301526128a28184612292565b905092915050565b600060208201905081810360008301526128c381612304565b9050919050565b600060208201905081810360008301526128e38161236a565b9050919050565b60006020820190508181036000830152612903816123d0565b9050919050565b6000602082019050818103600083015261292381612476565b9050919050565b6000602082019050818103600083015261294381612568565b9050919050565b60006020820190508181036000830152612963816125ce565b9050919050565b600060208201905061297f600083018461269a565b92915050565b600060208201905061299a60008301846126a9565b92915050565b60006040820190506129b560008301856126a9565b6129c260208301846126d6565b9392505050565b60006020820190506129de60008301846126b8565b92915050565b60006020820190506129f960008301846126c7565b92915050565b6000602082019050612a1460008301846126d6565b92915050565b6000604082019050612a2f60008301856126c7565b612a3c60208301846126c7565b9392505050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000612a8082612a9d565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b60006bffffffffffffffffffffffff82169050919050565b6000612b0782612ae4565b9050919050565b60005b83811015612b2c578082015181840152602081019050612b11565b83811115612b3b576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b612b6581612a75565b8114612b7057600080fd5b50565b612b7c81612a93565b8114612b8757600080fd5b50565b612b9381612abd565b8114612b9e57600080fd5b50565b612baa81612ac7565b8114612bb557600080fd5b50565b612bc181612ad7565b8114612bcc57600080fd5b5056fe4e69753a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e63654e69753a3a617070726f76653a20616d6f756e74206578636565647320393620626974734e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77734e69753a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974734e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e63654e69753a3a7472616e736665723a20616d6f756e74206578636565647320393620626974734e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f77734e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773a365627a7a72315820793d25fd9b1aa810558f7b3797f4e4f1f55667cc3c8f702c3875249b93814a696c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2F7E CODESIZE SUB DUP1 PUSH3 0x2F7E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH3 0x37 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH3 0x141 JUMP JUMPDEST PUSH11 0x84595161401484A000000 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH11 0x84595161401484A000000 PUSH1 0x40 MLOAD PUSH3 0x11B SWAP2 SWAP1 PUSH3 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x13B DUP2 PUSH3 0x1D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x164 DUP5 DUP3 DUP6 ADD PUSH3 0x12A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x178 DUP2 PUSH3 0x1CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x195 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x16D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A8 DUP3 PUSH3 0x1AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1E4 DUP2 PUSH3 0x19B JUMP JUMPDEST DUP2 EQ PUSH3 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D7B DUP1 PUSH3 0x203 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x3F2 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x328 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x24A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x159 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1C5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x29C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x213 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x243 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x25F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x28F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x2BF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x2EF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x33D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x36D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x39D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x3B9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x407 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP3 SWAP2 SWAP1 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E697572616C0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ ISZERO PUSH2 0x4AF JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x4D1 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C0C PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x609 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x6D6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C0C PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 PUSH2 0x77A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BD0 PUSH1 0x3C SWAP2 CODECOPY PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x898 DUP8 DUP8 DUP4 PUSH2 0x139A JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x8E8 CALLER DUP3 PUSH2 0x177B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x28EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD8A JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0xB30 JUMPI PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP PUSH2 0xD8A JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xBB1 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0xBE7 JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0xBF4 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xCE4 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0xD8A JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xCFE JUMPI DUP2 SWAP4 POP PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E49550000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE06 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CBF PUSH1 0x25 SWAP2 CODECOPY PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP PUSH2 0xE13 CALLER DUP6 DUP4 PUSH2 0x139A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0xE88 JUMPI PUSH1 0x0 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xF1A SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E697572616C0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xF67 PUSH2 0x193B JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xFA1 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFBF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFEC SWAP3 SWAP2 SWAP1 PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1029 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2821 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x104B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BE SWAP1 PUSH2 0x290A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x1156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114D SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1199 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1190 SWAP1 PUSH2 0x292A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11A3 DUP2 DUP12 PUSH2 0x177B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1267 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH13 0x1000000000000000000000000 DUP4 LT DUP3 SWAP1 PUSH2 0x131F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1316 SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO DUP3 SWAP1 PUSH2 0x138D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x140A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1401 SWAP1 PUSH2 0x28CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1471 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F4 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8A PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x15DB PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CE4 PUSH1 0x2F SWAP2 CODECOPY PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16A5 SWAP2 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1776 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x19BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1935 DUP3 DUP5 DUP4 PUSH2 0x19BE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP6 ADD SWAP1 POP DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP4 SWAP1 PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A08 JUMPI POP PUSH1 0x0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x1CB4 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B60 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1AAB JUMPI PUSH1 0x0 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B4E DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C30 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B5C DUP7 DUP5 DUP5 DUP5 PUSH2 0x1CB9 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB3 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1BFE JUMPI PUSH1 0x0 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CA1 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D13 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x1948 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CAF DUP6 DUP5 DUP5 DUP5 PUSH2 0x1CB9 JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDD NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C57 PUSH1 0x33 SWAP2 CODECOPY PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1D72 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1E0D JUMPI DUP2 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F9D SWAP3 SWAP2 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x1FF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEF SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x203F DUP2 PUSH2 0x2B5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2054 DUP2 PUSH2 0x2B73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2069 DUP2 PUSH2 0x2B8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x207E DUP2 PUSH2 0x2BA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2093 DUP2 PUSH2 0x2BB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP5 DUP3 DUP6 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20E3 DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20F4 DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2121 DUP7 DUP3 DUP8 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2132 DUP7 DUP3 DUP8 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2143 DUP7 DUP3 DUP8 ADD PUSH2 0x205A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x216E DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x217F DUP6 DUP3 DUP7 ADD PUSH2 0x205A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x21A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21B0 DUP10 DUP3 DUP11 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x21C1 DUP10 DUP3 DUP11 ADD PUSH2 0x205A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x21D2 DUP10 DUP3 DUP11 ADD PUSH2 0x205A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x21E3 DUP10 DUP3 DUP11 ADD PUSH2 0x2084 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x21F4 DUP10 DUP3 DUP11 ADD PUSH2 0x2045 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2205 DUP10 DUP3 DUP11 ADD PUSH2 0x2045 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2233 DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2244 DUP6 DUP3 DUP7 ADD PUSH2 0x206F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2257 DUP2 PUSH2 0x2A75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2266 DUP2 PUSH2 0x2A87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2275 DUP2 PUSH2 0x2A93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x228C PUSH2 0x2287 DUP3 PUSH2 0x2A93 JUMP JUMPDEST PUSH2 0x2B41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229D DUP3 PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x22A7 DUP2 DUP6 PUSH2 0x2A59 JUMP JUMPDEST SWAP4 POP PUSH2 0x22B7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B0E JUMP JUMPDEST PUSH2 0x22C0 DUP2 PUSH2 0x2B4B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D6 DUP3 PUSH2 0x2A43 JUMP JUMPDEST PUSH2 0x22E0 DUP2 DUP6 PUSH2 0x2A59 JUMP JUMPDEST SWAP4 POP PUSH2 0x22F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B0E JUMP JUMPDEST PUSH2 0x22F9 DUP2 PUSH2 0x2B4B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2311 PUSH1 0x39 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6E7366657220746F20746865207A65726F206164647265737300000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2377 PUSH1 0x3B DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6E736665722066726F6D20746865207A65726F20616464726573730000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DD PUSH1 0x26 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A6765745072696F72566F7465733A206E6F74207965742064657465 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x726D696E65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2443 PUSH1 0x2 DUP4 PUSH2 0x2A6A JUMP JUMPDEST SWAP2 POP PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2483 PUSH1 0x25 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A64656C656761746542795369673A20696E76616C6964207369676E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6174757265000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E9 PUSH1 0x43 DUP4 PUSH2 0x2A6A JUMP JUMPDEST SWAP2 POP PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C75696E74323536 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20636861696E49642C6164647265737320766572696679696E67436F6E747261 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6374290000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2575 PUSH1 0x25 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A64656C656761746542795369673A207369676E6174757265206578 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7069726564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DB PUSH1 0x21 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A64656C656761746542795369673A20696E76616C6964206E6F6E63 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2641 PUSH1 0x3A DUP4 PUSH2 0x2A6A JUMP JUMPDEST SWAP2 POP PUSH32 0x44656C65676174696F6E28616464726573732064656C6567617465652C75696E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x74323536206E6F6E63652C75696E743235362065787069727929000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x3A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A3 DUP2 PUSH2 0x2ABD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26B2 DUP2 PUSH2 0x2AC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26C1 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26D0 DUP2 PUSH2 0x2AFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26DF DUP2 PUSH2 0x2AE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F0 DUP3 PUSH2 0x2436 JUMP JUMPDEST SWAP2 POP PUSH2 0x26FC DUP3 DUP6 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x270C DUP3 DUP5 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2727 DUP3 PUSH2 0x24DC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273C DUP3 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x275B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x224E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x225D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2791 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x226C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x27AC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x27B9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x224E JUMP JUMPDEST PUSH2 0x27C6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x27D3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x269A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x27F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x27FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x280B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x2818 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x224E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2836 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2843 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x26B8 JUMP JUMPDEST PUSH2 0x2850 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x285D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x226C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2880 DUP2 DUP5 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A2 DUP2 DUP5 PUSH2 0x2292 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28C3 DUP2 PUSH2 0x2304 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E3 DUP2 PUSH2 0x236A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2903 DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2923 DUP2 PUSH2 0x2476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2943 DUP2 PUSH2 0x2568 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2963 DUP2 PUSH2 0x25CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x297F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x269A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x299A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29B5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26A9 JUMP JUMPDEST PUSH2 0x29C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A2F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26C7 JUMP JUMPDEST PUSH2 0x2A3C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26C7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A80 DUP3 PUSH2 0x2A9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B07 DUP3 PUSH2 0x2AE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B2C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B11 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2B3B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B65 DUP2 PUSH2 0x2A75 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B7C DUP2 PUSH2 0x2A93 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B93 DUP2 PUSH2 0x2ABD JUMP JUMPDEST DUP2 EQ PUSH2 0x2B9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BAA DUP2 PUSH2 0x2AC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BC1 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4E PUSH10 0x753A3A7472616E736665 PUSH19 0x46726F6D3A207472616E7366657220616D6F75 PUSH15 0x742065786365656473207370656E64 PUSH6 0x7220616C6C6F PUSH24 0x616E63654E69753A3A617070726F76653A20616D6F756E74 KECCAK256 PUSH6 0x786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F6D6F7665566F PUSH21 0x65733A20766F746520616D6F756E7420756E646572 PUSH7 0x6C6F77734E6975 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F7472616E7366 PUSH6 0x72546F6B656E PUSH20 0x3A207472616E7366657220616D6F756E74206578 PUSH4 0x65656473 KECCAK256 PUSH3 0x616C61 PUSH15 0x63654E69753A3A7472616E73666572 GASPRICE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320393620626974734E69753A GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F77734E69753A GASPRICE 0x5F PUSH14 0x6F7665566F7465733A20766F7465 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206F766572666C6F7773A365627A7A7231582079 RETURNDATASIZE 0x25 REVERT SWAP12 BYTE 0xA8 LT SSTORE DUP16 PUSH28 0x3797F4E4F1F55667CC3C8F702C3875249B93814A696C657870657269 PUSH14 0x656E74616CF564736F6C63430005 GT STOP BLOCKHASH ",
							"sourceMap": "60:12514:0:-;;;2538:149;8:9:-1;5:2;;;30:1;27;20:12;5:2;2538:149:0;;;;;;;;;;;;;;;;;;;;;;;;452:11;2584:8;:17;2593:7;2584:17;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;2659:7;2638:42;;2655:1;2638:42;;;452:11;2638:42;;;;;;;;;;;;;;;2538:149;60:12514;;5:134:-1;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;416:113;499:24;517:5;499:24;;;494:3;487:37;481:48;;;536:213;;654:2;643:9;639:18;631:26;;668:71;736:1;725:9;721:17;712:6;668:71;;;625:124;;;;;756:91;;818:24;836:5;818:24;;;807:35;;801:46;;;;854:121;;927:42;920:5;916:54;905:65;;899:76;;;;982:72;;1044:5;1033:16;;1027:27;;;;1061:117;1130:24;1148:5;1130:24;;;1123:5;1120:35;1110:2;;1169:1;1166;1159:12;1110:2;1104:74;;60:12514:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x3F2 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x328 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x24A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x159 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1C5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x29C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x213 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x243 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x25F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x28F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x2BF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x2EF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x33D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x36D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x39D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x3B9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x407 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP3 SWAP2 SWAP1 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E697572616C0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ ISZERO PUSH2 0x4AF JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x4D1 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C0C PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x609 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x6D6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C0C PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 PUSH2 0x77A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BD0 PUSH1 0x3C SWAP2 CODECOPY PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x898 DUP8 DUP8 DUP4 PUSH2 0x139A JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x8E8 CALLER DUP3 PUSH2 0x177B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x28EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD8A JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0xB30 JUMPI PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP PUSH2 0xD8A JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xBB1 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xD0C JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0xBE7 JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0xBF4 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xCE4 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0xD8A JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xCFE JUMPI DUP2 SWAP4 POP PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E49550000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE06 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CBF PUSH1 0x25 SWAP2 CODECOPY PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP PUSH2 0xE13 CALLER DUP6 DUP4 PUSH2 0x139A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0xE88 JUMPI PUSH1 0x0 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xF1A SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E697572616C0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xF67 PUSH2 0x193B JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xFA1 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFBF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFEC SWAP3 SWAP2 SWAP1 PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1029 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2821 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x104B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BE SWAP1 PUSH2 0x290A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x1156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114D SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1199 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1190 SWAP1 PUSH2 0x292A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11A3 DUP2 DUP12 PUSH2 0x177B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1267 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH13 0x1000000000000000000000000 DUP4 LT DUP3 SWAP1 PUSH2 0x131F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1316 SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO DUP3 SWAP1 PUSH2 0x138D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x140A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1401 SWAP1 PUSH2 0x28CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1471 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F4 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8A PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x15DB PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CE4 PUSH1 0x2F SWAP2 CODECOPY PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16A5 SWAP2 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1776 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x19BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1935 DUP3 DUP5 DUP4 PUSH2 0x19BE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP6 ADD SWAP1 POP DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP4 SWAP1 PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A08 JUMPI POP PUSH1 0x0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x1CB4 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B60 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1AAB JUMPI PUSH1 0x0 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B4E DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C30 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B5C DUP7 DUP5 DUP5 DUP5 PUSH2 0x1CB9 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB3 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1BFE JUMPI PUSH1 0x0 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CA1 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D13 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x1948 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CAF DUP6 DUP5 DUP5 DUP5 PUSH2 0x1CB9 JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDD NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C57 PUSH1 0x33 SWAP2 CODECOPY PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1D72 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1E0D JUMPI DUP2 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F9D SWAP3 SWAP2 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x1FF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEF SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x203F DUP2 PUSH2 0x2B5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2054 DUP2 PUSH2 0x2B73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2069 DUP2 PUSH2 0x2B8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x207E DUP2 PUSH2 0x2BA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2093 DUP2 PUSH2 0x2BB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP5 DUP3 DUP6 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20E3 DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20F4 DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2121 DUP7 DUP3 DUP8 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2132 DUP7 DUP3 DUP8 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2143 DUP7 DUP3 DUP8 ADD PUSH2 0x205A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x216E DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x217F DUP6 DUP3 DUP7 ADD PUSH2 0x205A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x21A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21B0 DUP10 DUP3 DUP11 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x21C1 DUP10 DUP3 DUP11 ADD PUSH2 0x205A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x21D2 DUP10 DUP3 DUP11 ADD PUSH2 0x205A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x21E3 DUP10 DUP3 DUP11 ADD PUSH2 0x2084 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x21F4 DUP10 DUP3 DUP11 ADD PUSH2 0x2045 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2205 DUP10 DUP3 DUP11 ADD PUSH2 0x2045 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2233 DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2244 DUP6 DUP3 DUP7 ADD PUSH2 0x206F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2257 DUP2 PUSH2 0x2A75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2266 DUP2 PUSH2 0x2A87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2275 DUP2 PUSH2 0x2A93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x228C PUSH2 0x2287 DUP3 PUSH2 0x2A93 JUMP JUMPDEST PUSH2 0x2B41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229D DUP3 PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x22A7 DUP2 DUP6 PUSH2 0x2A59 JUMP JUMPDEST SWAP4 POP PUSH2 0x22B7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B0E JUMP JUMPDEST PUSH2 0x22C0 DUP2 PUSH2 0x2B4B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D6 DUP3 PUSH2 0x2A43 JUMP JUMPDEST PUSH2 0x22E0 DUP2 DUP6 PUSH2 0x2A59 JUMP JUMPDEST SWAP4 POP PUSH2 0x22F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B0E JUMP JUMPDEST PUSH2 0x22F9 DUP2 PUSH2 0x2B4B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2311 PUSH1 0x39 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6E7366657220746F20746865207A65726F206164647265737300000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2377 PUSH1 0x3B DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6E736665722066726F6D20746865207A65726F20616464726573730000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DD PUSH1 0x26 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A6765745072696F72566F7465733A206E6F74207965742064657465 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x726D696E65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2443 PUSH1 0x2 DUP4 PUSH2 0x2A6A JUMP JUMPDEST SWAP2 POP PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2483 PUSH1 0x25 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A64656C656761746542795369673A20696E76616C6964207369676E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6174757265000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E9 PUSH1 0x43 DUP4 PUSH2 0x2A6A JUMP JUMPDEST SWAP2 POP PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C75696E74323536 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20636861696E49642C6164647265737320766572696679696E67436F6E747261 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6374290000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2575 PUSH1 0x25 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A64656C656761746542795369673A207369676E6174757265206578 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7069726564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DB PUSH1 0x21 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E69753A3A64656C656761746542795369673A20696E76616C6964206E6F6E63 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2641 PUSH1 0x3A DUP4 PUSH2 0x2A6A JUMP JUMPDEST SWAP2 POP PUSH32 0x44656C65676174696F6E28616464726573732064656C6567617465652C75696E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x74323536206E6F6E63652C75696E743235362065787069727929000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x3A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A3 DUP2 PUSH2 0x2ABD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26B2 DUP2 PUSH2 0x2AC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26C1 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26D0 DUP2 PUSH2 0x2AFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26DF DUP2 PUSH2 0x2AE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F0 DUP3 PUSH2 0x2436 JUMP JUMPDEST SWAP2 POP PUSH2 0x26FC DUP3 DUP6 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x270C DUP3 DUP5 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2727 DUP3 PUSH2 0x24DC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273C DUP3 PUSH2 0x2634 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x275B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x224E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x225D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2791 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x226C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x27AC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x27B9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x224E JUMP JUMPDEST PUSH2 0x27C6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x27D3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x269A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x27F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x27FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x280B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x2818 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x224E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2836 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2843 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x26B8 JUMP JUMPDEST PUSH2 0x2850 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x285D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x226C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2880 DUP2 DUP5 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A2 DUP2 DUP5 PUSH2 0x2292 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28C3 DUP2 PUSH2 0x2304 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E3 DUP2 PUSH2 0x236A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2903 DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2923 DUP2 PUSH2 0x2476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2943 DUP2 PUSH2 0x2568 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2963 DUP2 PUSH2 0x25CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x297F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x269A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x299A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29B5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26A9 JUMP JUMPDEST PUSH2 0x29C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A2F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26C7 JUMP JUMPDEST PUSH2 0x2A3C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26C7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A80 DUP3 PUSH2 0x2A9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B07 DUP3 PUSH2 0x2AE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B2C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B11 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2B3B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B65 DUP2 PUSH2 0x2A75 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B7C DUP2 PUSH2 0x2A93 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B93 DUP2 PUSH2 0x2ABD JUMP JUMPDEST DUP2 EQ PUSH2 0x2B9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BAA DUP2 PUSH2 0x2AC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BC1 DUP2 PUSH2 0x2AD7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4E PUSH10 0x753A3A7472616E736665 PUSH19 0x46726F6D3A207472616E7366657220616D6F75 PUSH15 0x742065786365656473207370656E64 PUSH6 0x7220616C6C6F PUSH24 0x616E63654E69753A3A617070726F76653A20616D6F756E74 KECCAK256 PUSH6 0x786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F6D6F7665566F PUSH21 0x65733A20766F746520616D6F756E7420756E646572 PUSH7 0x6C6F77734E6975 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 0x4E PUSH10 0x753A3A5F7472616E7366 PUSH6 0x72546F6B656E PUSH20 0x3A207472616E7366657220616D6F756E74206578 PUSH4 0x65656473 KECCAK256 PUSH3 0x616C61 PUSH15 0x63654E69753A3A7472616E73666572 GASPRICE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320393620626974734E69753A GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F77734E69753A GASPRICE 0x5F PUSH14 0x6F7665566F7465733A20766F7465 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206F766572666C6F7773A365627A7A7231582079 RETURNDATASIZE 0x25 REVERT SWAP12 BYTE 0xA8 LT SSTORE DUP16 PUSH28 0x3797F4E4F1F55667CC3C8F702C3875249B93814A696C657870657269 PUSH14 0x656E74616CF564736F6C63430005 GT STOP BLOCKHASH ",
							"sourceMap": "60:12514:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:12514:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;128:38;;;:::i;:::-;;;;;;;;;;;;;;;;3585:406;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;417:46;;;:::i;:::-;;;;;;;;;;;;;;;;1322:122;;;:::i;:::-;;;;;;;;;;;;;;;;5083:656;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;321:35;;;:::i;:::-;;;;;;;;;;;;;;;;787:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5881:100;;;;;;;;;;;;;;;;:::i;:::-;;1203:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4187:106;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8016:1185;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1730:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;224:37;;;:::i;:::-;;;;;;;;;;;;;;;;4549:233;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7375:219;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6404:777;;;;;;;;;;;;;;;;:::i;:::-;;2983:134;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1535:117;;;:::i;:::-;;;;;;;;;;;;;;;;1067:70;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;128:38;;;;;;;;;;;;;;;;;;;:::o;3585:406::-;3653:4;3669:13;3714:2;3696:9;:21;3692:168;;;3749:2;3733:19;;3692:168;;;3792:57;3799:9;3792:57;;;;;;;;;;;;;;;;;:6;:57::i;:::-;3783:66;;3692:168;3904:6;3870:10;:22;3881:10;3870:22;;;;;;;;;;;;;;;:31;3893:7;3870:31;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3947:7;3926:37;;3935:10;3926:37;;;3956:6;3926:37;;;;;;;;;;;;;;;3980:4;3973:11;;;3585:406;;;;:::o;417:46::-;452:11;417:46;:::o;1322:122::-;1364:80;;;;;;;;;;;;;;1322:122;:::o;5083:656::-;5165:4;5181:15;5199:10;5181:28;;5219:23;5245:10;:15;5256:3;5245:15;;;;;;;;;;;;;;;:24;5261:7;5245:24;;;;;;;;;;;;;;;;;;;;;;;;;5219:50;;5279:13;5295:57;5302:9;5295:57;;;;;;;;;;;;;;;;;:6;:57::i;:::-;5279:73;;5378:3;5367:14;;:7;:14;;;;:48;;;;;5412:2;5385:30;;:16;:30;;;;5367:48;5363:305;;;5431:19;5453:95;5459:16;5477:6;5453:95;;;;;;;;;;;;;;;;;:5;:95::i;:::-;5431:117;;5589:12;5562:10;:15;5573:3;5562:15;;;;;;;;;;;;;;;:24;5578:7;5562:24;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;5635:7;5621:36;;5630:3;5621:36;;;5644:12;5621:36;;;;;;;;;;;;;;;5363:305;;5678:33;5694:3;5699;5704:6;5678:15;:33::i;:::-;5728:4;5721:11;;;;;5083:656;;;;;:::o;321:35::-;354:2;321:35;:::o;787:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;5881:100::-;5942:32;5952:10;5964:9;5942;:32::i;:::-;5881:100;:::o;1203:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;4187:106::-;4246:4;4269:8;:17;4278:7;4269:17;;;;;;;;;;;;;;;;;;;;;;;;;4262:24;;;;4187:106;;;:::o;8016:1185::-;8095:6;8135:12;8121:11;:26;8113:77;;;;;;;;;;;;;;;;;;;;;;8201:19;8223:14;:23;8238:7;8223:23;;;;;;;;;;;;;;;;;;;;;;;;;8201:45;;8276:1;8260:12;:17;;;8256:56;;;8300:1;8293:8;;;;;8256:56;8421:11;8369;:20;8381:7;8369:20;;;;;;;;;;;;;;;:38;8405:1;8390:12;:16;8369:38;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:63;;;8365:145;;8455:11;:20;8467:7;8455:20;;;;;;;;;;;;;;;:38;8491:1;8476:12;:16;8455:38;;;;;;;;;;;;;;;:44;;;;;;;;;;;;8448:51;;;;;8365:145;8604:11;8568;:20;8580:7;8568:20;;;;;;;;;;;;;;;:23;8589:1;8568:23;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;8564:86;;;8638:1;8631:8;;;;;8564:86;8660:12;8675:1;8660:16;;8686:12;8716:1;8701:12;:16;8686:31;;8727:418;8742:5;8734:13;;:5;:13;;;8727:418;;;8763:13;8805:1;8796:5;8788;:13;8787:19;;;;;;;;8779:5;:27;8763:43;;8847:20;;:::i;:::-;8870:11;:20;8882:7;8870:20;;;;;;;;;;;;;;;:28;8891:6;8870:28;;;;;;;;;;;;;;;8847:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8932:11;8916:2;:12;;;:27;;;8912:223;;;8970:2;:8;;;8963:15;;;;;;;;;8912:223;9018:11;9003:2;:12;;;:26;;;8999:136;;;9057:6;9049:14;;8999:136;;;9119:1;9110:6;:10;9102:18;;8999:136;8727:418;;;;;9161:11;:20;9173:7;9161:20;;;;;;;;;;;;;;;:27;9182:5;9161:27;;;;;;;;;;;;;;;:33;;;;;;;;;;;;9154:40;;;;;8016:1185;;;;;:::o;1730:39::-;;;;;;;;;;;;;;;;;:::o;224:37::-;;;;;;;;;;;;;;;;;;;:::o;4549:233::-;4614:4;4630:13;4646:58;4653:9;4646:58;;;;;;;;;;;;;;;;;:6;:58::i;:::-;4630:74;;4714:40;4730:10;4742:3;4747:6;4714:15;:40::i;:::-;4771:4;4764:11;;;4549:233;;;;:::o;7375:219::-;7440:6;7458:19;7480:14;:23;7495:7;7480:23;;;;;;;;;;;;;;;;;;;;;;;;;7458:45;;7535:1;7520:12;:16;;;:67;;7586:1;7520:67;;;7539:11;:20;7551:7;7539:20;;;;;;;;;;;;;;;:38;7575:1;7560:12;:16;7539:38;;;;;;;;;;;;;;;:44;;;;;;;;;;;;7520:67;7513:74;;;7375:219;;;:::o;6404:777::-;6519:23;1364:80;;;;;;;;;;;;;;6599:4;;;;;;;;;;;;;;;;;6583:22;;;;;;6607:12;:10;:12::i;:::-;6629:4;6555:80;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6555:80:0;;;6545:91;;;;;;6519:117;;6646:18;1581:71;;;;;;;;;;;;;;6709:9;6720:5;6727:6;6677:57;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6677:57:0;;;6667:68;;;;;;6646:89;;6745:14;6801:15;6818:10;6772:57;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6772:57:0;;;6762:68;;;;;;6745:85;;6840:17;6860:26;6870:6;6878:1;6881;6884;6860:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6860:26:0;;;;;;;;6840:46;;6925:1;6904:23;;:9;:23;;;;6896:73;;;;;;;;;;;;;;;;;;;;;;6996:6;:17;7003:9;6996:17;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;6987:5;:28;6979:74;;;;;;;;;;;;;;;;;;;;;;7078:6;7071:3;:13;;7063:63;;;;;;;;;;;;;;;;;;;;;;7143:31;7153:9;7164;7143;:31::i;:::-;7136:38;;;;6404:777;;;;;;:::o;2983:134::-;3059:4;3082:10;:19;3093:7;3082:19;;;;;;;;;;;;;;;:28;3102:7;3082:28;;;;;;;;;;;;;;;;;;;;;;;;;3075:35;;;;2983:134;;;;:::o;1535:117::-;1581:71;;;;;;;;;;;;;;1535:117;:::o;1067:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11901:158::-;11976:6;12006:5;12002:1;:9;12013:12;11994:32;;;;;;;;;;;;;;;;;;;;;;;;;12050:1;12036:16;;11901:158;;;;:::o;12255:162::-;12341:6;12372:1;12367:6;;:1;:6;;;;12375:12;12359:29;;;;;;;;;;;;;;;;;;;;;;;;;12409:1;12405;:5;12398:12;;12255:162;;;;;:::o;9580:601::-;9688:1;9673:17;;:3;:17;;;;9665:89;;;;;;;;;;;;;;;;;;;;;;9787:1;9772:17;;:3;:17;;;;9764:87;;;;;;;;;;;;;;;;;;;;;;9878:85;9884:8;:13;9893:3;9884:13;;;;;;;;;;;;;;;;;;;;;;;;;9899:6;9878:85;;;;;;;;;;;;;;;;;:5;:85::i;:::-;9862:8;:13;9871:3;9862:13;;;;;;;;;;;;;;;;:101;;;;;;;;;;;;;;;;;;9989:79;9995:8;:13;10004:3;9995:13;;;;;;;;;;;;;;;;;;;;;;;;;10010:6;9989:79;;;;;;;;;;;;;;;;;:5;:79::i;:::-;9973:8;:13;9982:3;9973:13;;;;;;;;;;;;;;;;:95;;;;;;;;;;;;;;;;;;10097:3;10083:26;;10092:3;10083:26;;;10102:6;10083:26;;;;;;;;;;;;;;;10120:54;10135:9;:14;10145:3;10135:14;;;;;;;;;;;;;;;;;;;;;;;;;10151:9;:14;10161:3;10151:14;;;;;;;;;;;;;;;;;;;;;;;;;10167:6;10120:14;:54::i;:::-;9580:601;;;:::o;9207:367::-;9283:23;9309:9;:20;9319:9;9309:20;;;;;;;;;;;;;;;;;;;;;;;;;9283:46;;9339:23;9365:8;:19;9374:9;9365:19;;;;;;;;;;;;;;;;;;;;;;;;;9339:45;;9417:9;9394;:20;9404:9;9394:20;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;9486:9;9442:54;;9469:15;9442:54;;9458:9;9442:54;;;;;;;;;;;;9507:60;9522:15;9539:9;9550:16;9507:14;:60::i;:::-;9207:367;;;;:::o;12423:149::-;12468:4;12484:15;12531:9;12520:20;;12558:7;12551:14;;;12423:149;:::o;12065:184::-;12151:6;12169:8;12184:1;12180;:5;12169:16;;12208:1;12203:6;;:1;:6;;;;12211:12;12195:29;;;;;;;;;;;;;;;;;;;;;;;;;12241:1;12234:8;;;12065:184;;;;;:::o;10187:921::-;10291:6;10281:16;;:6;:16;;;;:30;;;;;10310:1;10301:6;:10;;;10281:30;10277:825;;;10349:1;10331:20;;:6;:20;;;10327:376;;10371:16;10390:14;:22;10405:6;10390:22;;;;;;;;;;;;;;;;;;;;;;;;;10371:41;;10430:16;10461:1;10449:9;:13;;;:60;;10508:1;10449:60;;;10465:11;:19;10477:6;10465:19;;;;;;;;;;;;;;;:34;10497:1;10485:9;:13;10465:34;;;;;;;;;;;;;;;:40;;;;;;;;;;;;10449:60;10430:79;;10527:16;10546:67;10552:9;10563:6;10546:67;;;;;;;;;;;;;;;;;:5;:67::i;:::-;10527:86;;10631:57;10648:6;10656:9;10667;10678;10631:16;:57::i;:::-;10327:376;;;;10739:1;10721:20;;:6;:20;;;10717:375;;10761:16;10780:14;:22;10795:6;10780:22;;;;;;;;;;;;;;;;;;;;;;;;;10761:41;;10820:16;10851:1;10839:9;:13;;;:60;;10898:1;10839:60;;;10855:11;:19;10867:6;10855:19;;;;;;;;;;;;;;;:34;10887:1;10875:9;:13;10855:34;;;;;;;;;;;;;;;:40;;;;;;;;;;;;10839:60;10820:79;;10917:16;10936:66;10942:9;10953:6;10936:66;;;;;;;;;;;;;;;;;:5;:66::i;:::-;10917:85;;11020:57;11037:6;11045:9;11056;11067;11020:16;:57::i;:::-;10717:375;;;;10277:825;10187:921;;;:::o;11114:617::-;11231:18;11252:75;11259:12;11252:75;;;;;;;;;;;;;;;;;:6;:75::i;:::-;11231:96;;11355:1;11340:12;:16;;;:85;;;;;11414:11;11360:65;;:11;:22;11372:9;11360:22;;;;;;;;;;;;;;;:40;11398:1;11383:12;:16;11360:40;;;;;;;;;;;;;;;:50;;;;;;;;;;;;:65;;;11340:85;11336:324;;;11488:8;11439:11;:22;11451:9;11439:22;;;;;;;;;;;;;;;:40;11477:1;11462:12;:16;11439:40;;;;;;;;;;;;;;;:46;;;:57;;;;;;;;;;;;;;;;;;11336:324;;;11562:33;;;;;;;;11573:11;11562:33;;;;;;11586:8;11562:33;;;;;11523:11;:22;11535:9;11523:22;;;;;;;;;;;;;;;:36;11546:12;11523:36;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11650:1;11635:12;:16;11607:14;:25;11622:9;11607:25;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;11336:324;11694:9;11673:51;;;11705:8;11715;11673:51;;;;;;;;;;;;;;;;11114:617;;;;;:::o;11737:158::-;11812:6;11842:5;11838:1;:9;11849:12;11830:32;;;;;;;;;;;;;;;;;;;;;;;;;11886:1;11872:16;;11737:158;;;;:::o;60:12514::-;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:130;;222:6;209:20;200:29;;234:33;261:5;234:33;;;194:78;;;;;279:130;;359:6;346:20;337:29;;371:33;398:5;371:33;;;331:78;;;;;416:128;;495:6;482:20;473:29;;507:32;533:5;507:32;;;467:77;;;;;551:126;;629:6;616:20;607:29;;641:31;666:5;641:31;;;601:76;;;;;684:241;;788:2;776:9;767:7;763:23;759:32;756:2;;;804:1;801;794:12;756:2;839:1;856:53;901:7;892:6;881:9;877:22;856:53;;;846:63;;818:97;750:175;;;;;932:366;;;1053:2;1041:9;1032:7;1028:23;1024:32;1021:2;;;1069:1;1066;1059:12;1021:2;1104:1;1121:53;1166:7;1157:6;1146:9;1142:22;1121:53;;;1111:63;;1083:97;1211:2;1229:53;1274:7;1265:6;1254:9;1250:22;1229:53;;;1219:63;;1190:98;1015:283;;;;;;1305:491;;;;1443:2;1431:9;1422:7;1418:23;1414:32;1411:2;;;1459:1;1456;1449:12;1411:2;1494:1;1511:53;1556:7;1547:6;1536:9;1532:22;1511:53;;;1501:63;;1473:97;1601:2;1619:53;1664:7;1655:6;1644:9;1640:22;1619:53;;;1609:63;;1580:98;1709:2;1727:53;1772:7;1763:6;1752:9;1748:22;1727:53;;;1717:63;;1688:98;1405:391;;;;;;1803:366;;;1924:2;1912:9;1903:7;1899:23;1895:32;1892:2;;;1940:1;1937;1930:12;1892:2;1975:1;1992:53;2037:7;2028:6;2017:9;2013:22;1992:53;;;1982:63;;1954:97;2082:2;2100:53;2145:7;2136:6;2125:9;2121:22;2100:53;;;2090:63;;2061:98;1886:283;;;;;;2176:865;;;;;;;2363:3;2351:9;2342:7;2338:23;2334:33;2331:2;;;2380:1;2377;2370:12;2331:2;2415:1;2432:53;2477:7;2468:6;2457:9;2453:22;2432:53;;;2422:63;;2394:97;2522:2;2540:53;2585:7;2576:6;2565:9;2561:22;2540:53;;;2530:63;;2501:98;2630:2;2648:53;2693:7;2684:6;2673:9;2669:22;2648:53;;;2638:63;;2609:98;2738:2;2756:51;2799:7;2790:6;2779:9;2775:22;2756:51;;;2746:61;;2717:96;2844:3;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;;;2853:63;;2823:99;2953:3;2972:53;3017:7;3008:6;2997:9;2993:22;2972:53;;;2962:63;;2932:99;2325:716;;;;;;;;;3048:364;;;3168:2;3156:9;3147:7;3143:23;3139:32;3136:2;;;3184:1;3181;3174:12;3136:2;3219:1;3236:53;3281:7;3272:6;3261:9;3257:22;3236:53;;;3226:63;;3198:97;3326:2;3344:52;3388:7;3379:6;3368:9;3364:22;3344:52;;;3334:62;;3305:97;3130:282;;;;;;3419:113;3502:24;3520:5;3502:24;;;3497:3;3490:37;3484:48;;;3539:104;3616:21;3631:5;3616:21;;;3611:3;3604:34;3598:45;;;3650:113;3733:24;3751:5;3733:24;;;3728:3;3721:37;3715:48;;;3770:152;3871:45;3891:24;3909:5;3891:24;;;3871:45;;;3866:3;3859:58;3853:69;;;3929:347;;4041:39;4074:5;4041:39;;;4092:71;4156:6;4151:3;4092:71;;;4085:78;;4168:52;4213:6;4208:3;4201:4;4194:5;4190:16;4168:52;;;4241:29;4263:6;4241:29;;;4236:3;4232:39;4225:46;;4021:255;;;;;;4283:339;;4391:35;4420:5;4391:35;;;4438:71;4502:6;4497:3;4438:71;;;4431:78;;4514:52;4559:6;4554:3;4547:4;4540:5;4536:16;4514:52;;;4587:29;4609:6;4587:29;;;4582:3;4578:39;4571:46;;4371:251;;;;;;4630:394;;4790:67;4854:2;4849:3;4790:67;;;4783:74;;4890:34;4886:1;4881:3;4877:11;4870:55;4959:27;4954:2;4949:3;4945:12;4938:49;5015:2;5010:3;5006:12;4999:19;;4776:248;;;;5033:396;;5193:67;5257:2;5252:3;5193:67;;;5186:74;;5293:34;5289:1;5284:3;5280:11;5273:55;5362:29;5357:2;5352:3;5348:12;5341:51;5420:2;5415:3;5411:12;5404:19;;5179:250;;;;5438:375;;5598:67;5662:2;5657:3;5598:67;;;5591:74;;5698:34;5694:1;5689:3;5685:11;5678:55;5767:8;5762:2;5757:3;5753:12;5746:30;5804:2;5799:3;5795:12;5788:19;;5584:229;;;;5822:398;;6000:84;6082:1;6077:3;6000:84;;;5993:91;;6117:66;6113:1;6108:3;6104:11;6097:87;6212:1;6207:3;6203:11;6196:18;;5986:234;;;;6229:374;;6389:67;6453:2;6448:3;6389:67;;;6382:74;;6489:34;6485:1;6480:3;6476:11;6469:55;6558:7;6553:2;6548:3;6544:12;6537:29;6594:2;6589:3;6585:12;6578:19;;6375:228;;;;6612:477;;6790:85;6872:2;6867:3;6790:85;;;6783:92;;6908:34;6904:1;6899:3;6895:11;6888:55;6977:34;6972:2;6967:3;6963:12;6956:56;7046:5;7041:2;7036:3;7032:12;7025:27;7080:2;7075:3;7071:12;7064:19;;6776:313;;;;7098:374;;7258:67;7322:2;7317:3;7258:67;;;7251:74;;7358:34;7354:1;7349:3;7345:11;7338:55;7427:7;7422:2;7417:3;7413:12;7406:29;7463:2;7458:3;7454:12;7447:19;;7244:228;;;;7481:370;;7641:67;7705:2;7700:3;7641:67;;;7634:74;;7741:34;7737:1;7732:3;7728:11;7721:55;7810:3;7805:2;7800:3;7796:12;7789:25;7842:2;7837:3;7833:12;7826:19;;7627:224;;;;7860:431;;8038:85;8120:2;8115:3;8038:85;;;8031:92;;8156:34;8152:1;8147:3;8143:11;8136:55;8225:28;8220:2;8215:3;8211:12;8204:50;8282:2;8277:3;8273:12;8266:19;;8024:267;;;;8299:113;8382:24;8400:5;8382:24;;;8377:3;8370:37;8364:48;;;8419:110;8500:23;8517:5;8500:23;;;8495:3;8488:36;8482:47;;;8536:107;8615:22;8631:5;8615:22;;;8610:3;8603:35;8597:46;;;8650:124;8732:36;8762:5;8732:36;;;8727:3;8720:49;8714:60;;;8781:110;8862:23;8879:5;8862:23;;;8857:3;8850:36;8844:47;;;8898:650;;9153:148;9297:3;9153:148;;;9146:155;;9312:75;9383:3;9374:6;9312:75;;;9409:2;9404:3;9400:12;9393:19;;9423:75;9494:3;9485:6;9423:75;;;9520:2;9515:3;9511:12;9504:19;;9540:3;9533:10;;9134:414;;;;;;9555:372;;9754:148;9898:3;9754:148;;;9747:155;;9919:3;9912:10;;9735:192;;;;9934:372;;10133:148;10277:3;10133:148;;;10126:155;;10298:3;10291:10;;10114:192;;;;10313:213;;10431:2;10420:9;10416:18;10408:26;;10445:71;10513:1;10502:9;10498:17;10489:6;10445:71;;;10402:124;;;;;10533:201;;10645:2;10634:9;10630:18;10622:26;;10659:65;10721:1;10710:9;10706:17;10697:6;10659:65;;;10616:118;;;;;10741:213;;10859:2;10848:9;10844:18;10836:26;;10873:71;10941:1;10930:9;10926:17;10917:6;10873:71;;;10830:124;;;;;10961:547;;11163:3;11152:9;11148:19;11140:27;;11178:71;11246:1;11235:9;11231:17;11222:6;11178:71;;;11260:72;11328:2;11317:9;11313:18;11304:6;11260:72;;;11343;11411:2;11400:9;11396:18;11387:6;11343:72;;;11426;11494:2;11483:9;11479:18;11470:6;11426:72;;;11134:374;;;;;;;;11515:547;;11717:3;11706:9;11702:19;11694:27;;11732:71;11800:1;11789:9;11785:17;11776:6;11732:71;;;11814:72;11882:2;11871:9;11867:18;11858:6;11814:72;;;11897;11965:2;11954:9;11950:18;11941:6;11897:72;;;11980;12048:2;12037:9;12033:18;12024:6;11980:72;;;11688:374;;;;;;;;12069:539;;12267:3;12256:9;12252:19;12244:27;;12282:71;12350:1;12339:9;12335:17;12326:6;12282:71;;;12364:68;12428:2;12417:9;12413:18;12404:6;12364:68;;;12443:72;12511:2;12500:9;12496:18;12487:6;12443:72;;;12526;12594:2;12583:9;12579:18;12570:6;12526:72;;;12238:370;;;;;;;;12615:293;;12749:2;12738:9;12734:18;12726:26;;12799:9;12793:4;12789:20;12785:1;12774:9;12770:17;12763:47;12824:74;12893:4;12884:6;12824:74;;;12816:82;;12720:188;;;;;12915:301;;13053:2;13042:9;13038:18;13030:26;;13103:9;13097:4;13093:20;13089:1;13078:9;13074:17;13067:47;13128:78;13201:4;13192:6;13128:78;;;13120:86;;13024:192;;;;;13223:407;;13414:2;13403:9;13399:18;13391:26;;13464:9;13458:4;13454:20;13450:1;13439:9;13435:17;13428:47;13489:131;13615:4;13489:131;;;13481:139;;13385:245;;;;13637:407;;13828:2;13817:9;13813:18;13805:26;;13878:9;13872:4;13868:20;13864:1;13853:9;13849:17;13842:47;13903:131;14029:4;13903:131;;;13895:139;;13799:245;;;;14051:407;;14242:2;14231:9;14227:18;14219:26;;14292:9;14286:4;14282:20;14278:1;14267:9;14263:17;14256:47;14317:131;14443:4;14317:131;;;14309:139;;14213:245;;;;14465:407;;14656:2;14645:9;14641:18;14633:26;;14706:9;14700:4;14696:20;14692:1;14681:9;14677:17;14670:47;14731:131;14857:4;14731:131;;;14723:139;;14627:245;;;;14879:407;;15070:2;15059:9;15055:18;15047:26;;15120:9;15114:4;15110:20;15106:1;15095:9;15091:17;15084:47;15145:131;15271:4;15145:131;;;15137:139;;15041:245;;;;15293:407;;15484:2;15473:9;15469:18;15461:26;;15534:9;15528:4;15524:20;15520:1;15509:9;15505:17;15498:47;15559:131;15685:4;15559:131;;;15551:139;;15455:245;;;;15707:213;;15825:2;15814:9;15810:18;15802:26;;15839:71;15907:1;15896:9;15892:17;15883:6;15839:71;;;15796:124;;;;;15927:209;;16043:2;16032:9;16028:18;16020:26;;16057:69;16123:1;16112:9;16108:17;16099:6;16057:69;;;16014:122;;;;;16143:316;;16285:2;16274:9;16270:18;16262:26;;16299:69;16365:1;16354:9;16350:17;16341:6;16299:69;;;16379:70;16445:2;16434:9;16430:18;16421:6;16379:70;;;16256:203;;;;;;16466:205;;16580:2;16569:9;16565:18;16557:26;;16594:67;16658:1;16647:9;16643:17;16634:6;16594:67;;;16551:120;;;;;16678:211;;16795:2;16784:9;16780:18;16772:26;;16809:70;16876:1;16865:9;16861:17;16852:6;16809:70;;;16766:123;;;;;16896:209;;17012:2;17001:9;16997:18;16989:26;;17026:69;17092:1;17081:9;17077:17;17068:6;17026:69;;;16983:122;;;;;17112:320;;17256:2;17245:9;17241:18;17233:26;;17270:70;17337:1;17326:9;17322:17;17313:6;17270:70;;;17351:71;17418:2;17407:9;17403:18;17394:6;17351:71;;;17227:205;;;;;;17439:118;;17529:5;17523:12;17513:22;;17494:63;;;;17564:122;;17658:5;17652:12;17642:22;;17623:63;;;;17694:163;;17809:6;17804:3;17797:19;17846:4;17841:3;17837:14;17822:29;;17790:67;;;;;17866:145;;18002:3;17987:18;;17980:31;;;;;18019:91;;18081:24;18099:5;18081:24;;;18070:35;;18064:46;;;;18117:85;;18190:5;18183:13;18176:21;18165:32;;18159:43;;;;18209:72;;18271:5;18260:16;;18254:27;;;;18288:121;;18361:42;18354:5;18350:54;18339:65;;18333:76;;;;18416:72;;18478:5;18467:16;;18461:27;;;;18495:88;;18567:10;18560:5;18556:22;18545:33;;18539:44;;;;18590:81;;18661:4;18654:5;18650:16;18639:27;;18633:38;;;;18678:104;;18750:26;18743:5;18739:38;18728:49;;18722:60;;;;18789:106;;18867:23;18884:5;18867:23;;;18854:36;;18848:47;;;;18903:268;18968:1;18975:101;18989:6;18986:1;18983:13;18975:101;;;19065:1;19060:3;19056:11;19050:18;19046:1;19041:3;19037:11;19030:39;19011:2;19008:1;19004:10;18999:15;;18975:101;;;19091:6;19088:1;19085:13;19082:2;;;19156:1;19147:6;19142:3;19138:16;19131:27;19082:2;18952:219;;;;;19179:74;;19243:5;19232:16;;19226:27;;;;19260:97;;19348:2;19344:7;19339:2;19332:5;19328:14;19324:28;19314:38;;19308:49;;;;19365:117;19434:24;19452:5;19434:24;;;19427:5;19424:35;19414:2;;19473:1;19470;19463:12;19414:2;19408:74;;19489:117;19558:24;19576:5;19558:24;;;19551:5;19548:35;19538:2;;19597:1;19594;19587:12;19538:2;19532:74;;19613:117;19682:24;19700:5;19682:24;;;19675:5;19672:35;19662:2;;19721:1;19718;19711:12;19662:2;19656:74;;19737:115;19805:23;19822:5;19805:23;;;19798:5;19795:34;19785:2;;19843:1;19840;19833:12;19785:2;19779:73;;19859:113;19926:22;19942:5;19926:22;;;19919:5;19916:33;19906:2;;19963:1;19960;19953:12;19906:2;19900:72;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2328600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "672",
								"DOMAIN_TYPEHASH()": "698",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1606",
								"checkpoints(address,uint32)": "infinite",
								"decimals()": "380",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "infinite",
								"getCurrentVotes(address)": "2726",
								"getPriorVotes(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1581",
								"numCheckpoints(address)": "1656",
								"symbol()": "infinite",
								"totalSupply()": "397",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint96)": "infinite",
								"_transferTokens(address,address,uint96)": "infinite",
								"_writeCheckpoint(address,uint32,uint96,uint96)": "infinite",
								"add96(uint96,uint96,string memory)": "infinite",
								"getChainId()": "35",
								"safe32(uint256,string memory)": "infinite",
								"safe96(uint256,string memory)": "infinite",
								"sub96(uint96,uint96,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 12574,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "MSTORE"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "POP"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "MLOAD"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "PUSHSIZE"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "CODESIZE"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "SUB"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "DUP1"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "PUSHSIZE"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "DUP4"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "CODECOPY"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "DUP2"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "DUP2"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "MSTORE"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "SWAP2"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "SWAP1"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "DUP2"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "SWAP1"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "JUMP"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "JUMPDEST"
								},
								{
									"begin": 452,
									"end": 463,
									"name": "PUSH",
									"value": "84595161401484A000000"
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2600,
									"name": "DUP4"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "AND"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "AND"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "DUP2"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "MSTORE"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "ADD"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "SWAP1"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "DUP2"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "MSTORE"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "ADD"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "KECCAK256"
								},
								{
									"begin": 2584,
									"end": 2601,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "EXP"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "DUP2"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "SLOAD"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "DUP2"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "MUL"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "NOT"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "AND"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "SWAP1"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "DUP4"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "AND"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "MUL"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "OR"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "SWAP1"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "SSTORE"
								},
								{
									"begin": 2584,
									"end": 2623,
									"name": "POP"
								},
								{
									"begin": 2659,
									"end": 2666,
									"name": "DUP1"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "AND"
								},
								{
									"begin": 2655,
									"end": 2656,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "AND"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 452,
									"end": 463,
									"name": "PUSH",
									"value": "84595161401484A000000"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "MLOAD"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "SWAP2"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "SWAP1"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "JUMP"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "JUMPDEST"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "MLOAD"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "DUP1"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "SWAP2"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "SUB"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "SWAP1"
								},
								{
									"begin": 2638,
									"end": 2680,
									"name": "LOG3"
								},
								{
									"begin": 2538,
									"end": 2687,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "JUMP"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "JUMPDEST"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 89,
									"end": 95,
									"name": "DUP2"
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD"
								},
								{
									"begin": 74,
									"end": 96,
									"name": "SWAP1"
								},
								{
									"begin": 74,
									"end": 96,
									"name": "POP"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 128,
									"end": 133,
									"name": "DUP2"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMP"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMPDEST"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP3"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP2"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "JUMP"
								},
								{
									"begin": 146,
									"end": 409,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 146,
									"end": 409,
									"name": "JUMPDEST"
								},
								{
									"begin": 146,
									"end": 409,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 261,
									"end": 263,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 249,
									"end": 258,
									"name": "DUP3"
								},
								{
									"begin": 240,
									"end": 247,
									"name": "DUP5"
								},
								{
									"begin": 236,
									"end": 259,
									"name": "SUB"
								},
								{
									"begin": 232,
									"end": 264,
									"name": "SLT"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "ISZERO"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "JUMPI"
								},
								{
									"begin": 277,
									"end": 278,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 274,
									"end": 275,
									"name": "DUP1"
								},
								{
									"begin": 267,
									"end": 279,
									"name": "REVERT"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "JUMPDEST"
								},
								{
									"begin": 312,
									"end": 313,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 329,
									"end": 393,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 385,
									"end": 392,
									"name": "DUP5"
								},
								{
									"begin": 376,
									"end": 382,
									"name": "DUP3"
								},
								{
									"begin": 365,
									"end": 374,
									"name": "DUP6"
								},
								{
									"begin": 361,
									"end": 383,
									"name": "ADD"
								},
								{
									"begin": 329,
									"end": 393,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 329,
									"end": 393,
									"name": "JUMP"
								},
								{
									"begin": 329,
									"end": 393,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 329,
									"end": 393,
									"name": "JUMPDEST"
								},
								{
									"begin": 319,
									"end": 393,
									"name": "SWAP2"
								},
								{
									"begin": 319,
									"end": 393,
									"name": "POP"
								},
								{
									"begin": 291,
									"end": 399,
									"name": "POP"
								},
								{
									"begin": 223,
									"end": 409,
									"name": "SWAP3"
								},
								{
									"begin": 223,
									"end": 409,
									"name": "SWAP2"
								},
								{
									"begin": 223,
									"end": 409,
									"name": "POP"
								},
								{
									"begin": 223,
									"end": 409,
									"name": "POP"
								},
								{
									"begin": 223,
									"end": 409,
									"name": "JUMP"
								},
								{
									"begin": 416,
									"end": 529,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 416,
									"end": 529,
									"name": "JUMPDEST"
								},
								{
									"begin": 499,
									"end": 523,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 517,
									"end": 522,
									"name": "DUP2"
								},
								{
									"begin": 499,
									"end": 523,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 499,
									"end": 523,
									"name": "JUMP"
								},
								{
									"begin": 499,
									"end": 523,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 499,
									"end": 523,
									"name": "JUMPDEST"
								},
								{
									"begin": 494,
									"end": 497,
									"name": "DUP3"
								},
								{
									"begin": 487,
									"end": 524,
									"name": "MSTORE"
								},
								{
									"begin": 481,
									"end": 529,
									"name": "POP"
								},
								{
									"begin": 481,
									"end": 529,
									"name": "POP"
								},
								{
									"begin": 481,
									"end": 529,
									"name": "JUMP"
								},
								{
									"begin": 536,
									"end": 749,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 536,
									"end": 749,
									"name": "JUMPDEST"
								},
								{
									"begin": 536,
									"end": 749,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 654,
									"end": 656,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 643,
									"end": 652,
									"name": "DUP3"
								},
								{
									"begin": 639,
									"end": 657,
									"name": "ADD"
								},
								{
									"begin": 631,
									"end": 657,
									"name": "SWAP1"
								},
								{
									"begin": 631,
									"end": 657,
									"name": "POP"
								},
								{
									"begin": 668,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 736,
									"end": 737,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 725,
									"end": 734,
									"name": "DUP4"
								},
								{
									"begin": 721,
									"end": 738,
									"name": "ADD"
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP5"
								},
								{
									"begin": 668,
									"end": 739,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 668,
									"end": 739,
									"name": "JUMP"
								},
								{
									"begin": 668,
									"end": 739,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 668,
									"end": 739,
									"name": "JUMPDEST"
								},
								{
									"begin": 625,
									"end": 749,
									"name": "SWAP3"
								},
								{
									"begin": 625,
									"end": 749,
									"name": "SWAP2"
								},
								{
									"begin": 625,
									"end": 749,
									"name": "POP"
								},
								{
									"begin": 625,
									"end": 749,
									"name": "POP"
								},
								{
									"begin": 625,
									"end": 749,
									"name": "JUMP"
								},
								{
									"begin": 756,
									"end": 847,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 756,
									"end": 847,
									"name": "JUMPDEST"
								},
								{
									"begin": 756,
									"end": 847,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 818,
									"end": 842,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 836,
									"end": 841,
									"name": "DUP3"
								},
								{
									"begin": 818,
									"end": 842,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 818,
									"end": 842,
									"name": "JUMP"
								},
								{
									"begin": 818,
									"end": 842,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 818,
									"end": 842,
									"name": "JUMPDEST"
								},
								{
									"begin": 807,
									"end": 842,
									"name": "SWAP1"
								},
								{
									"begin": 807,
									"end": 842,
									"name": "POP"
								},
								{
									"begin": 801,
									"end": 847,
									"name": "SWAP2"
								},
								{
									"begin": 801,
									"end": 847,
									"name": "SWAP1"
								},
								{
									"begin": 801,
									"end": 847,
									"name": "POP"
								},
								{
									"begin": 801,
									"end": 847,
									"name": "JUMP"
								},
								{
									"begin": 854,
									"end": 975,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 854,
									"end": 975,
									"name": "JUMPDEST"
								},
								{
									"begin": 854,
									"end": 975,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 927,
									"end": 969,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 920,
									"end": 925,
									"name": "DUP3"
								},
								{
									"begin": 916,
									"end": 970,
									"name": "AND"
								},
								{
									"begin": 905,
									"end": 970,
									"name": "SWAP1"
								},
								{
									"begin": 905,
									"end": 970,
									"name": "POP"
								},
								{
									"begin": 899,
									"end": 975,
									"name": "SWAP2"
								},
								{
									"begin": 899,
									"end": 975,
									"name": "SWAP1"
								},
								{
									"begin": 899,
									"end": 975,
									"name": "POP"
								},
								{
									"begin": 899,
									"end": 975,
									"name": "JUMP"
								},
								{
									"begin": 982,
									"end": 1054,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 982,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 982,
									"end": 1054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1049,
									"name": "DUP2"
								},
								{
									"begin": 1033,
									"end": 1049,
									"name": "SWAP1"
								},
								{
									"begin": 1033,
									"end": 1049,
									"name": "POP"
								},
								{
									"begin": 1027,
									"end": 1054,
									"name": "SWAP2"
								},
								{
									"begin": 1027,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 1027,
									"end": 1054,
									"name": "POP"
								},
								{
									"begin": 1027,
									"end": 1054,
									"name": "JUMP"
								},
								{
									"begin": 1061,
									"end": 1178,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 1061,
									"end": 1178,
									"name": "JUMPDEST"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 1148,
									"end": 1153,
									"name": "DUP2"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMP"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMPDEST"
								},
								{
									"begin": 1123,
									"end": 1128,
									"name": "DUP2"
								},
								{
									"begin": 1120,
									"end": 1155,
									"name": "EQ"
								},
								{
									"begin": 1110,
									"end": 1112,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 1110,
									"end": 1112,
									"name": "JUMPI"
								},
								{
									"begin": 1169,
									"end": 1170,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1166,
									"end": 1167,
									"name": "DUP1"
								},
								{
									"begin": 1159,
									"end": 1171,
									"name": "REVERT"
								},
								{
									"begin": 1110,
									"end": 1112,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 1110,
									"end": 1112,
									"name": "JUMPDEST"
								},
								{
									"begin": 1104,
									"end": 1178,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1178,
									"name": "JUMP"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "CODECOPY"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 12574,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a365627a7a72315820793d25fd9b1aa810558f7b3797f4e4f1f55667cc3c8f702c3875249b93814a696c6578706572696d656e74616cf564736f6c63430005110040",
									".code": [
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "LT"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "SHR"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "GT"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "GT"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "C3CDA520"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "E7A324DC"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "F1127ED8"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMP"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMP"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "GT"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "587CDE1E"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "5C19A95C"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMP"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "REVERT"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "JUMPDEST"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "JUMPDEST"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "MLOAD"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "SWAP2"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "JUMP"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "JUMPDEST"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "MLOAD"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "SWAP2"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "SUB"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "RETURN"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "DUP1"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SUB"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SWAP2"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SWAP1"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "DUP2"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "ADD"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SWAP1"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "JUMP"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "MLOAD"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SWAP2"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SWAP1"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "JUMP"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "MLOAD"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "DUP1"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SWAP2"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SUB"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SWAP1"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "RETURN"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "JUMP"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "RETURN"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "MLOAD"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "SWAP2"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "JUMP"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "MLOAD"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "SWAP2"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "SUB"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "RETURN"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "JUMPDEST"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "DUP1"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SUB"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SWAP2"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SWAP1"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "DUP2"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "ADD"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SWAP1"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "JUMP"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "JUMPDEST"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "JUMPDEST"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "MLOAD"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SWAP2"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SWAP1"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "JUMP"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "JUMPDEST"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "MLOAD"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "DUP1"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SWAP2"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SUB"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SWAP1"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "RETURN"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "MLOAD"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "SWAP2"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "JUMP"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "MLOAD"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "DUP1"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "SWAP2"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "SUB"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "RETURN"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "JUMPDEST"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "DUP1"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SUB"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP2"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "DUP2"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "ADD"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "JUMP"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "JUMPDEST"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "JUMPDEST"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "MLOAD"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP2"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "JUMP"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "JUMPDEST"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "MLOAD"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "DUP1"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP2"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SUB"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "RETURN"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "JUMPDEST"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "DUP1"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "SUB"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "SWAP2"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "DUP2"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "ADD"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "JUMP"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "JUMPDEST"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "JUMPDEST"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "STOP"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "DUP1"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SUB"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP2"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "ADD"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "JUMP"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "MLOAD"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP2"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "JUMP"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "MLOAD"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "DUP1"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP2"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SUB"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "RETURN"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "JUMPDEST"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "DUP1"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SUB"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SWAP2"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SWAP1"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "DUP2"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "ADD"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SWAP1"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "JUMP"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "JUMPDEST"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "JUMPDEST"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "MLOAD"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SWAP2"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SWAP1"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "JUMP"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "JUMPDEST"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "MLOAD"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "DUP1"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SWAP2"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SUB"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SWAP1"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "RETURN"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMPDEST"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "DUP1"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SUB"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SWAP2"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SWAP1"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "DUP2"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "ADD"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SWAP1"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMP"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMPDEST"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMPDEST"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "MLOAD"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SWAP2"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SWAP1"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMP"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMPDEST"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "MLOAD"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "DUP1"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SWAP2"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SUB"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SWAP1"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "RETURN"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "ADD"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMP"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMP"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "MLOAD"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SUB"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "RETURN"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "MLOAD"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "SWAP2"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "SWAP1"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "JUMP"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "MLOAD"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "DUP1"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "SWAP2"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "SUB"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "SWAP1"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "RETURN"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "JUMPDEST"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "DUP1"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SUB"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SWAP2"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SWAP1"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "DUP2"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "ADD"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SWAP1"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "JUMP"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "JUMPDEST"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "JUMPDEST"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "MLOAD"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SWAP2"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SWAP1"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "JUMP"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "JUMPDEST"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "MLOAD"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "DUP1"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SWAP2"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SUB"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SWAP1"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "RETURN"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "JUMPDEST"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "DUP1"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SUB"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SWAP2"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SWAP1"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "DUP2"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "ADD"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SWAP1"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "JUMP"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "JUMPDEST"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "JUMPDEST"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "MLOAD"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SWAP2"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SWAP1"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "JUMP"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "JUMPDEST"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "MLOAD"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "DUP1"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SWAP2"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SUB"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SWAP1"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "RETURN"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "JUMPDEST"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "DUP1"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "SUB"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "SWAP2"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "SWAP1"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "DUP2"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "ADD"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "SWAP1"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "JUMP"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "JUMPDEST"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "JUMPDEST"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "STOP"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "JUMPDEST"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "DUP1"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SUB"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SWAP2"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SWAP1"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "DUP2"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "ADD"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SWAP1"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "JUMP"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "JUMPDEST"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "JUMPDEST"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "MLOAD"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SWAP2"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SWAP1"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "JUMP"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "JUMPDEST"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "MLOAD"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "DUP1"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SWAP2"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SUB"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SWAP1"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "RETURN"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "JUMPDEST"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "JUMPDEST"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "MLOAD"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "SWAP2"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "SWAP1"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "JUMP"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "JUMPDEST"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "MLOAD"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "DUP1"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "SWAP2"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "SUB"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "SWAP1"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "RETURN"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DUP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SUB"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP2"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DUP2"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "JUMP"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "MLOAD"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP3"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP2"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "JUMP"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "MLOAD"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DUP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP2"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SUB"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "RETURN"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "JUMPDEST"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "MLOAD"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "ADD"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "MSTORE"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "DUP2"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "MSTORE"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "ADD"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "PUSH",
											"value": "4E697572616C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "DUP2"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "MSTORE"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "POP"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "DUP2"
										},
										{
											"begin": 128,
											"end": 166,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "JUMPDEST"
										},
										{
											"begin": 3653,
											"end": 3657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3682,
											"name": "DUP1"
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "DUP4"
										},
										{
											"begin": 3696,
											"end": 3717,
											"name": "EQ"
										},
										{
											"begin": 3692,
											"end": 3860,
											"name": "ISZERO"
										},
										{
											"begin": 3692,
											"end": 3860,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 3692,
											"end": 3860,
											"name": "JUMPI"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3733,
											"end": 3752,
											"name": "SWAP1"
										},
										{
											"begin": 3733,
											"end": 3752,
											"name": "POP"
										},
										{
											"begin": 3692,
											"end": 3860,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 3692,
											"end": 3860,
											"name": "JUMP"
										},
										{
											"begin": 3692,
											"end": 3860,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 3692,
											"end": 3860,
											"name": "JUMPDEST"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 3799,
											"end": 3808,
											"name": "DUP4"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "MLOAD"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "DUP1"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "ADD"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "MSTORE"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "DUP1"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "DUP2"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "MSTORE"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "ADD"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "PUSH data",
											"value": "30D69E93A362E57830EE2B32181E5A9483403AF4F744004141E5032F52BB8302"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "SWAP2"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "CODECOPY"
										},
										{
											"begin": 3792,
											"end": 3798,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 3792,
											"end": 3849,
											"name": "JUMPDEST"
										},
										{
											"begin": 3783,
											"end": 3849,
											"name": "SWAP1"
										},
										{
											"begin": 3783,
											"end": 3849,
											"name": "POP"
										},
										{
											"begin": 3692,
											"end": 3860,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 3692,
											"end": 3860,
											"name": "JUMPDEST"
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "DUP1"
										},
										{
											"begin": 3870,
											"end": 3880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "DUP1"
										},
										{
											"begin": 3881,
											"end": 3891,
											"name": "CALLER"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "KECCAK256"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3900,
											"name": "DUP7"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "KECCAK256"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "EXP"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "SLOAD"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "MUL"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "NOT"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "DUP4"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "MUL"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "OR"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "SSTORE"
										},
										{
											"begin": 3870,
											"end": 3910,
											"name": "POP"
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "DUP4"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "AND"
										},
										{
											"begin": 3935,
											"end": 3945,
											"name": "CALLER"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "AND"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "DUP4"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "MLOAD"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "SWAP2"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "SWAP1"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "JUMP"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "JUMPDEST"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "MLOAD"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "DUP1"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "SWAP2"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "SUB"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "SWAP1"
										},
										{
											"begin": 3926,
											"end": 3963,
											"name": "LOG3"
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "SWAP2"
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "POP"
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SWAP3"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "SWAP2"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3991,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "JUMPDEST"
										},
										{
											"begin": 452,
											"end": 463,
											"name": "PUSH",
											"value": "84595161401484A000000"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 463,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "JUMP"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "SWAP2"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "SUB"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "KECCAK256"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "DUP2"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "JUMPDEST"
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5196,
											"name": "DUP1"
										},
										{
											"begin": 5199,
											"end": 5209,
											"name": "CALLER"
										},
										{
											"begin": 5181,
											"end": 5209,
											"name": "SWAP1"
										},
										{
											"begin": 5181,
											"end": 5209,
											"name": "POP"
										},
										{
											"begin": 5219,
											"end": 5242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5245,
											"end": 5255,
											"name": "DUP1"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5259,
											"name": "DUP8"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "AND"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "AND"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "DUP2"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "MSTORE"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "ADD"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "SWAP1"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "DUP2"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "MSTORE"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "ADD"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5245,
											"end": 5260,
											"name": "KECCAK256"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5268,
											"name": "DUP4"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "AND"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "AND"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "DUP2"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "MSTORE"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "ADD"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "SWAP1"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "DUP2"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "MSTORE"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "ADD"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "KECCAK256"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "SWAP1"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "SLOAD"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "SWAP1"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "EXP"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "SWAP1"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "DIV"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5245,
											"end": 5269,
											"name": "AND"
										},
										{
											"begin": 5219,
											"end": 5269,
											"name": "SWAP1"
										},
										{
											"begin": 5219,
											"end": 5269,
											"name": "POP"
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 5302,
											"end": 5311,
											"name": "DUP6"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "MLOAD"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "DUP1"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "ADD"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "MSTORE"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "DUP1"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "DUP2"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "MSTORE"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "ADD"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "PUSH data",
											"value": "30D69E93A362E57830EE2B32181E5A9483403AF4F744004141E5032F52BB8302"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "SWAP2"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "CODECOPY"
										},
										{
											"begin": 5295,
											"end": 5301,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 5295,
											"end": 5352,
											"name": "JUMPDEST"
										},
										{
											"begin": 5279,
											"end": 5352,
											"name": "SWAP1"
										},
										{
											"begin": 5279,
											"end": 5352,
											"name": "POP"
										},
										{
											"begin": 5378,
											"end": 5381,
											"name": "DUP7"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "AND"
										},
										{
											"begin": 5367,
											"end": 5374,
											"name": "DUP4"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "AND"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "EQ"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "ISZERO"
										},
										{
											"begin": 5367,
											"end": 5415,
											"name": "DUP1"
										},
										{
											"begin": 5367,
											"end": 5415,
											"name": "ISZERO"
										},
										{
											"begin": 5367,
											"end": 5415,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 5367,
											"end": 5415,
											"name": "JUMPI"
										},
										{
											"begin": 5367,
											"end": 5415,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "AND"
										},
										{
											"begin": 5385,
											"end": 5401,
											"name": "DUP3"
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "AND"
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "EQ"
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "ISZERO"
										},
										{
											"begin": 5367,
											"end": 5415,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 5367,
											"end": 5415,
											"name": "JUMPDEST"
										},
										{
											"begin": 5363,
											"end": 5668,
											"name": "ISZERO"
										},
										{
											"begin": 5363,
											"end": 5668,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 5363,
											"end": 5668,
											"name": "JUMPI"
										},
										{
											"begin": 5431,
											"end": 5450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5459,
											"end": 5475,
											"name": "DUP4"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP4"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "MLOAD"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "MSTORE"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "DUP2"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "MSTORE"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "PUSH data",
											"value": "286B94815EF9C969765B740F7C02D7497DEC20279D87A9D16DB942AD7A7E336F"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "SWAP2"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "CODECOPY"
										},
										{
											"begin": 5453,
											"end": 5458,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5453,
											"end": 5548,
											"name": "JUMPDEST"
										},
										{
											"begin": 5431,
											"end": 5548,
											"name": "SWAP1"
										},
										{
											"begin": 5431,
											"end": 5548,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5601,
											"name": "DUP1"
										},
										{
											"begin": 5562,
											"end": 5572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "DUP1"
										},
										{
											"begin": 5573,
											"end": 5576,
											"name": "DUP11"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "DUP2"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "MSTORE"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "ADD"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "SWAP1"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "DUP2"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "MSTORE"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "ADD"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "KECCAK256"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5585,
											"name": "DUP7"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "DUP2"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "MSTORE"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "ADD"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "SWAP1"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "DUP2"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "MSTORE"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "ADD"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "KECCAK256"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "EXP"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "DUP2"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "SLOAD"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "DUP2"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "MUL"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "NOT"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "SWAP1"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "DUP4"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "MUL"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "OR"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "SWAP1"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "SSTORE"
										},
										{
											"begin": 5562,
											"end": 5601,
											"name": "POP"
										},
										{
											"begin": 5635,
											"end": 5642,
											"name": "DUP4"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "AND"
										},
										{
											"begin": 5630,
											"end": 5633,
											"name": "DUP9"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "AND"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5644,
											"end": 5656,
											"name": "DUP4"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "MLOAD"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "SWAP2"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "JUMP"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "JUMPDEST"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "MLOAD"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "SWAP2"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "SUB"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5657,
											"name": "LOG3"
										},
										{
											"begin": 5363,
											"end": 5668,
											"name": "POP"
										},
										{
											"begin": 5363,
											"end": 5668,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 5363,
											"end": 5668,
											"name": "JUMPDEST"
										},
										{
											"begin": 5678,
											"end": 5711,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5694,
											"end": 5697,
											"name": "DUP8"
										},
										{
											"begin": 5699,
											"end": 5702,
											"name": "DUP8"
										},
										{
											"begin": 5704,
											"end": 5710,
											"name": "DUP4"
										},
										{
											"begin": 5678,
											"end": 5693,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5678,
											"end": 5711,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5678,
											"end": 5711,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5678,
											"end": 5711,
											"name": "JUMPDEST"
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5721,
											"end": 5732,
											"name": "SWAP4"
										},
										{
											"begin": 5721,
											"end": 5732,
											"name": "POP"
										},
										{
											"begin": 5721,
											"end": 5732,
											"name": "POP"
										},
										{
											"begin": 5721,
											"end": 5732,
											"name": "POP"
										},
										{
											"begin": 5721,
											"end": 5732,
											"name": "POP"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SWAP4"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "SWAP3"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "POP"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "POP"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "POP"
										},
										{
											"begin": 5083,
											"end": 5739,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "JUMPDEST"
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 356,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "JUMPDEST"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "MSTORE"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "DUP1"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "MSTORE"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "KECCAK256"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP2"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "POP"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SLOAD"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "EXP"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "DIV"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "DUP2"
										},
										{
											"begin": 787,
											"end": 832,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "JUMPDEST"
										},
										{
											"begin": 5942,
											"end": 5974,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 5952,
											"end": 5962,
											"name": "CALLER"
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP3"
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 5942,
											"end": 5974,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5942,
											"end": 5974,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 5942,
											"end": 5974,
											"name": "JUMPDEST"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5981,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "MSTORE"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "DUP1"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "MSTORE"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "KECCAK256"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP2"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "POP"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SLOAD"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "EXP"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "DIV"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "AND"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1252,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "JUMPDEST"
										},
										{
											"begin": 4246,
											"end": 4250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4277,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4285,
											"name": "DUP4"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "AND"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "AND"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "DUP2"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "MSTORE"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "ADD"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "SWAP1"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "DUP2"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "MSTORE"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "ADD"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "KECCAK256"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "SWAP1"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "SLOAD"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "SWAP1"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "EXP"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "SWAP1"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "DIV"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4269,
											"end": 4286,
											"name": "AND"
										},
										{
											"begin": 4262,
											"end": 4286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4262,
											"end": 4286,
											"name": "AND"
										},
										{
											"begin": 4262,
											"end": 4286,
											"name": "SWAP1"
										},
										{
											"begin": 4262,
											"end": 4286,
											"name": "POP"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SWAP2"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "SWAP1"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "POP"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMPDEST"
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8147,
											"name": "NUMBER"
										},
										{
											"begin": 8121,
											"end": 8132,
											"name": "DUP3"
										},
										{
											"begin": 8121,
											"end": 8147,
											"name": "LT"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "JUMPI"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "MLOAD"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "DUP2"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "MSTORE"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "ADD"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "SWAP1"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "JUMP"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "JUMPDEST"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "MLOAD"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "DUP1"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "SWAP2"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "SUB"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "SWAP1"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "REVERT"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 8113,
											"end": 8190,
											"name": "JUMPDEST"
										},
										{
											"begin": 8201,
											"end": 8220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8237,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8245,
											"name": "DUP6"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "AND"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "AND"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "MSTORE"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "ADD"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "SWAP1"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "DUP2"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "MSTORE"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "ADD"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "KECCAK256"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "SWAP1"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "SLOAD"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "SWAP1"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "EXP"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "SWAP1"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "DIV"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8223,
											"end": 8246,
											"name": "AND"
										},
										{
											"begin": 8201,
											"end": 8246,
											"name": "SWAP1"
										},
										{
											"begin": 8201,
											"end": 8246,
											"name": "POP"
										},
										{
											"begin": 8276,
											"end": 8277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8260,
											"end": 8272,
											"name": "DUP2"
										},
										{
											"begin": 8260,
											"end": 8277,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8260,
											"end": 8277,
											"name": "AND"
										},
										{
											"begin": 8260,
											"end": 8277,
											"name": "EQ"
										},
										{
											"begin": 8256,
											"end": 8312,
											"name": "ISZERO"
										},
										{
											"begin": 8256,
											"end": 8312,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 8256,
											"end": 8312,
											"name": "JUMPI"
										},
										{
											"begin": 8300,
											"end": 8301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8301,
											"name": "SWAP2"
										},
										{
											"begin": 8293,
											"end": 8301,
											"name": "POP"
										},
										{
											"begin": 8293,
											"end": 8301,
											"name": "POP"
										},
										{
											"begin": 8293,
											"end": 8301,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 8293,
											"end": 8301,
											"name": "JUMP"
										},
										{
											"begin": 8256,
											"end": 8312,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 8256,
											"end": 8312,
											"name": "JUMPDEST"
										},
										{
											"begin": 8421,
											"end": 8432,
											"name": "DUP3"
										},
										{
											"begin": 8369,
											"end": 8380,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8381,
											"end": 8388,
											"name": "DUP7"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "AND"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "AND"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "DUP2"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "MSTORE"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "ADD"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "SWAP1"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "DUP2"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "MSTORE"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "ADD"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8389,
											"name": "KECCAK256"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8405,
											"end": 8406,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8390,
											"end": 8402,
											"name": "DUP5"
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "SUB"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "AND"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "AND"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "DUP2"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "MSTORE"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "ADD"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "SWAP1"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "DUP2"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "MSTORE"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "ADD"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8407,
											"name": "KECCAK256"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "ADD"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "SWAP1"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "SLOAD"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "SWAP1"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "EXP"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "SWAP1"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "DIV"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8369,
											"end": 8417,
											"name": "AND"
										},
										{
											"begin": 8369,
											"end": 8432,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8369,
											"end": 8432,
											"name": "AND"
										},
										{
											"begin": 8369,
											"end": 8432,
											"name": "GT"
										},
										{
											"begin": 8365,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 8365,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 8455,
											"end": 8466,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8467,
											"end": 8474,
											"name": "DUP6"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "AND"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "AND"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "DUP2"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "MSTORE"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "ADD"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "SWAP1"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "DUP2"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "MSTORE"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "ADD"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8455,
											"end": 8475,
											"name": "KECCAK256"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8491,
											"end": 8492,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8476,
											"end": 8488,
											"name": "DUP4"
										},
										{
											"begin": 8476,
											"end": 8492,
											"name": "SUB"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "AND"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "AND"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "DUP2"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "MSTORE"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "ADD"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "SWAP1"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "DUP2"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "MSTORE"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "ADD"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "KECCAK256"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "ADD"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "SWAP1"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "SLOAD"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "SWAP1"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "EXP"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "SWAP1"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "DIV"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "AND"
										},
										{
											"begin": 8448,
											"end": 8499,
											"name": "SWAP2"
										},
										{
											"begin": 8448,
											"end": 8499,
											"name": "POP"
										},
										{
											"begin": 8448,
											"end": 8499,
											"name": "POP"
										},
										{
											"begin": 8448,
											"end": 8499,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 8448,
											"end": 8499,
											"name": "JUMP"
										},
										{
											"begin": 8365,
											"end": 8510,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 8365,
											"end": 8510,
											"name": "JUMPDEST"
										},
										{
											"begin": 8604,
											"end": 8615,
											"name": "DUP3"
										},
										{
											"begin": 8568,
											"end": 8579,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8580,
											"end": 8587,
											"name": "DUP7"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "AND"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "AND"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "DUP2"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "MSTORE"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "ADD"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "SWAP1"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "DUP2"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "MSTORE"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "ADD"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8588,
											"name": "KECCAK256"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8590,
											"name": "DUP1"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "AND"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "DUP2"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "MSTORE"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "ADD"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "SWAP1"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "DUP2"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "MSTORE"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "ADD"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8591,
											"name": "KECCAK256"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "ADD"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "SWAP1"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "SLOAD"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "SWAP1"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "EXP"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "SWAP1"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "DIV"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "AND"
										},
										{
											"begin": 8568,
											"end": 8615,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8568,
											"end": 8615,
											"name": "AND"
										},
										{
											"begin": 8568,
											"end": 8615,
											"name": "GT"
										},
										{
											"begin": 8564,
											"end": 8650,
											"name": "ISZERO"
										},
										{
											"begin": 8564,
											"end": 8650,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 8564,
											"end": 8650,
											"name": "JUMPI"
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8639,
											"name": "SWAP2"
										},
										{
											"begin": 8631,
											"end": 8639,
											"name": "POP"
										},
										{
											"begin": 8631,
											"end": 8639,
											"name": "POP"
										},
										{
											"begin": 8631,
											"end": 8639,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 8631,
											"end": 8639,
											"name": "JUMP"
										},
										{
											"begin": 8564,
											"end": 8650,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 8564,
											"end": 8650,
											"name": "JUMPDEST"
										},
										{
											"begin": 8660,
											"end": 8672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8675,
											"end": 8676,
											"name": "DUP1"
										},
										{
											"begin": 8660,
											"end": 8676,
											"name": "SWAP1"
										},
										{
											"begin": 8660,
											"end": 8676,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8717,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8701,
											"end": 8713,
											"name": "DUP4"
										},
										{
											"begin": 8701,
											"end": 8717,
											"name": "SUB"
										},
										{
											"begin": 8686,
											"end": 8717,
											"name": "SWAP1"
										},
										{
											"begin": 8686,
											"end": 8717,
											"name": "POP"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "JUMPDEST"
										},
										{
											"begin": 8742,
											"end": 8747,
											"name": "DUP2"
										},
										{
											"begin": 8734,
											"end": 8747,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8734,
											"end": 8747,
											"name": "AND"
										},
										{
											"begin": 8734,
											"end": 8739,
											"name": "DUP2"
										},
										{
											"begin": 8734,
											"end": 8747,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8734,
											"end": 8747,
											"name": "AND"
										},
										{
											"begin": 8734,
											"end": 8747,
											"name": "GT"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "ISZERO"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "JUMPI"
										},
										{
											"begin": 8763,
											"end": 8776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8805,
											"end": 8806,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "DUP4"
										},
										{
											"begin": 8788,
											"end": 8793,
											"name": "DUP4"
										},
										{
											"begin": 8788,
											"end": 8801,
											"name": "SUB"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "AND"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "DUP2"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "JUMPI"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "INVALID"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "JUMPDEST"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "DIV"
										},
										{
											"begin": 8779,
											"end": 8784,
											"name": "DUP3"
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SUB"
										},
										{
											"begin": 8763,
											"end": 8806,
											"name": "SWAP1"
										},
										{
											"begin": 8763,
											"end": 8806,
											"name": "POP"
										},
										{
											"begin": 8847,
											"end": 8867,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8847,
											"end": 8867,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8847,
											"end": 8867,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8847,
											"end": 8867,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 8847,
											"end": 8867,
											"name": "JUMPDEST"
										},
										{
											"begin": 8870,
											"end": 8881,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8882,
											"end": 8889,
											"name": "DUP10"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "AND"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "AND"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "DUP2"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "MSTORE"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "ADD"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "SWAP1"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "DUP2"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "MSTORE"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "ADD"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8890,
											"name": "KECCAK256"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8891,
											"end": 8897,
											"name": "DUP4"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "AND"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "AND"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "DUP2"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "MSTORE"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "ADD"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "SWAP1"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "DUP2"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "MSTORE"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "ADD"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8898,
											"name": "KECCAK256"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "MLOAD"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "DUP1"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "ADD"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "MSTORE"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "DUP2"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "DUP3"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "ADD"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SLOAD"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "EXP"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "DIV"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "AND"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "AND"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "AND"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "DUP2"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "MSTORE"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "ADD"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "DUP3"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "ADD"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SLOAD"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "EXP"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "DIV"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "AND"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "AND"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "AND"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "DUP2"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "MSTORE"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "POP"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "POP"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8898,
											"name": "POP"
										},
										{
											"begin": 8932,
											"end": 8943,
											"name": "DUP7"
										},
										{
											"begin": 8916,
											"end": 8918,
											"name": "DUP2"
										},
										{
											"begin": 8916,
											"end": 8928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8928,
											"name": "ADD"
										},
										{
											"begin": 8916,
											"end": 8928,
											"name": "MLOAD"
										},
										{
											"begin": 8916,
											"end": 8943,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8916,
											"end": 8943,
											"name": "AND"
										},
										{
											"begin": 8916,
											"end": 8943,
											"name": "EQ"
										},
										{
											"begin": 8912,
											"end": 9135,
											"name": "ISZERO"
										},
										{
											"begin": 8912,
											"end": 9135,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 8912,
											"end": 9135,
											"name": "JUMPI"
										},
										{
											"begin": 8970,
											"end": 8972,
											"name": "DUP1"
										},
										{
											"begin": 8970,
											"end": 8978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8970,
											"end": 8978,
											"name": "ADD"
										},
										{
											"begin": 8970,
											"end": 8978,
											"name": "MLOAD"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "SWAP6"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "POP"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "POP"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "POP"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "POP"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "POP"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "POP"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "JUMP"
										},
										{
											"begin": 8912,
											"end": 9135,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 8912,
											"end": 9135,
											"name": "JUMPDEST"
										},
										{
											"begin": 9018,
											"end": 9029,
											"name": "DUP7"
										},
										{
											"begin": 9003,
											"end": 9005,
											"name": "DUP2"
										},
										{
											"begin": 9003,
											"end": 9015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9015,
											"name": "ADD"
										},
										{
											"begin": 9003,
											"end": 9015,
											"name": "MLOAD"
										},
										{
											"begin": 9003,
											"end": 9029,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9003,
											"end": 9029,
											"name": "AND"
										},
										{
											"begin": 9003,
											"end": 9029,
											"name": "LT"
										},
										{
											"begin": 8999,
											"end": 9135,
											"name": "ISZERO"
										},
										{
											"begin": 8999,
											"end": 9135,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 8999,
											"end": 9135,
											"name": "JUMPI"
										},
										{
											"begin": 9057,
											"end": 9063,
											"name": "DUP2"
										},
										{
											"begin": 9049,
											"end": 9063,
											"name": "SWAP4"
										},
										{
											"begin": 9049,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8999,
											"end": 9135,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8999,
											"end": 9135,
											"name": "JUMP"
										},
										{
											"begin": 8999,
											"end": 9135,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 8999,
											"end": 9135,
											"name": "JUMPDEST"
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9110,
											"end": 9116,
											"name": "DUP3"
										},
										{
											"begin": 9110,
											"end": 9120,
											"name": "SUB"
										},
										{
											"begin": 9102,
											"end": 9120,
											"name": "SWAP3"
										},
										{
											"begin": 9102,
											"end": 9120,
											"name": "POP"
										},
										{
											"begin": 8999,
											"end": 9135,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 8999,
											"end": 9135,
											"name": "JUMPDEST"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "POP"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "POP"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "JUMP"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 8727,
											"end": 9145,
											"name": "JUMPDEST"
										},
										{
											"begin": 9161,
											"end": 9172,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9173,
											"end": 9180,
											"name": "DUP8"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "AND"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "AND"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "DUP2"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "MSTORE"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "ADD"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "SWAP1"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "DUP2"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "MSTORE"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "ADD"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "KECCAK256"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9187,
											"name": "DUP4"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "AND"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "AND"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "DUP2"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "MSTORE"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "ADD"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "SWAP1"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "DUP2"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "MSTORE"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "ADD"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9188,
											"name": "KECCAK256"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "ADD"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "SWAP1"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "SLOAD"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "SWAP1"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "EXP"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "SWAP1"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "DIV"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9194,
											"name": "AND"
										},
										{
											"begin": 9154,
											"end": 9194,
											"name": "SWAP4"
										},
										{
											"begin": 9154,
											"end": 9194,
											"name": "POP"
										},
										{
											"begin": 9154,
											"end": 9194,
											"name": "POP"
										},
										{
											"begin": 9154,
											"end": 9194,
											"name": "POP"
										},
										{
											"begin": 9154,
											"end": 9194,
											"name": "POP"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMPDEST"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SWAP3"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "SWAP2"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "POP"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "POP"
										},
										{
											"begin": 8016,
											"end": 9201,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMPDEST"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "MSTORE"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "MSTORE"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "KECCAK256"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SWAP2"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SWAP1"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "POP"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "SLOAD"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "DUP2"
										},
										{
											"begin": 1730,
											"end": 1769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "MLOAD"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "DUP1"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "ADD"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "MSTORE"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "DUP1"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "DUP2"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "MSTORE"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "ADD"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "PUSH",
											"value": "4E49550000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "DUP2"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "MSTORE"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "POP"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "DUP2"
										},
										{
											"begin": 224,
											"end": 261,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 4618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4643,
											"name": "DUP1"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4653,
											"end": 4662,
											"name": "DUP4"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "MLOAD"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "DUP1"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "ADD"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "MSTORE"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "DUP1"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "DUP2"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "MSTORE"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "ADD"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "PUSH data",
											"value": "AA0434F77A6C4F1D00FE7BA5B4B950CBB617A74B279E346F2C71F484BDA86400"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "SWAP2"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "CODECOPY"
										},
										{
											"begin": 4646,
											"end": 4652,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 4646,
											"end": 4704,
											"name": "JUMPDEST"
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "SWAP1"
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "POP"
										},
										{
											"begin": 4714,
											"end": 4754,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 4730,
											"end": 4740,
											"name": "CALLER"
										},
										{
											"begin": 4742,
											"end": 4745,
											"name": "DUP6"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP4"
										},
										{
											"begin": 4714,
											"end": 4729,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 4714,
											"end": 4754,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4714,
											"end": 4754,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 4714,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4771,
											"end": 4775,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4764,
											"end": 4775,
											"name": "SWAP2"
										},
										{
											"begin": 4764,
											"end": 4775,
											"name": "POP"
										},
										{
											"begin": 4764,
											"end": 4775,
											"name": "POP"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SWAP3"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "SWAP2"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "POP"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "POP"
										},
										{
											"begin": 4549,
											"end": 4782,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "JUMPDEST"
										},
										{
											"begin": 7440,
											"end": 7446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7458,
											"end": 7477,
											"name": "DUP1"
										},
										{
											"begin": 7480,
											"end": 7494,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7495,
											"end": 7502,
											"name": "DUP5"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "AND"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "AND"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "KECCAK256"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "SLOAD"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "EXP"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "DIV"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "AND"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7535,
											"end": 7536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7532,
											"name": "DUP2"
										},
										{
											"begin": 7520,
											"end": 7536,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7520,
											"end": 7536,
											"name": "AND"
										},
										{
											"begin": 7520,
											"end": 7536,
											"name": "GT"
										},
										{
											"begin": 7520,
											"end": 7587,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 7520,
											"end": 7587,
											"name": "JUMPI"
										},
										{
											"begin": 7586,
											"end": 7587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7587,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 7520,
											"end": 7587,
											"name": "JUMP"
										},
										{
											"begin": 7520,
											"end": 7587,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 7520,
											"end": 7587,
											"name": "JUMPDEST"
										},
										{
											"begin": 7539,
											"end": 7550,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7558,
											"name": "DUP5"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "AND"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "AND"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "DUP2"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "MSTORE"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "ADD"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "SWAP1"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "DUP2"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "MSTORE"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "ADD"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "KECCAK256"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7576,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7560,
											"end": 7572,
											"name": "DUP4"
										},
										{
											"begin": 7560,
											"end": 7576,
											"name": "SUB"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "AND"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "AND"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "DUP2"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "MSTORE"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "ADD"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "SWAP1"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "DUP2"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "MSTORE"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "ADD"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7539,
											"end": 7577,
											"name": "KECCAK256"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "ADD"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "SWAP1"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "SLOAD"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "SWAP1"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "EXP"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "SWAP1"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "DIV"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7539,
											"end": 7583,
											"name": "AND"
										},
										{
											"begin": 7520,
											"end": 7587,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 7520,
											"end": 7587,
											"name": "JUMPDEST"
										},
										{
											"begin": 7513,
											"end": 7587,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7587,
											"name": "POP"
										},
										{
											"begin": 7513,
											"end": 7587,
											"name": "POP"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SWAP2"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "SWAP1"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "POP"
										},
										{
											"begin": 7375,
											"end": 7594,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "JUMPDEST"
										},
										{
											"begin": 6519,
											"end": 6542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "JUMP"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "SWAP2"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "SUB"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1444,
											"name": "KECCAK256"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "MLOAD"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "DUP1"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "ADD"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "MSTORE"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "DUP1"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "DUP2"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "MSTORE"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "ADD"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "PUSH",
											"value": "4E697572616C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "DUP2"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "MSTORE"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "POP"
										},
										{
											"begin": 6583,
											"end": 6605,
											"name": "DUP1"
										},
										{
											"begin": 6583,
											"end": 6605,
											"name": "MLOAD"
										},
										{
											"begin": 6583,
											"end": 6605,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 6605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6583,
											"end": 6605,
											"name": "ADD"
										},
										{
											"begin": 6583,
											"end": 6605,
											"name": "KECCAK256"
										},
										{
											"begin": 6607,
											"end": 6619,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 6607,
											"end": 6617,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 6607,
											"end": 6619,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6607,
											"end": 6619,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 6607,
											"end": 6619,
											"name": "JUMPDEST"
										},
										{
											"begin": 6629,
											"end": 6633,
											"name": "ADDRESS"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "MLOAD"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "ADD"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "SWAP5"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "SWAP4"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "SWAP3"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "SWAP2"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "SWAP1"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "JUMP"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "JUMPDEST"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "SWAP1"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6555,
											"end": 6635,
											"name": "MSTORE"
										},
										{
											"begin": 6545,
											"end": 6636,
											"name": "DUP1"
										},
										{
											"begin": 6545,
											"end": 6636,
											"name": "MLOAD"
										},
										{
											"begin": 6545,
											"end": 6636,
											"name": "SWAP1"
										},
										{
											"begin": 6545,
											"end": 6636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6545,
											"end": 6636,
											"name": "ADD"
										},
										{
											"begin": 6545,
											"end": 6636,
											"name": "KECCAK256"
										},
										{
											"begin": 6519,
											"end": 6636,
											"name": "SWAP1"
										},
										{
											"begin": 6519,
											"end": 6636,
											"name": "POP"
										},
										{
											"begin": 6646,
											"end": 6664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "MLOAD"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "SWAP1"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "JUMP"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "JUMPDEST"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "MLOAD"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "DUP1"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "SWAP2"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "SUB"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "SWAP1"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "KECCAK256"
										},
										{
											"begin": 6709,
											"end": 6718,
											"name": "DUP9"
										},
										{
											"begin": 6720,
											"end": 6725,
											"name": "DUP9"
										},
										{
											"begin": 6727,
											"end": 6733,
											"name": "DUP9"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "MLOAD"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "ADD"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "SWAP5"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "SWAP4"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "SWAP3"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "SWAP2"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "SWAP1"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "JUMP"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "JUMPDEST"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "SWAP1"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6734,
											"name": "MSTORE"
										},
										{
											"begin": 6667,
											"end": 6735,
											"name": "DUP1"
										},
										{
											"begin": 6667,
											"end": 6735,
											"name": "MLOAD"
										},
										{
											"begin": 6667,
											"end": 6735,
											"name": "SWAP1"
										},
										{
											"begin": 6667,
											"end": 6735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6667,
											"end": 6735,
											"name": "ADD"
										},
										{
											"begin": 6667,
											"end": 6735,
											"name": "KECCAK256"
										},
										{
											"begin": 6646,
											"end": 6735,
											"name": "SWAP1"
										},
										{
											"begin": 6646,
											"end": 6735,
											"name": "POP"
										},
										{
											"begin": 6745,
											"end": 6759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6816,
											"name": "DUP3"
										},
										{
											"begin": 6818,
											"end": 6828,
											"name": "DUP3"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "MLOAD"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "ADD"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "SWAP3"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "SWAP2"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "SWAP1"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "JUMP"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "JUMPDEST"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "SWAP1"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6829,
											"name": "MSTORE"
										},
										{
											"begin": 6762,
											"end": 6830,
											"name": "DUP1"
										},
										{
											"begin": 6762,
											"end": 6830,
											"name": "MLOAD"
										},
										{
											"begin": 6762,
											"end": 6830,
											"name": "SWAP1"
										},
										{
											"begin": 6762,
											"end": 6830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6830,
											"name": "ADD"
										},
										{
											"begin": 6762,
											"end": 6830,
											"name": "KECCAK256"
										},
										{
											"begin": 6745,
											"end": 6830,
											"name": "SWAP1"
										},
										{
											"begin": 6745,
											"end": 6830,
											"name": "POP"
										},
										{
											"begin": 6840,
											"end": 6857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6870,
											"end": 6876,
											"name": "DUP3"
										},
										{
											"begin": 6878,
											"end": 6879,
											"name": "DUP9"
										},
										{
											"begin": 6881,
											"end": 6882,
											"name": "DUP9"
										},
										{
											"begin": 6884,
											"end": 6885,
											"name": "DUP9"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "MLOAD"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "DUP2"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "MSTORE"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "ADD"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "MSTORE"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "MLOAD"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP5"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP4"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP3"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP2"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP1"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "JUMP"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "JUMPDEST"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "MLOAD"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "DUP2"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SUB"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP1"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "DUP1"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "DUP5"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SUB"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP1"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "DUP6"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "GAS"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "STATICCALL"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "POP"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "POP"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "POP"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "MLOAD"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SUB"
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "MLOAD"
										},
										{
											"begin": 6840,
											"end": 6886,
											"name": "SWAP1"
										},
										{
											"begin": 6840,
											"end": 6886,
											"name": "POP"
										},
										{
											"begin": 6925,
											"end": 6926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6904,
											"end": 6927,
											"name": "AND"
										},
										{
											"begin": 6904,
											"end": 6913,
											"name": "DUP2"
										},
										{
											"begin": 6904,
											"end": 6927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6904,
											"end": 6927,
											"name": "AND"
										},
										{
											"begin": 6904,
											"end": 6927,
											"name": "EQ"
										},
										{
											"begin": 6904,
											"end": 6927,
											"name": "ISZERO"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "JUMPI"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "MLOAD"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "DUP2"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "MSTORE"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "ADD"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "SWAP1"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "JUMP"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "JUMPDEST"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "MLOAD"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "DUP1"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "SWAP2"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "SUB"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "SWAP1"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "REVERT"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 6896,
											"end": 6969,
											"name": "JUMPDEST"
										},
										{
											"begin": 6996,
											"end": 7002,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7012,
											"name": "DUP3"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "AND"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "AND"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "DUP2"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "MSTORE"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "ADD"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "SWAP1"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "DUP2"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "MSTORE"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "ADD"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "KECCAK256"
										},
										{
											"begin": 6996,
											"end": 7013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "DUP2"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "SLOAD"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "DUP1"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "SWAP3"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "SWAP2"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "SWAP1"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "ADD"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "SWAP2"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "SWAP1"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "SSTORE"
										},
										{
											"begin": 6987,
											"end": 6992,
											"name": "DUP10"
										},
										{
											"begin": 6987,
											"end": 7015,
											"name": "EQ"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "JUMPI"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "MLOAD"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "DUP2"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "MSTORE"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "ADD"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "SWAP1"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "JUMP"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "JUMPDEST"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "MLOAD"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "DUP1"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "SWAP2"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "SUB"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "SWAP1"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "REVERT"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 6979,
											"end": 7053,
											"name": "JUMPDEST"
										},
										{
											"begin": 7078,
											"end": 7084,
											"name": "DUP8"
										},
										{
											"begin": 7071,
											"end": 7074,
											"name": "TIMESTAMP"
										},
										{
											"begin": 7071,
											"end": 7084,
											"name": "GT"
										},
										{
											"begin": 7071,
											"end": 7084,
											"name": "ISZERO"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "JUMPI"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "MLOAD"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "DUP2"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "MSTORE"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "ADD"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "SWAP1"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "JUMP"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "JUMPDEST"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "MLOAD"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "DUP1"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "SWAP2"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "SUB"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "SWAP1"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "REVERT"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 7063,
											"end": 7126,
											"name": "JUMPDEST"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 7153,
											"end": 7162,
											"name": "DUP2"
										},
										{
											"begin": 7164,
											"end": 7173,
											"name": "DUP12"
										},
										{
											"begin": 7143,
											"end": 7152,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "JUMPDEST"
										},
										{
											"begin": 7136,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7136,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7136,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7136,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "POP"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "POP"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "POP"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "POP"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "POP"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "POP"
										},
										{
											"begin": 6404,
											"end": 7181,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "JUMPDEST"
										},
										{
											"begin": 3059,
											"end": 3063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3092,
											"name": "DUP1"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3100,
											"name": "DUP5"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "AND"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "AND"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "DUP2"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "MSTORE"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "ADD"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "SWAP1"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "DUP2"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "MSTORE"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "ADD"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3101,
											"name": "KECCAK256"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3109,
											"name": "DUP4"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "AND"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "AND"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "MSTORE"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "ADD"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "MSTORE"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "ADD"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "KECCAK256"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "SLOAD"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "EXP"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "DIV"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3110,
											"name": "AND"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "AND"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SWAP3"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "SWAP2"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "POP"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "POP"
										},
										{
											"begin": 2983,
											"end": 3117,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "JUMPDEST"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "MLOAD"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "SWAP1"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "JUMP"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "JUMPDEST"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "MLOAD"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "DUP1"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "SWAP2"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "SUB"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "SWAP1"
										},
										{
											"begin": 1581,
											"end": 1652,
											"name": "KECCAK256"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "DUP2"
										},
										{
											"begin": 1535,
											"end": 1652,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DUP2"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "KECCAK256"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DUP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "KECCAK256"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP2"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP2"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DUP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SLOAD"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "EXP"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DIV"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "AND"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DUP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SLOAD"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "EXP"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DIV"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "AND"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "DUP3"
										},
										{
											"begin": 1067,
											"end": 1137,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11901,
											"end": 12059,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 11901,
											"end": 12059,
											"name": "JUMPDEST"
										},
										{
											"begin": 11976,
											"end": 11982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12006,
											"end": 12011,
											"name": "PUSH",
											"value": "1000000000000000000000000"
										},
										{
											"begin": 12002,
											"end": 12003,
											"name": "DUP4"
										},
										{
											"begin": 12002,
											"end": 12011,
											"name": "LT"
										},
										{
											"begin": 12013,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "SWAP1"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "JUMPI"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "MLOAD"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "DUP2"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "MSTORE"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "ADD"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "SWAP2"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "SWAP1"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "JUMP"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "JUMPDEST"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "MLOAD"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "DUP1"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "SWAP2"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "SUB"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "SWAP1"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "REVERT"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "JUMPDEST"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "POP"
										},
										{
											"begin": 12050,
											"end": 12051,
											"name": "DUP3"
										},
										{
											"begin": 12036,
											"end": 12052,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12052,
											"name": "POP"
										},
										{
											"begin": 11901,
											"end": 12059,
											"name": "SWAP3"
										},
										{
											"begin": 11901,
											"end": 12059,
											"name": "SWAP2"
										},
										{
											"begin": 11901,
											"end": 12059,
											"name": "POP"
										},
										{
											"begin": 11901,
											"end": 12059,
											"name": "POP"
										},
										{
											"begin": 11901,
											"end": 12059,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12255,
											"end": 12417,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 12255,
											"end": 12417,
											"name": "JUMPDEST"
										},
										{
											"begin": 12341,
											"end": 12347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12373,
											"name": "DUP4"
										},
										{
											"begin": 12367,
											"end": 12373,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12367,
											"end": 12373,
											"name": "AND"
										},
										{
											"begin": 12367,
											"end": 12368,
											"name": "DUP4"
										},
										{
											"begin": 12367,
											"end": 12373,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12367,
											"end": 12373,
											"name": "AND"
										},
										{
											"begin": 12367,
											"end": 12373,
											"name": "GT"
										},
										{
											"begin": 12367,
											"end": 12373,
											"name": "ISZERO"
										},
										{
											"begin": 12375,
											"end": 12387,
											"name": "DUP3"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "SWAP1"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "JUMPI"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "MLOAD"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "DUP2"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "MSTORE"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "ADD"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "SWAP2"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "SWAP1"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "JUMP"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "JUMPDEST"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "MLOAD"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "DUP1"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "SWAP2"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "SUB"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "SWAP1"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "REVERT"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "JUMPDEST"
										},
										{
											"begin": 12359,
											"end": 12388,
											"name": "POP"
										},
										{
											"begin": 12409,
											"end": 12410,
											"name": "DUP3"
										},
										{
											"begin": 12405,
											"end": 12406,
											"name": "DUP5"
										},
										{
											"begin": 12405,
											"end": 12410,
											"name": "SUB"
										},
										{
											"begin": 12398,
											"end": 12410,
											"name": "SWAP1"
										},
										{
											"begin": 12398,
											"end": 12410,
											"name": "POP"
										},
										{
											"begin": 12255,
											"end": 12417,
											"name": "SWAP4"
										},
										{
											"begin": 12255,
											"end": 12417,
											"name": "SWAP3"
										},
										{
											"begin": 12255,
											"end": 12417,
											"name": "POP"
										},
										{
											"begin": 12255,
											"end": 12417,
											"name": "POP"
										},
										{
											"begin": 12255,
											"end": 12417,
											"name": "POP"
										},
										{
											"begin": 12255,
											"end": 12417,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9580,
											"end": 10181,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 9580,
											"end": 10181,
											"name": "JUMPDEST"
										},
										{
											"begin": 9688,
											"end": 9689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9673,
											"end": 9690,
											"name": "AND"
										},
										{
											"begin": 9673,
											"end": 9676,
											"name": "DUP4"
										},
										{
											"begin": 9673,
											"end": 9690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9673,
											"end": 9690,
											"name": "AND"
										},
										{
											"begin": 9673,
											"end": 9690,
											"name": "EQ"
										},
										{
											"begin": 9673,
											"end": 9690,
											"name": "ISZERO"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "JUMPI"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "MLOAD"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "DUP2"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "MSTORE"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "ADD"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "SWAP1"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "JUMP"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "JUMPDEST"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "MLOAD"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "DUP1"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "SWAP2"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "SUB"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "SWAP1"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "REVERT"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 9665,
											"end": 9754,
											"name": "JUMPDEST"
										},
										{
											"begin": 9787,
											"end": 9788,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9789,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9772,
											"end": 9789,
											"name": "AND"
										},
										{
											"begin": 9772,
											"end": 9775,
											"name": "DUP3"
										},
										{
											"begin": 9772,
											"end": 9789,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9772,
											"end": 9789,
											"name": "AND"
										},
										{
											"begin": 9772,
											"end": 9789,
											"name": "EQ"
										},
										{
											"begin": 9772,
											"end": 9789,
											"name": "ISZERO"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "JUMPI"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "MLOAD"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "DUP2"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "MSTORE"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "ADD"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "SWAP1"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "JUMP"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "JUMPDEST"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "MLOAD"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "DUP1"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "SWAP2"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "SUB"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "SWAP1"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "REVERT"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 9764,
											"end": 9851,
											"name": "JUMPDEST"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 9884,
											"end": 9892,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9893,
											"end": 9896,
											"name": "DUP6"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "AND"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "AND"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "DUP2"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "MSTORE"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "ADD"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "SWAP1"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "DUP2"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "MSTORE"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "ADD"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "KECCAK256"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "SWAP1"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "SLOAD"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "SWAP1"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "EXP"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "SWAP1"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "DIV"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9884,
											"end": 9897,
											"name": "AND"
										},
										{
											"begin": 9899,
											"end": 9905,
											"name": "DUP3"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "MLOAD"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "DUP1"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "ADD"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "MSTORE"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "DUP1"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "DUP2"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "MSTORE"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "ADD"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "PUSH data",
											"value": "692EC8C90BC6D060B4B8461E07E5E6DF665FC0757847ED6B4E3F21B09D8256CA"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "SWAP2"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "CODECOPY"
										},
										{
											"begin": 9878,
											"end": 9883,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 9878,
											"end": 9963,
											"name": "JUMPDEST"
										},
										{
											"begin": 9862,
											"end": 9870,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9871,
											"end": 9874,
											"name": "DUP6"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "AND"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "AND"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "DUP2"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "MSTORE"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "ADD"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "SWAP1"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "DUP2"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "MSTORE"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "ADD"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "KECCAK256"
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "EXP"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "DUP2"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "SLOAD"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "DUP2"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "MUL"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "NOT"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "AND"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "SWAP1"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "DUP4"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "AND"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "MUL"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "OR"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "SWAP1"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "SSTORE"
										},
										{
											"begin": 9862,
											"end": 9963,
											"name": "POP"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 9995,
											"end": 10003,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10004,
											"end": 10007,
											"name": "DUP5"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "AND"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "AND"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "DUP2"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "MSTORE"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "ADD"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "SWAP1"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "DUP2"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "MSTORE"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "ADD"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "KECCAK256"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "SWAP1"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "SLOAD"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "SWAP1"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "EXP"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "SWAP1"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "DIV"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9995,
											"end": 10008,
											"name": "AND"
										},
										{
											"begin": 10010,
											"end": 10016,
											"name": "DUP3"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "MLOAD"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "DUP1"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "ADD"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "MSTORE"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "DUP1"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "DUP2"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "MSTORE"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "ADD"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "PUSH data",
											"value": "B162A08CDD346994D7A9C03EEE20F68EE11C6DA5CE67892863A5B8B47F9F80CF"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "SWAP2"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "CODECOPY"
										},
										{
											"begin": 9989,
											"end": 9994,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 9989,
											"end": 10068,
											"name": "JUMPDEST"
										},
										{
											"begin": 9973,
											"end": 9981,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9982,
											"end": 9985,
											"name": "DUP5"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "AND"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "AND"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SWAP1"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "KECCAK256"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "EXP"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "DUP2"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "SLOAD"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "DUP2"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "MUL"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "NOT"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "AND"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "SWAP1"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "DUP4"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "AND"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "MUL"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "OR"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "SWAP1"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "SSTORE"
										},
										{
											"begin": 9973,
											"end": 10068,
											"name": "POP"
										},
										{
											"begin": 10097,
											"end": 10100,
											"name": "DUP2"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "AND"
										},
										{
											"begin": 10092,
											"end": 10095,
											"name": "DUP4"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "AND"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "DUP4"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "MLOAD"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "SWAP2"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "SWAP1"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "JUMP"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "JUMPDEST"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "MLOAD"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "DUP1"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "SWAP2"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "SUB"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "SWAP1"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "LOG3"
										},
										{
											"begin": 10120,
											"end": 10174,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 10135,
											"end": 10144,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10145,
											"end": 10148,
											"name": "DUP6"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "AND"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "AND"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "DUP2"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "MSTORE"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "ADD"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "SWAP1"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "DUP2"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "MSTORE"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "ADD"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "KECCAK256"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "SWAP1"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "SLOAD"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "SWAP1"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "EXP"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "SWAP1"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "DIV"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "AND"
										},
										{
											"begin": 10151,
											"end": 10160,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10161,
											"end": 10164,
											"name": "DUP6"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "AND"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "AND"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "DUP2"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "MSTORE"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "ADD"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "SWAP1"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "DUP2"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "MSTORE"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "ADD"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "KECCAK256"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "SWAP1"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "SLOAD"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "SWAP1"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "EXP"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "SWAP1"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "DIV"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "AND"
										},
										{
											"begin": 10167,
											"end": 10173,
											"name": "DUP4"
										},
										{
											"begin": 10120,
											"end": 10134,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 10120,
											"end": 10174,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10174,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 10120,
											"end": 10174,
											"name": "JUMPDEST"
										},
										{
											"begin": 9580,
											"end": 10181,
											"name": "POP"
										},
										{
											"begin": 9580,
											"end": 10181,
											"name": "POP"
										},
										{
											"begin": 9580,
											"end": 10181,
											"name": "POP"
										},
										{
											"begin": 9580,
											"end": 10181,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9207,
											"end": 9574,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 9207,
											"end": 9574,
											"name": "JUMPDEST"
										},
										{
											"begin": 9283,
											"end": 9306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9318,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9328,
											"name": "DUP5"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "AND"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "AND"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "DUP2"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "MSTORE"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "ADD"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "SWAP1"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "DUP2"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "MSTORE"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "ADD"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "KECCAK256"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "SWAP1"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "SLOAD"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "SWAP1"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "EXP"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "SWAP1"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "DIV"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "AND"
										},
										{
											"begin": 9283,
											"end": 9329,
											"name": "SWAP1"
										},
										{
											"begin": 9283,
											"end": 9329,
											"name": "POP"
										},
										{
											"begin": 9339,
											"end": 9362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9373,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9383,
											"name": "DUP6"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "AND"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "AND"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "DUP2"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "MSTORE"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "ADD"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "SWAP1"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "DUP2"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "MSTORE"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "ADD"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "KECCAK256"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "SWAP1"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "SLOAD"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "SWAP1"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "EXP"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "SWAP1"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "DIV"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9365,
											"end": 9384,
											"name": "AND"
										},
										{
											"begin": 9339,
											"end": 9384,
											"name": "SWAP1"
										},
										{
											"begin": 9339,
											"end": 9384,
											"name": "POP"
										},
										{
											"begin": 9417,
											"end": 9426,
											"name": "DUP3"
										},
										{
											"begin": 9394,
											"end": 9403,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9404,
											"end": 9413,
											"name": "DUP7"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "AND"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "AND"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "DUP2"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "MSTORE"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "ADD"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "SWAP1"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "DUP2"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "MSTORE"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "ADD"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "KECCAK256"
										},
										{
											"begin": 9394,
											"end": 9414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "EXP"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "DUP2"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "SLOAD"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "DUP2"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "MUL"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "NOT"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "AND"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "SWAP1"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "DUP4"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "AND"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "MUL"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "OR"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "SWAP1"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "SSTORE"
										},
										{
											"begin": 9394,
											"end": 9426,
											"name": "POP"
										},
										{
											"begin": 9486,
											"end": 9495,
											"name": "DUP3"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "AND"
										},
										{
											"begin": 9469,
											"end": 9484,
											"name": "DUP3"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "AND"
										},
										{
											"begin": 9458,
											"end": 9467,
											"name": "DUP6"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "AND"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "PUSH",
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "MLOAD"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "MLOAD"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "DUP1"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "SWAP2"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "SUB"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "SWAP1"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "LOG4"
										},
										{
											"begin": 9507,
											"end": 9567,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 9522,
											"end": 9537,
											"name": "DUP3"
										},
										{
											"begin": 9539,
											"end": 9548,
											"name": "DUP5"
										},
										{
											"begin": 9550,
											"end": 9566,
											"name": "DUP4"
										},
										{
											"begin": 9507,
											"end": 9521,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 9507,
											"end": 9567,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9507,
											"end": 9567,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 9507,
											"end": 9567,
											"name": "JUMPDEST"
										},
										{
											"begin": 9207,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9207,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9207,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9207,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9207,
											"end": 9574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12423,
											"end": 12572,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 12423,
											"end": 12572,
											"name": "JUMPDEST"
										},
										{
											"begin": 12468,
											"end": 12472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12499,
											"name": "DUP1"
										},
										{
											"begin": 12531,
											"end": 12540,
											"name": "CHAINID"
										},
										{
											"begin": 12520,
											"end": 12540,
											"name": "SWAP1"
										},
										{
											"begin": 12520,
											"end": 12540,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "DUP1"
										},
										{
											"begin": 12551,
											"end": 12565,
											"name": "SWAP2"
										},
										{
											"begin": 12551,
											"end": 12565,
											"name": "POP"
										},
										{
											"begin": 12551,
											"end": 12565,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12572,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12572,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12065,
											"end": 12249,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 12065,
											"end": 12249,
											"name": "JUMPDEST"
										},
										{
											"begin": 12151,
											"end": 12157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 12177,
											"name": "DUP1"
										},
										{
											"begin": 12184,
											"end": 12185,
											"name": "DUP4"
										},
										{
											"begin": 12180,
											"end": 12181,
											"name": "DUP6"
										},
										{
											"begin": 12180,
											"end": 12185,
											"name": "ADD"
										},
										{
											"begin": 12169,
											"end": 12185,
											"name": "SWAP1"
										},
										{
											"begin": 12169,
											"end": 12185,
											"name": "POP"
										},
										{
											"begin": 12208,
											"end": 12209,
											"name": "DUP5"
										},
										{
											"begin": 12203,
											"end": 12209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12203,
											"end": 12209,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12204,
											"name": "DUP2"
										},
										{
											"begin": 12203,
											"end": 12209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12203,
											"end": 12209,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12209,
											"name": "LT"
										},
										{
											"begin": 12203,
											"end": 12209,
											"name": "ISZERO"
										},
										{
											"begin": 12211,
											"end": 12223,
											"name": "DUP4"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "JUMPI"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "MLOAD"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "DUP2"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "MSTORE"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "ADD"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "SWAP2"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "JUMP"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "JUMPDEST"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "MLOAD"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "DUP1"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "SWAP2"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "SUB"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "REVERT"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "JUMPDEST"
										},
										{
											"begin": 12195,
											"end": 12224,
											"name": "POP"
										},
										{
											"begin": 12241,
											"end": 12242,
											"name": "DUP1"
										},
										{
											"begin": 12234,
											"end": 12242,
											"name": "SWAP2"
										},
										{
											"begin": 12234,
											"end": 12242,
											"name": "POP"
										},
										{
											"begin": 12234,
											"end": 12242,
											"name": "POP"
										},
										{
											"begin": 12065,
											"end": 12249,
											"name": "SWAP4"
										},
										{
											"begin": 12065,
											"end": 12249,
											"name": "SWAP3"
										},
										{
											"begin": 12065,
											"end": 12249,
											"name": "POP"
										},
										{
											"begin": 12065,
											"end": 12249,
											"name": "POP"
										},
										{
											"begin": 12065,
											"end": 12249,
											"name": "POP"
										},
										{
											"begin": 12065,
											"end": 12249,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10187,
											"end": 11108,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 10187,
											"end": 11108,
											"name": "JUMPDEST"
										},
										{
											"begin": 10291,
											"end": 10297,
											"name": "DUP2"
										},
										{
											"begin": 10281,
											"end": 10297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10281,
											"end": 10297,
											"name": "AND"
										},
										{
											"begin": 10281,
											"end": 10287,
											"name": "DUP4"
										},
										{
											"begin": 10281,
											"end": 10297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10281,
											"end": 10297,
											"name": "AND"
										},
										{
											"begin": 10281,
											"end": 10297,
											"name": "EQ"
										},
										{
											"begin": 10281,
											"end": 10297,
											"name": "ISZERO"
										},
										{
											"begin": 10281,
											"end": 10311,
											"name": "DUP1"
										},
										{
											"begin": 10281,
											"end": 10311,
											"name": "ISZERO"
										},
										{
											"begin": 10281,
											"end": 10311,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 10281,
											"end": 10311,
											"name": "JUMPI"
										},
										{
											"begin": 10281,
											"end": 10311,
											"name": "POP"
										},
										{
											"begin": 10310,
											"end": 10311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10301,
											"end": 10307,
											"name": "DUP2"
										},
										{
											"begin": 10301,
											"end": 10311,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10301,
											"end": 10311,
											"name": "AND"
										},
										{
											"begin": 10301,
											"end": 10311,
											"name": "GT"
										},
										{
											"begin": 10281,
											"end": 10311,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 10281,
											"end": 10311,
											"name": "JUMPDEST"
										},
										{
											"begin": 10277,
											"end": 11102,
											"name": "ISZERO"
										},
										{
											"begin": 10277,
											"end": 11102,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 10277,
											"end": 11102,
											"name": "JUMPI"
										},
										{
											"begin": 10349,
											"end": 10350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10331,
											"end": 10351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10331,
											"end": 10351,
											"name": "AND"
										},
										{
											"begin": 10331,
											"end": 10337,
											"name": "DUP4"
										},
										{
											"begin": 10331,
											"end": 10351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10331,
											"end": 10351,
											"name": "AND"
										},
										{
											"begin": 10331,
											"end": 10351,
											"name": "EQ"
										},
										{
											"begin": 10327,
											"end": 10703,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 10327,
											"end": 10703,
											"name": "JUMPI"
										},
										{
											"begin": 10371,
											"end": 10387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10404,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10405,
											"end": 10411,
											"name": "DUP6"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "AND"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "AND"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "DUP2"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "MSTORE"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "ADD"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "SWAP1"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "DUP2"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "MSTORE"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "ADD"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "KECCAK256"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "SWAP1"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "SLOAD"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "SWAP1"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "EXP"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "SWAP1"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "DIV"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10412,
											"name": "AND"
										},
										{
											"begin": 10371,
											"end": 10412,
											"name": "SWAP1"
										},
										{
											"begin": 10371,
											"end": 10412,
											"name": "POP"
										},
										{
											"begin": 10430,
											"end": 10446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10461,
											"end": 10462,
											"name": "DUP1"
										},
										{
											"begin": 10449,
											"end": 10458,
											"name": "DUP3"
										},
										{
											"begin": 10449,
											"end": 10462,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10449,
											"end": 10462,
											"name": "AND"
										},
										{
											"begin": 10449,
											"end": 10462,
											"name": "GT"
										},
										{
											"begin": 10449,
											"end": 10509,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 10449,
											"end": 10509,
											"name": "JUMPI"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10449,
											"end": 10509,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 10449,
											"end": 10509,
											"name": "JUMP"
										},
										{
											"begin": 10449,
											"end": 10509,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 10449,
											"end": 10509,
											"name": "JUMPDEST"
										},
										{
											"begin": 10465,
											"end": 10476,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10483,
											"name": "DUP7"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "AND"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "AND"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "DUP2"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "MSTORE"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "ADD"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "SWAP1"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "DUP2"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "MSTORE"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "ADD"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "KECCAK256"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10497,
											"end": 10498,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10485,
											"end": 10494,
											"name": "DUP5"
										},
										{
											"begin": 10485,
											"end": 10498,
											"name": "SUB"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "AND"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "AND"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "DUP2"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "MSTORE"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "ADD"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "SWAP1"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "DUP2"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "MSTORE"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "ADD"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10499,
											"name": "KECCAK256"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "ADD"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "SWAP1"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "SLOAD"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "SWAP1"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "EXP"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "SWAP1"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "DIV"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10465,
											"end": 10505,
											"name": "AND"
										},
										{
											"begin": 10449,
											"end": 10509,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 10449,
											"end": 10509,
											"name": "JUMPDEST"
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "SWAP1"
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "POP"
										},
										{
											"begin": 10527,
											"end": 10543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 10552,
											"end": 10561,
											"name": "DUP3"
										},
										{
											"begin": 10563,
											"end": 10569,
											"name": "DUP6"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "MLOAD"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "DUP1"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "ADD"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "MSTORE"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "DUP1"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "DUP2"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "MSTORE"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "ADD"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "PUSH data",
											"value": "3572F2E3A73D8992FFD14BBDC492A68EA3425B205FA2E411C1A12014BC6F8444"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "SWAP2"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "CODECOPY"
										},
										{
											"begin": 10546,
											"end": 10551,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 10546,
											"end": 10613,
											"name": "JUMPDEST"
										},
										{
											"begin": 10527,
											"end": 10613,
											"name": "SWAP1"
										},
										{
											"begin": 10527,
											"end": 10613,
											"name": "POP"
										},
										{
											"begin": 10631,
											"end": 10688,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 10648,
											"end": 10654,
											"name": "DUP7"
										},
										{
											"begin": 10656,
											"end": 10665,
											"name": "DUP5"
										},
										{
											"begin": 10667,
											"end": 10676,
											"name": "DUP5"
										},
										{
											"begin": 10678,
											"end": 10687,
											"name": "DUP5"
										},
										{
											"begin": 10631,
											"end": 10647,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 10631,
											"end": 10688,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10631,
											"end": 10688,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 10631,
											"end": 10688,
											"name": "JUMPDEST"
										},
										{
											"begin": 10327,
											"end": 10703,
											"name": "POP"
										},
										{
											"begin": 10327,
											"end": 10703,
											"name": "POP"
										},
										{
											"begin": 10327,
											"end": 10703,
											"name": "POP"
										},
										{
											"begin": 10327,
											"end": 10703,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 10327,
											"end": 10703,
											"name": "JUMPDEST"
										},
										{
											"begin": 10739,
											"end": 10740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10721,
											"end": 10741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10721,
											"end": 10741,
											"name": "AND"
										},
										{
											"begin": 10721,
											"end": 10727,
											"name": "DUP3"
										},
										{
											"begin": 10721,
											"end": 10741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10721,
											"end": 10741,
											"name": "AND"
										},
										{
											"begin": 10721,
											"end": 10741,
											"name": "EQ"
										},
										{
											"begin": 10717,
											"end": 11092,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 10717,
											"end": 11092,
											"name": "JUMPI"
										},
										{
											"begin": 10761,
											"end": 10777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10794,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10795,
											"end": 10801,
											"name": "DUP5"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "AND"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "AND"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "DUP2"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "MSTORE"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "ADD"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "SWAP1"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "DUP2"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "MSTORE"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "ADD"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "KECCAK256"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "SWAP1"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "SLOAD"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "SWAP1"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "EXP"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "SWAP1"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "DIV"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "AND"
										},
										{
											"begin": 10761,
											"end": 10802,
											"name": "SWAP1"
										},
										{
											"begin": 10761,
											"end": 10802,
											"name": "POP"
										},
										{
											"begin": 10820,
											"end": 10836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10851,
											"end": 10852,
											"name": "DUP1"
										},
										{
											"begin": 10839,
											"end": 10848,
											"name": "DUP3"
										},
										{
											"begin": 10839,
											"end": 10852,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10839,
											"end": 10852,
											"name": "AND"
										},
										{
											"begin": 10839,
											"end": 10852,
											"name": "GT"
										},
										{
											"begin": 10839,
											"end": 10899,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 10839,
											"end": 10899,
											"name": "JUMPI"
										},
										{
											"begin": 10898,
											"end": 10899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 10899,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 10839,
											"end": 10899,
											"name": "JUMP"
										},
										{
											"begin": 10839,
											"end": 10899,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 10839,
											"end": 10899,
											"name": "JUMPDEST"
										},
										{
											"begin": 10855,
											"end": 10866,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10867,
											"end": 10873,
											"name": "DUP6"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "AND"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "AND"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "DUP2"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "MSTORE"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "ADD"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "SWAP1"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "DUP2"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "MSTORE"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "ADD"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "KECCAK256"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10888,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10875,
											"end": 10884,
											"name": "DUP5"
										},
										{
											"begin": 10875,
											"end": 10888,
											"name": "SUB"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "AND"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "AND"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "DUP2"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "MSTORE"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "ADD"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "SWAP1"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "DUP2"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "MSTORE"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "ADD"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10889,
											"name": "KECCAK256"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "ADD"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "SWAP1"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "SLOAD"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "SWAP1"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "EXP"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "SWAP1"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "DIV"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10855,
											"end": 10895,
											"name": "AND"
										},
										{
											"begin": 10839,
											"end": 10899,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 10839,
											"end": 10899,
											"name": "JUMPDEST"
										},
										{
											"begin": 10820,
											"end": 10899,
											"name": "SWAP1"
										},
										{
											"begin": 10820,
											"end": 10899,
											"name": "POP"
										},
										{
											"begin": 10917,
											"end": 10933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 10942,
											"end": 10951,
											"name": "DUP3"
										},
										{
											"begin": 10953,
											"end": 10959,
											"name": "DUP6"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "MLOAD"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "DUP1"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "ADD"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "MSTORE"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "DUP1"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "DUP2"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "MSTORE"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "ADD"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "PUSH data",
											"value": "BA9D0177EED180B5D6A2C76DFC689B87BFD0698268C3A8DB9E79A797CB697239"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "SWAP2"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "CODECOPY"
										},
										{
											"begin": 10936,
											"end": 10941,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 10936,
											"end": 11002,
											"name": "JUMPDEST"
										},
										{
											"begin": 10917,
											"end": 11002,
											"name": "SWAP1"
										},
										{
											"begin": 10917,
											"end": 11002,
											"name": "POP"
										},
										{
											"begin": 11020,
											"end": 11077,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 11037,
											"end": 11043,
											"name": "DUP6"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP5"
										},
										{
											"begin": 11056,
											"end": 11065,
											"name": "DUP5"
										},
										{
											"begin": 11067,
											"end": 11076,
											"name": "DUP5"
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 11020,
											"end": 11077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11020,
											"end": 11077,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 11020,
											"end": 11077,
											"name": "JUMPDEST"
										},
										{
											"begin": 10717,
											"end": 11092,
											"name": "POP"
										},
										{
											"begin": 10717,
											"end": 11092,
											"name": "POP"
										},
										{
											"begin": 10717,
											"end": 11092,
											"name": "POP"
										},
										{
											"begin": 10717,
											"end": 11092,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 10717,
											"end": 11092,
											"name": "JUMPDEST"
										},
										{
											"begin": 10277,
											"end": 11102,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 10277,
											"end": 11102,
											"name": "JUMPDEST"
										},
										{
											"begin": 10187,
											"end": 11108,
											"name": "POP"
										},
										{
											"begin": 10187,
											"end": 11108,
											"name": "POP"
										},
										{
											"begin": 10187,
											"end": 11108,
											"name": "POP"
										},
										{
											"begin": 10187,
											"end": 11108,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11114,
											"end": 11731,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 11114,
											"end": 11731,
											"name": "JUMPDEST"
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 11259,
											"end": 11271,
											"name": "NUMBER"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "MLOAD"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "DUP1"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "ADD"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "MSTORE"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "DUP1"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "DUP2"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "MSTORE"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "ADD"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "PUSH data",
											"value": "4BECE53613AC1432B74B912202F09EB50CB0DCB5908CBBD578098234A3A7791C"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "SWAP2"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "CODECOPY"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 11252,
											"end": 11327,
											"name": "JUMPDEST"
										},
										{
											"begin": 11231,
											"end": 11327,
											"name": "SWAP1"
										},
										{
											"begin": 11231,
											"end": 11327,
											"name": "POP"
										},
										{
											"begin": 11355,
											"end": 11356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11352,
											"name": "DUP5"
										},
										{
											"begin": 11340,
											"end": 11356,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11340,
											"end": 11356,
											"name": "AND"
										},
										{
											"begin": 11340,
											"end": 11356,
											"name": "GT"
										},
										{
											"begin": 11340,
											"end": 11425,
											"name": "DUP1"
										},
										{
											"begin": 11340,
											"end": 11425,
											"name": "ISZERO"
										},
										{
											"begin": 11340,
											"end": 11425,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 11340,
											"end": 11425,
											"name": "JUMPI"
										},
										{
											"begin": 11340,
											"end": 11425,
											"name": "POP"
										},
										{
											"begin": 11414,
											"end": 11425,
											"name": "DUP1"
										},
										{
											"begin": 11360,
											"end": 11425,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11360,
											"end": 11425,
											"name": "AND"
										},
										{
											"begin": 11360,
											"end": 11371,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11381,
											"name": "DUP8"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "AND"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "AND"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "DUP2"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "MSTORE"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "ADD"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "SWAP1"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "DUP2"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "MSTORE"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "ADD"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "KECCAK256"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11399,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11383,
											"end": 11395,
											"name": "DUP8"
										},
										{
											"begin": 11383,
											"end": 11399,
											"name": "SUB"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "AND"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "AND"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "DUP2"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "MSTORE"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "ADD"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "SWAP1"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "DUP2"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "MSTORE"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "ADD"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11400,
											"name": "KECCAK256"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "SLOAD"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "EXP"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "DIV"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11360,
											"end": 11410,
											"name": "AND"
										},
										{
											"begin": 11360,
											"end": 11425,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11360,
											"end": 11425,
											"name": "AND"
										},
										{
											"begin": 11360,
											"end": 11425,
											"name": "EQ"
										},
										{
											"begin": 11340,
											"end": 11425,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 11340,
											"end": 11425,
											"name": "JUMPDEST"
										},
										{
											"begin": 11336,
											"end": 11660,
											"name": "ISZERO"
										},
										{
											"begin": 11336,
											"end": 11660,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 11336,
											"end": 11660,
											"name": "JUMPI"
										},
										{
											"begin": 11488,
											"end": 11496,
											"name": "DUP2"
										},
										{
											"begin": 11439,
											"end": 11450,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11451,
											"end": 11460,
											"name": "DUP8"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "AND"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "AND"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "DUP2"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "MSTORE"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "ADD"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "SWAP1"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "DUP2"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "MSTORE"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "ADD"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11439,
											"end": 11461,
											"name": "KECCAK256"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11477,
											"end": 11478,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11462,
											"end": 11474,
											"name": "DUP8"
										},
										{
											"begin": 11462,
											"end": 11478,
											"name": "SUB"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "AND"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "AND"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "DUP2"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "MSTORE"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "ADD"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "SWAP1"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "DUP2"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "MSTORE"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "ADD"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11439,
											"end": 11479,
											"name": "KECCAK256"
										},
										{
											"begin": 11439,
											"end": 11485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11439,
											"end": 11485,
											"name": "ADD"
										},
										{
											"begin": 11439,
											"end": 11485,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "EXP"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "DUP2"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "SLOAD"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "DUP2"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "MUL"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "NOT"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "AND"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "SWAP1"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "DUP4"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "AND"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "MUL"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "OR"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "SWAP1"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "SSTORE"
										},
										{
											"begin": 11439,
											"end": 11496,
											"name": "POP"
										},
										{
											"begin": 11336,
											"end": 11660,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 11336,
											"end": 11660,
											"name": "JUMP"
										},
										{
											"begin": 11336,
											"end": 11660,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 11336,
											"end": 11660,
											"name": "JUMPDEST"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "MLOAD"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "DUP1"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "ADD"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "MSTORE"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "DUP1"
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "DUP3"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "AND"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "DUP2"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "MSTORE"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "ADD"
										},
										{
											"begin": 11586,
											"end": 11594,
											"name": "DUP4"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "AND"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "DUP2"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "MSTORE"
										},
										{
											"begin": 11562,
											"end": 11595,
											"name": "POP"
										},
										{
											"begin": 11523,
											"end": 11534,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11535,
											"end": 11544,
											"name": "DUP8"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "SWAP1"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11545,
											"name": "KECCAK256"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11546,
											"end": 11558,
											"name": "DUP7"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "AND"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "AND"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "MSTORE"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "ADD"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "SWAP1"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "MSTORE"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "ADD"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11559,
											"name": "KECCAK256"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP3"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "ADD"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "MLOAD"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "ADD"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "EXP"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "SLOAD"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "MUL"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "NOT"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "AND"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "SWAP1"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP4"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "AND"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "MUL"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "OR"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "SWAP1"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "SSTORE"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "POP"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP3"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "ADD"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "MLOAD"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "ADD"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "EXP"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "SLOAD"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP2"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "MUL"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "NOT"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "AND"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "SWAP1"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "DUP4"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "AND"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "MUL"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "OR"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "SWAP1"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "SSTORE"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "POP"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "SWAP1"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "POP"
										},
										{
											"begin": 11523,
											"end": 11595,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11651,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11635,
											"end": 11647,
											"name": "DUP5"
										},
										{
											"begin": 11635,
											"end": 11651,
											"name": "ADD"
										},
										{
											"begin": 11607,
											"end": 11621,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11631,
											"name": "DUP8"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "AND"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "AND"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "DUP2"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "MSTORE"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "ADD"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "SWAP1"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "DUP2"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "MSTORE"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "ADD"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "KECCAK256"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "EXP"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "DUP2"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "SLOAD"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "DUP2"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "MUL"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "NOT"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "AND"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "SWAP1"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "DUP4"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "AND"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "MUL"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "OR"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "SWAP1"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "SSTORE"
										},
										{
											"begin": 11607,
											"end": 11651,
											"name": "POP"
										},
										{
											"begin": 11336,
											"end": 11660,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 11336,
											"end": 11660,
											"name": "JUMPDEST"
										},
										{
											"begin": 11694,
											"end": 11703,
											"name": "DUP5"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "AND"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "PUSH",
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 11705,
											"end": 11713,
											"name": "DUP5"
										},
										{
											"begin": 11715,
											"end": 11723,
											"name": "DUP5"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "SWAP3"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "JUMP"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "JUMPDEST"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "SUB"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11724,
											"name": "LOG2"
										},
										{
											"begin": 11114,
											"end": 11731,
											"name": "POP"
										},
										{
											"begin": 11114,
											"end": 11731,
											"name": "POP"
										},
										{
											"begin": 11114,
											"end": 11731,
											"name": "POP"
										},
										{
											"begin": 11114,
											"end": 11731,
											"name": "POP"
										},
										{
											"begin": 11114,
											"end": 11731,
											"name": "POP"
										},
										{
											"begin": 11114,
											"end": 11731,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11737,
											"end": 11895,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 11737,
											"end": 11895,
											"name": "JUMPDEST"
										},
										{
											"begin": 11812,
											"end": 11818,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11842,
											"end": 11847,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 11838,
											"end": 11839,
											"name": "DUP4"
										},
										{
											"begin": 11838,
											"end": 11847,
											"name": "LT"
										},
										{
											"begin": 11849,
											"end": 11861,
											"name": "DUP3"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "SWAP1"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "JUMPI"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "MLOAD"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "DUP2"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "MSTORE"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "ADD"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "SWAP2"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "SWAP1"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "JUMP"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "JUMPDEST"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "MLOAD"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "DUP1"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "SWAP2"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "SUB"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "SWAP1"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "REVERT"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "JUMPDEST"
										},
										{
											"begin": 11830,
											"end": 11862,
											"name": "POP"
										},
										{
											"begin": 11886,
											"end": 11887,
											"name": "DUP3"
										},
										{
											"begin": 11872,
											"end": 11888,
											"name": "SWAP1"
										},
										{
											"begin": 11872,
											"end": 11888,
											"name": "POP"
										},
										{
											"begin": 11737,
											"end": 11895,
											"name": "SWAP3"
										},
										{
											"begin": 11737,
											"end": 11895,
											"name": "SWAP2"
										},
										{
											"begin": 11737,
											"end": 11895,
											"name": "POP"
										},
										{
											"begin": 11737,
											"end": 11895,
											"name": "POP"
										},
										{
											"begin": 11737,
											"end": 11895,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "MLOAD"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "AND"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP2"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "AND"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "DUP2"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 12574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 63,
											"end": 92,
											"name": "SWAP1"
										},
										{
											"begin": 63,
											"end": 92,
											"name": "POP"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP3"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP2"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "JUMP"
										},
										{
											"begin": 142,
											"end": 272,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 142,
											"end": 272,
											"name": "JUMPDEST"
										},
										{
											"begin": 142,
											"end": 272,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 222,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 200,
											"end": 229,
											"name": "SWAP1"
										},
										{
											"begin": 200,
											"end": 229,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 261,
											"end": 266,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "JUMP"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "JUMPDEST"
										},
										{
											"begin": 194,
											"end": 272,
											"name": "SWAP3"
										},
										{
											"begin": 194,
											"end": 272,
											"name": "SWAP2"
										},
										{
											"begin": 194,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 194,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 194,
											"end": 272,
											"name": "JUMP"
										},
										{
											"begin": 279,
											"end": 409,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 279,
											"end": 409,
											"name": "JUMPDEST"
										},
										{
											"begin": 279,
											"end": 409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 359,
											"end": 365,
											"name": "DUP2"
										},
										{
											"begin": 346,
											"end": 366,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 337,
											"end": 366,
											"name": "SWAP1"
										},
										{
											"begin": 337,
											"end": 366,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 404,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 398,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 371,
											"end": 404,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 371,
											"end": 404,
											"name": "JUMP"
										},
										{
											"begin": 371,
											"end": 404,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 371,
											"end": 404,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 409,
											"name": "SWAP3"
										},
										{
											"begin": 331,
											"end": 409,
											"name": "SWAP2"
										},
										{
											"begin": 331,
											"end": 409,
											"name": "POP"
										},
										{
											"begin": 331,
											"end": 409,
											"name": "POP"
										},
										{
											"begin": 331,
											"end": 409,
											"name": "JUMP"
										},
										{
											"begin": 416,
											"end": 544,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 416,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 416,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 495,
											"end": 501,
											"name": "DUP2"
										},
										{
											"begin": 482,
											"end": 502,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 473,
											"end": 502,
											"name": "SWAP1"
										},
										{
											"begin": 473,
											"end": 502,
											"name": "POP"
										},
										{
											"begin": 507,
											"end": 539,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 539,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 507,
											"end": 539,
											"name": "JUMP"
										},
										{
											"begin": 507,
											"end": 539,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 507,
											"end": 539,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 544,
											"name": "SWAP3"
										},
										{
											"begin": 467,
											"end": 544,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 544,
											"name": "JUMP"
										},
										{
											"begin": 551,
											"end": 677,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 551,
											"end": 677,
											"name": "JUMPDEST"
										},
										{
											"begin": 551,
											"end": 677,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 641,
											"end": 672,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 666,
											"end": 671,
											"name": "DUP2"
										},
										{
											"begin": 641,
											"end": 672,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 641,
											"end": 672,
											"name": "JUMP"
										},
										{
											"begin": 641,
											"end": 672,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 641,
											"end": 672,
											"name": "JUMPDEST"
										},
										{
											"begin": 601,
											"end": 677,
											"name": "SWAP3"
										},
										{
											"begin": 601,
											"end": 677,
											"name": "SWAP2"
										},
										{
											"begin": 601,
											"end": 677,
											"name": "POP"
										},
										{
											"begin": 601,
											"end": 677,
											"name": "POP"
										},
										{
											"begin": 601,
											"end": 677,
											"name": "JUMP"
										},
										{
											"begin": 684,
											"end": 925,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 684,
											"end": 925,
											"name": "JUMPDEST"
										},
										{
											"begin": 684,
											"end": 925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 776,
											"end": 785,
											"name": "DUP3"
										},
										{
											"begin": 767,
											"end": 774,
											"name": "DUP5"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SUB"
										},
										{
											"begin": 759,
											"end": 791,
											"name": "SLT"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "ISZERO"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "JUMPI"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 801,
											"end": 802,
											"name": "DUP1"
										},
										{
											"begin": 794,
											"end": 806,
											"name": "REVERT"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "JUMPDEST"
										},
										{
											"begin": 839,
											"end": 840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 901,
											"end": 908,
											"name": "DUP5"
										},
										{
											"begin": 892,
											"end": 898,
											"name": "DUP3"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP6"
										},
										{
											"begin": 877,
											"end": 899,
											"name": "ADD"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "JUMP"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "JUMPDEST"
										},
										{
											"begin": 846,
											"end": 909,
											"name": "SWAP2"
										},
										{
											"begin": 846,
											"end": 909,
											"name": "POP"
										},
										{
											"begin": 818,
											"end": 915,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 925,
											"name": "SWAP3"
										},
										{
											"begin": 750,
											"end": 925,
											"name": "SWAP2"
										},
										{
											"begin": 750,
											"end": 925,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 925,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 925,
											"name": "JUMP"
										},
										{
											"begin": 932,
											"end": 1298,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 932,
											"end": 1298,
											"name": "JUMPDEST"
										},
										{
											"begin": 932,
											"end": 1298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 932,
											"end": 1298,
											"name": "DUP1"
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1041,
											"end": 1050,
											"name": "DUP4"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP6"
										},
										{
											"begin": 1028,
											"end": 1051,
											"name": "SUB"
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "SLT"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "ISZERO"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "JUMPI"
										},
										{
											"begin": 1069,
											"end": 1070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "DUP1"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "REVERT"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 1166,
											"end": 1173,
											"name": "DUP6"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DUP3"
										},
										{
											"begin": 1146,
											"end": 1155,
											"name": "DUP7"
										},
										{
											"begin": 1142,
											"end": 1164,
											"name": "ADD"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMP"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPDEST"
										},
										{
											"begin": 1111,
											"end": 1174,
											"name": "SWAP3"
										},
										{
											"begin": 1111,
											"end": 1174,
											"name": "POP"
										},
										{
											"begin": 1083,
											"end": 1180,
											"name": "POP"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 1274,
											"end": 1281,
											"name": "DUP6"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP3"
										},
										{
											"begin": 1254,
											"end": 1263,
											"name": "DUP7"
										},
										{
											"begin": 1250,
											"end": 1272,
											"name": "ADD"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "JUMP"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1282,
											"name": "SWAP2"
										},
										{
											"begin": 1219,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1190,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "SWAP3"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "SWAP3"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "JUMP"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "JUMPDEST"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "DUP1"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1445,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1431,
											"end": 1440,
											"name": "DUP5"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "DUP7"
										},
										{
											"begin": 1418,
											"end": 1441,
											"name": "SUB"
										},
										{
											"begin": 1414,
											"end": 1446,
											"name": "SLT"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "ISZERO"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "JUMPI"
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP1"
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 1556,
											"end": 1563,
											"name": "DUP7"
										},
										{
											"begin": 1547,
											"end": 1553,
											"name": "DUP3"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "DUP8"
										},
										{
											"begin": 1532,
											"end": 1554,
											"name": "ADD"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "JUMP"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "JUMPDEST"
										},
										{
											"begin": 1501,
											"end": 1564,
											"name": "SWAP4"
										},
										{
											"begin": 1501,
											"end": 1564,
											"name": "POP"
										},
										{
											"begin": 1473,
											"end": 1570,
											"name": "POP"
										},
										{
											"begin": 1601,
											"end": 1603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "DUP7"
										},
										{
											"begin": 1655,
											"end": 1661,
											"name": "DUP3"
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP8"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "ADD"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "JUMP"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "JUMPDEST"
										},
										{
											"begin": 1609,
											"end": 1672,
											"name": "SWAP3"
										},
										{
											"begin": 1609,
											"end": 1672,
											"name": "POP"
										},
										{
											"begin": 1580,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP7"
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "DUP3"
										},
										{
											"begin": 1752,
											"end": 1761,
											"name": "DUP8"
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "ADD"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "JUMP"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "JUMPDEST"
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1688,
											"end": 1786,
											"name": "POP"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "SWAP3"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "POP"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "SWAP3"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "POP"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "SWAP3"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "JUMP"
										},
										{
											"begin": 1803,
											"end": 2169,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1803,
											"end": 2169,
											"name": "JUMPDEST"
										},
										{
											"begin": 1803,
											"end": 2169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 2169,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP4"
										},
										{
											"begin": 1903,
											"end": 1910,
											"name": "DUP6"
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "SUB"
										},
										{
											"begin": 1895,
											"end": 1927,
											"name": "SLT"
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "ISZERO"
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "JUMPI"
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "DUP1"
										},
										{
											"begin": 1930,
											"end": 1942,
											"name": "REVERT"
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "JUMPDEST"
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 2037,
											"end": 2044,
											"name": "DUP6"
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP3"
										},
										{
											"begin": 2017,
											"end": 2026,
											"name": "DUP7"
										},
										{
											"begin": 2013,
											"end": 2035,
											"name": "ADD"
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "JUMP"
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "JUMPDEST"
										},
										{
											"begin": 1982,
											"end": 2045,
											"name": "SWAP3"
										},
										{
											"begin": 1982,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 1954,
											"end": 2051,
											"name": "POP"
										},
										{
											"begin": 2082,
											"end": 2084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 2145,
											"end": 2152,
											"name": "DUP6"
										},
										{
											"begin": 2136,
											"end": 2142,
											"name": "DUP3"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP7"
										},
										{
											"begin": 2121,
											"end": 2143,
											"name": "ADD"
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "JUMP"
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 2100,
											"end": 2153,
											"name": "JUMPDEST"
										},
										{
											"begin": 2090,
											"end": 2153,
											"name": "SWAP2"
										},
										{
											"begin": 2090,
											"end": 2153,
											"name": "POP"
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "POP"
										},
										{
											"begin": 1886,
											"end": 2169,
											"name": "SWAP3"
										},
										{
											"begin": 1886,
											"end": 2169,
											"name": "POP"
										},
										{
											"begin": 1886,
											"end": 2169,
											"name": "SWAP3"
										},
										{
											"begin": 1886,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 1886,
											"end": 2169,
											"name": "POP"
										},
										{
											"begin": 1886,
											"end": 2169,
											"name": "JUMP"
										},
										{
											"begin": 2176,
											"end": 3041,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2176,
											"end": 3041,
											"name": "JUMPDEST"
										},
										{
											"begin": 2176,
											"end": 3041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 3041,
											"name": "DUP1"
										},
										{
											"begin": 2176,
											"end": 3041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 3041,
											"name": "DUP1"
										},
										{
											"begin": 2176,
											"end": 3041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 3041,
											"name": "DUP1"
										},
										{
											"begin": 2363,
											"end": 2366,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 2351,
											"end": 2360,
											"name": "DUP8"
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "DUP10"
										},
										{
											"begin": 2338,
											"end": 2361,
											"name": "SUB"
										},
										{
											"begin": 2334,
											"end": 2367,
											"name": "SLT"
										},
										{
											"begin": 2331,
											"end": 2333,
											"name": "ISZERO"
										},
										{
											"begin": 2331,
											"end": 2333,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 2331,
											"end": 2333,
											"name": "JUMPI"
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT"
										},
										{
											"begin": 2331,
											"end": 2333,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 2331,
											"end": 2333,
											"name": "JUMPDEST"
										},
										{
											"begin": 2415,
											"end": 2416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 2477,
											"end": 2484,
											"name": "DUP10"
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP3"
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "DUP11"
										},
										{
											"begin": 2453,
											"end": 2475,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMP"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2485,
											"name": "SWAP7"
										},
										{
											"begin": 2422,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2394,
											"end": 2491,
											"name": "POP"
										},
										{
											"begin": 2522,
											"end": 2524,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2593,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 2585,
											"end": 2592,
											"name": "DUP10"
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP3"
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "DUP11"
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "ADD"
										},
										{
											"begin": 2540,
											"end": 2593,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 2540,
											"end": 2593,
											"name": "JUMP"
										},
										{
											"begin": 2540,
											"end": 2593,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 2540,
											"end": 2593,
											"name": "JUMPDEST"
										},
										{
											"begin": 2530,
											"end": 2593,
											"name": "SWAP6"
										},
										{
											"begin": 2530,
											"end": 2593,
											"name": "POP"
										},
										{
											"begin": 2501,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2630,
											"end": 2632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 2693,
											"end": 2700,
											"name": "DUP10"
										},
										{
											"begin": 2684,
											"end": 2690,
											"name": "DUP3"
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP11"
										},
										{
											"begin": 2669,
											"end": 2691,
											"name": "ADD"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "JUMP"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "JUMPDEST"
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "SWAP5"
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "POP"
										},
										{
											"begin": 2609,
											"end": 2707,
											"name": "POP"
										},
										{
											"begin": 2738,
											"end": 2740,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2756,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "DUP10"
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP3"
										},
										{
											"begin": 2779,
											"end": 2788,
											"name": "DUP11"
										},
										{
											"begin": 2775,
											"end": 2797,
											"name": "ADD"
										},
										{
											"begin": 2756,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 2756,
											"end": 2807,
											"name": "JUMP"
										},
										{
											"begin": 2756,
											"end": 2807,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 2756,
											"end": 2807,
											"name": "JUMPDEST"
										},
										{
											"begin": 2746,
											"end": 2807,
											"name": "SWAP4"
										},
										{
											"begin": 2746,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2813,
											"name": "POP"
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP10"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3"
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP11"
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST"
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP3"
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP"
										},
										{
											"begin": 2823,
											"end": 2922,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 2956,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 2972,
											"end": 3025,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 3017,
											"end": 3024,
											"name": "DUP10"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP3"
										},
										{
											"begin": 2997,
											"end": 3006,
											"name": "DUP11"
										},
										{
											"begin": 2993,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2972,
											"end": 3025,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 2972,
											"end": 3025,
											"name": "JUMP"
										},
										{
											"begin": 2972,
											"end": 3025,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 2972,
											"end": 3025,
											"name": "JUMPDEST"
										},
										{
											"begin": 2962,
											"end": 3025,
											"name": "SWAP2"
										},
										{
											"begin": 2962,
											"end": 3025,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3031,
											"name": "POP"
										},
										{
											"begin": 2325,
											"end": 3041,
											"name": "SWAP3"
										},
										{
											"begin": 2325,
											"end": 3041,
											"name": "SWAP6"
										},
										{
											"begin": 2325,
											"end": 3041,
											"name": "POP"
										},
										{
											"begin": 2325,
											"end": 3041,
											"name": "SWAP3"
										},
										{
											"begin": 2325,
											"end": 3041,
											"name": "SWAP6"
										},
										{
											"begin": 2325,
											"end": 3041,
											"name": "POP"
										},
										{
											"begin": 2325,
											"end": 3041,
											"name": "SWAP3"
										},
										{
											"begin": 2325,
											"end": 3041,
											"name": "SWAP6"
										},
										{
											"begin": 2325,
											"end": 3041,
											"name": "JUMP"
										},
										{
											"begin": 3048,
											"end": 3412,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3048,
											"end": 3412,
											"name": "JUMPDEST"
										},
										{
											"begin": 3048,
											"end": 3412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3412,
											"name": "DUP1"
										},
										{
											"begin": 3168,
											"end": 3170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP4"
										},
										{
											"begin": 3147,
											"end": 3154,
											"name": "DUP6"
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "SUB"
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "SLT"
										},
										{
											"begin": 3136,
											"end": 3138,
											"name": "ISZERO"
										},
										{
											"begin": 3136,
											"end": 3138,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 3136,
											"end": 3138,
											"name": "JUMPI"
										},
										{
											"begin": 3184,
											"end": 3185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3182,
											"name": "DUP1"
										},
										{
											"begin": 3174,
											"end": 3186,
											"name": "REVERT"
										},
										{
											"begin": 3136,
											"end": 3138,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 3136,
											"end": 3138,
											"name": "JUMPDEST"
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 3281,
											"end": 3288,
											"name": "DUP6"
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "DUP3"
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "DUP7"
										},
										{
											"begin": 3257,
											"end": 3279,
											"name": "ADD"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "JUMP"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "JUMPDEST"
										},
										{
											"begin": 3226,
											"end": 3289,
											"name": "SWAP3"
										},
										{
											"begin": 3226,
											"end": 3289,
											"name": "POP"
										},
										{
											"begin": 3198,
											"end": 3295,
											"name": "POP"
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 3388,
											"end": 3395,
											"name": "DUP6"
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP3"
										},
										{
											"begin": 3368,
											"end": 3377,
											"name": "DUP7"
										},
										{
											"begin": 3364,
											"end": 3386,
											"name": "ADD"
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "JUMP"
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 3344,
											"end": 3396,
											"name": "JUMPDEST"
										},
										{
											"begin": 3334,
											"end": 3396,
											"name": "SWAP2"
										},
										{
											"begin": 3334,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3305,
											"end": 3402,
											"name": "POP"
										},
										{
											"begin": 3130,
											"end": 3412,
											"name": "SWAP3"
										},
										{
											"begin": 3130,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3130,
											"end": 3412,
											"name": "SWAP3"
										},
										{
											"begin": 3130,
											"end": 3412,
											"name": "SWAP1"
										},
										{
											"begin": 3130,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3130,
											"end": 3412,
											"name": "JUMP"
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "JUMPDEST"
										},
										{
											"begin": 3502,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 3520,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 3502,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 3502,
											"end": 3526,
											"name": "JUMP"
										},
										{
											"begin": 3502,
											"end": 3526,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 3502,
											"end": 3526,
											"name": "JUMPDEST"
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP3"
										},
										{
											"begin": 3490,
											"end": 3527,
											"name": "MSTORE"
										},
										{
											"begin": 3484,
											"end": 3532,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3532,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3532,
											"name": "JUMP"
										},
										{
											"begin": 3539,
											"end": 3643,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 3539,
											"end": 3643,
											"name": "JUMPDEST"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 3631,
											"end": 3636,
											"name": "DUP2"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "JUMP"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "JUMPDEST"
										},
										{
											"begin": 3611,
											"end": 3614,
											"name": "DUP3"
										},
										{
											"begin": 3604,
											"end": 3638,
											"name": "MSTORE"
										},
										{
											"begin": 3598,
											"end": 3643,
											"name": "POP"
										},
										{
											"begin": 3598,
											"end": 3643,
											"name": "POP"
										},
										{
											"begin": 3598,
											"end": 3643,
											"name": "JUMP"
										},
										{
											"begin": 3650,
											"end": 3763,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 3650,
											"end": 3763,
											"name": "JUMPDEST"
										},
										{
											"begin": 3733,
											"end": 3757,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 3751,
											"end": 3756,
											"name": "DUP2"
										},
										{
											"begin": 3733,
											"end": 3757,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 3733,
											"end": 3757,
											"name": "JUMP"
										},
										{
											"begin": 3733,
											"end": 3757,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 3733,
											"end": 3757,
											"name": "JUMPDEST"
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP3"
										},
										{
											"begin": 3721,
											"end": 3758,
											"name": "MSTORE"
										},
										{
											"begin": 3715,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3715,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3715,
											"end": 3763,
											"name": "JUMP"
										},
										{
											"begin": 3770,
											"end": 3922,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 3770,
											"end": 3922,
											"name": "JUMPDEST"
										},
										{
											"begin": 3871,
											"end": 3916,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 3891,
											"end": 3915,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "DUP3"
										},
										{
											"begin": 3891,
											"end": 3915,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 3891,
											"end": 3915,
											"name": "JUMP"
										},
										{
											"begin": 3891,
											"end": 3915,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 3891,
											"end": 3915,
											"name": "JUMPDEST"
										},
										{
											"begin": 3871,
											"end": 3916,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 3871,
											"end": 3916,
											"name": "JUMP"
										},
										{
											"begin": 3871,
											"end": 3916,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 3871,
											"end": 3916,
											"name": "JUMPDEST"
										},
										{
											"begin": 3866,
											"end": 3869,
											"name": "DUP3"
										},
										{
											"begin": 3859,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "POP"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "POP"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "JUMP"
										},
										{
											"begin": 3929,
											"end": 4276,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 3929,
											"end": 4276,
											"name": "JUMPDEST"
										},
										{
											"begin": 3929,
											"end": 4276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4080,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "DUP3"
										},
										{
											"begin": 4041,
											"end": 4080,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 4041,
											"end": 4080,
											"name": "JUMP"
										},
										{
											"begin": 4041,
											"end": 4080,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 4041,
											"end": 4080,
											"name": "JUMPDEST"
										},
										{
											"begin": 4092,
											"end": 4163,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 4156,
											"end": 4162,
											"name": "DUP2"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "DUP6"
										},
										{
											"begin": 4092,
											"end": 4163,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 4092,
											"end": 4163,
											"name": "JUMP"
										},
										{
											"begin": 4092,
											"end": 4163,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 4092,
											"end": 4163,
											"name": "JUMPDEST"
										},
										{
											"begin": 4085,
											"end": 4163,
											"name": "SWAP4"
										},
										{
											"begin": 4085,
											"end": 4163,
											"name": "POP"
										},
										{
											"begin": 4168,
											"end": 4220,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 4213,
											"end": 4219,
											"name": "DUP2"
										},
										{
											"begin": 4208,
											"end": 4211,
											"name": "DUP6"
										},
										{
											"begin": 4201,
											"end": 4205,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4199,
											"name": "DUP7"
										},
										{
											"begin": 4190,
											"end": 4206,
											"name": "ADD"
										},
										{
											"begin": 4168,
											"end": 4220,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 4168,
											"end": 4220,
											"name": "JUMP"
										},
										{
											"begin": 4168,
											"end": 4220,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 4168,
											"end": 4220,
											"name": "JUMPDEST"
										},
										{
											"begin": 4241,
											"end": 4270,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "DUP2"
										},
										{
											"begin": 4241,
											"end": 4270,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 4241,
											"end": 4270,
											"name": "JUMP"
										},
										{
											"begin": 4241,
											"end": 4270,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 4241,
											"end": 4270,
											"name": "JUMPDEST"
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "DUP5"
										},
										{
											"begin": 4232,
											"end": 4271,
											"name": "ADD"
										},
										{
											"begin": 4225,
											"end": 4271,
											"name": "SWAP2"
										},
										{
											"begin": 4225,
											"end": 4271,
											"name": "POP"
										},
										{
											"begin": 4021,
											"end": 4276,
											"name": "POP"
										},
										{
											"begin": 4021,
											"end": 4276,
											"name": "SWAP3"
										},
										{
											"begin": 4021,
											"end": 4276,
											"name": "SWAP2"
										},
										{
											"begin": 4021,
											"end": 4276,
											"name": "POP"
										},
										{
											"begin": 4021,
											"end": 4276,
											"name": "POP"
										},
										{
											"begin": 4021,
											"end": 4276,
											"name": "JUMP"
										},
										{
											"begin": 4283,
											"end": 4622,
											"name": "tag",
											"value": "290"
										},
										{
											"begin": 4283,
											"end": 4622,
											"name": "JUMPDEST"
										},
										{
											"begin": 4283,
											"end": 4622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4426,
											"name": "PUSH [tag]",
											"value": "291"
										},
										{
											"begin": 4420,
											"end": 4425,
											"name": "DUP3"
										},
										{
											"begin": 4391,
											"end": 4426,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 4391,
											"end": 4426,
											"name": "JUMP"
										},
										{
											"begin": 4391,
											"end": 4426,
											"name": "tag",
											"value": "291"
										},
										{
											"begin": 4391,
											"end": 4426,
											"name": "JUMPDEST"
										},
										{
											"begin": 4438,
											"end": 4509,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 4502,
											"end": 4508,
											"name": "DUP2"
										},
										{
											"begin": 4497,
											"end": 4500,
											"name": "DUP6"
										},
										{
											"begin": 4438,
											"end": 4509,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 4438,
											"end": 4509,
											"name": "JUMP"
										},
										{
											"begin": 4438,
											"end": 4509,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 4438,
											"end": 4509,
											"name": "JUMPDEST"
										},
										{
											"begin": 4431,
											"end": 4509,
											"name": "SWAP4"
										},
										{
											"begin": 4431,
											"end": 4509,
											"name": "POP"
										},
										{
											"begin": 4514,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4554,
											"end": 4557,
											"name": "DUP6"
										},
										{
											"begin": 4547,
											"end": 4551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4540,
											"end": 4545,
											"name": "DUP7"
										},
										{
											"begin": 4536,
											"end": 4552,
											"name": "ADD"
										},
										{
											"begin": 4514,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 4514,
											"end": 4566,
											"name": "JUMP"
										},
										{
											"begin": 4514,
											"end": 4566,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 4514,
											"end": 4566,
											"name": "JUMPDEST"
										},
										{
											"begin": 4587,
											"end": 4616,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 4609,
											"end": 4615,
											"name": "DUP2"
										},
										{
											"begin": 4587,
											"end": 4616,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 4587,
											"end": 4616,
											"name": "JUMP"
										},
										{
											"begin": 4587,
											"end": 4616,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 4587,
											"end": 4616,
											"name": "JUMPDEST"
										},
										{
											"begin": 4582,
											"end": 4585,
											"name": "DUP5"
										},
										{
											"begin": 4578,
											"end": 4617,
											"name": "ADD"
										},
										{
											"begin": 4571,
											"end": 4617,
											"name": "SWAP2"
										},
										{
											"begin": 4571,
											"end": 4617,
											"name": "POP"
										},
										{
											"begin": 4371,
											"end": 4622,
											"name": "POP"
										},
										{
											"begin": 4371,
											"end": 4622,
											"name": "SWAP3"
										},
										{
											"begin": 4371,
											"end": 4622,
											"name": "SWAP2"
										},
										{
											"begin": 4371,
											"end": 4622,
											"name": "POP"
										},
										{
											"begin": 4371,
											"end": 4622,
											"name": "POP"
										},
										{
											"begin": 4371,
											"end": 4622,
											"name": "JUMP"
										},
										{
											"begin": 4630,
											"end": 5024,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 4630,
											"end": 5024,
											"name": "JUMPDEST"
										},
										{
											"begin": 4630,
											"end": 5024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 4849,
											"end": 4852,
											"name": "DUP4"
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "JUMP"
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 4790,
											"end": 4857,
											"name": "JUMPDEST"
										},
										{
											"begin": 4783,
											"end": 4857,
											"name": "SWAP2"
										},
										{
											"begin": 4783,
											"end": 4857,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4924,
											"name": "PUSH",
											"value": "4E69753A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261"
										},
										{
											"begin": 4886,
											"end": 4887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4884,
											"name": "DUP4"
										},
										{
											"begin": 4877,
											"end": 4888,
											"name": "ADD"
										},
										{
											"begin": 4870,
											"end": 4925,
											"name": "MSTORE"
										},
										{
											"begin": 4959,
											"end": 4986,
											"name": "PUSH",
											"value": "6E7366657220746F20746865207A65726F206164647265737300000000000000"
										},
										{
											"begin": 4954,
											"end": 4956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "DUP4"
										},
										{
											"begin": 4945,
											"end": 4957,
											"name": "ADD"
										},
										{
											"begin": 4938,
											"end": 4987,
											"name": "MSTORE"
										},
										{
											"begin": 5015,
											"end": 5017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "DUP3"
										},
										{
											"begin": 5006,
											"end": 5018,
											"name": "ADD"
										},
										{
											"begin": 4999,
											"end": 5018,
											"name": "SWAP1"
										},
										{
											"begin": 4999,
											"end": 5018,
											"name": "POP"
										},
										{
											"begin": 4776,
											"end": 5024,
											"name": "SWAP2"
										},
										{
											"begin": 4776,
											"end": 5024,
											"name": "SWAP1"
										},
										{
											"begin": 4776,
											"end": 5024,
											"name": "POP"
										},
										{
											"begin": 4776,
											"end": 5024,
											"name": "JUMP"
										},
										{
											"begin": 5033,
											"end": 5429,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 5033,
											"end": 5429,
											"name": "JUMPDEST"
										},
										{
											"begin": 5033,
											"end": 5429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5260,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 5257,
											"end": 5259,
											"name": "PUSH",
											"value": "3B"
										},
										{
											"begin": 5252,
											"end": 5255,
											"name": "DUP4"
										},
										{
											"begin": 5193,
											"end": 5260,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 5193,
											"end": 5260,
											"name": "JUMP"
										},
										{
											"begin": 5193,
											"end": 5260,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 5193,
											"end": 5260,
											"name": "JUMPDEST"
										},
										{
											"begin": 5186,
											"end": 5260,
											"name": "SWAP2"
										},
										{
											"begin": 5186,
											"end": 5260,
											"name": "POP"
										},
										{
											"begin": 5293,
											"end": 5327,
											"name": "PUSH",
											"value": "4E69753A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261"
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5287,
											"name": "DUP4"
										},
										{
											"begin": 5280,
											"end": 5291,
											"name": "ADD"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "MSTORE"
										},
										{
											"begin": 5362,
											"end": 5391,
											"name": "PUSH",
											"value": "6E736665722066726F6D20746865207A65726F20616464726573730000000000"
										},
										{
											"begin": 5357,
											"end": 5359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5352,
											"end": 5355,
											"name": "DUP4"
										},
										{
											"begin": 5348,
											"end": 5360,
											"name": "ADD"
										},
										{
											"begin": 5341,
											"end": 5392,
											"name": "MSTORE"
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5418,
											"name": "DUP3"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "ADD"
										},
										{
											"begin": 5404,
											"end": 5423,
											"name": "SWAP1"
										},
										{
											"begin": 5404,
											"end": 5423,
											"name": "POP"
										},
										{
											"begin": 5179,
											"end": 5429,
											"name": "SWAP2"
										},
										{
											"begin": 5179,
											"end": 5429,
											"name": "SWAP1"
										},
										{
											"begin": 5179,
											"end": 5429,
											"name": "POP"
										},
										{
											"begin": 5179,
											"end": 5429,
											"name": "JUMP"
										},
										{
											"begin": 5438,
											"end": 5813,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 5438,
											"end": 5813,
											"name": "JUMPDEST"
										},
										{
											"begin": 5438,
											"end": 5813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5665,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5657,
											"end": 5660,
											"name": "DUP4"
										},
										{
											"begin": 5598,
											"end": 5665,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 5598,
											"end": 5665,
											"name": "JUMP"
										},
										{
											"begin": 5598,
											"end": 5665,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 5598,
											"end": 5665,
											"name": "JUMPDEST"
										},
										{
											"begin": 5591,
											"end": 5665,
											"name": "SWAP2"
										},
										{
											"begin": 5591,
											"end": 5665,
											"name": "POP"
										},
										{
											"begin": 5698,
											"end": 5732,
											"name": "PUSH",
											"value": "4E69753A3A6765745072696F72566F7465733A206E6F74207965742064657465"
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5692,
											"name": "DUP4"
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "ADD"
										},
										{
											"begin": 5678,
											"end": 5733,
											"name": "MSTORE"
										},
										{
											"begin": 5767,
											"end": 5775,
											"name": "PUSH",
											"value": "726D696E65640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5757,
											"end": 5760,
											"name": "DUP4"
										},
										{
											"begin": 5753,
											"end": 5765,
											"name": "ADD"
										},
										{
											"begin": 5746,
											"end": 5776,
											"name": "MSTORE"
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "DUP3"
										},
										{
											"begin": 5795,
											"end": 5807,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5807,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5807,
											"name": "POP"
										},
										{
											"begin": 5584,
											"end": 5813,
											"name": "SWAP2"
										},
										{
											"begin": 5584,
											"end": 5813,
											"name": "SWAP1"
										},
										{
											"begin": 5584,
											"end": 5813,
											"name": "POP"
										},
										{
											"begin": 5584,
											"end": 5813,
											"name": "JUMP"
										},
										{
											"begin": 5822,
											"end": 6220,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 5822,
											"end": 6220,
											"name": "JUMPDEST"
										},
										{
											"begin": 5822,
											"end": 6220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6084,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6077,
											"end": 6080,
											"name": "DUP4"
										},
										{
											"begin": 6000,
											"end": 6084,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 6000,
											"end": 6084,
											"name": "JUMP"
										},
										{
											"begin": 6000,
											"end": 6084,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 6000,
											"end": 6084,
											"name": "JUMPDEST"
										},
										{
											"begin": 5993,
											"end": 6084,
											"name": "SWAP2"
										},
										{
											"begin": 5993,
											"end": 6084,
											"name": "POP"
										},
										{
											"begin": 6117,
											"end": 6183,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6111,
											"name": "DUP4"
										},
										{
											"begin": 6104,
											"end": 6115,
											"name": "ADD"
										},
										{
											"begin": 6097,
											"end": 6184,
											"name": "MSTORE"
										},
										{
											"begin": 6212,
											"end": 6213,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6207,
											"end": 6210,
											"name": "DUP3"
										},
										{
											"begin": 6203,
											"end": 6214,
											"name": "ADD"
										},
										{
											"begin": 6196,
											"end": 6214,
											"name": "SWAP1"
										},
										{
											"begin": 6196,
											"end": 6214,
											"name": "POP"
										},
										{
											"begin": 5986,
											"end": 6220,
											"name": "SWAP2"
										},
										{
											"begin": 5986,
											"end": 6220,
											"name": "SWAP1"
										},
										{
											"begin": 5986,
											"end": 6220,
											"name": "POP"
										},
										{
											"begin": 5986,
											"end": 6220,
											"name": "JUMP"
										},
										{
											"begin": 6229,
											"end": 6603,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 6229,
											"end": 6603,
											"name": "JUMPDEST"
										},
										{
											"begin": 6229,
											"end": 6603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6456,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 6453,
											"end": 6455,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "DUP4"
										},
										{
											"begin": 6389,
											"end": 6456,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 6389,
											"end": 6456,
											"name": "JUMP"
										},
										{
											"begin": 6389,
											"end": 6456,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 6389,
											"end": 6456,
											"name": "JUMPDEST"
										},
										{
											"begin": 6382,
											"end": 6456,
											"name": "SWAP2"
										},
										{
											"begin": 6382,
											"end": 6456,
											"name": "POP"
										},
										{
											"begin": 6489,
											"end": 6523,
											"name": "PUSH",
											"value": "4E69753A3A64656C656761746542795369673A20696E76616C6964207369676E"
										},
										{
											"begin": 6485,
											"end": 6486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6483,
											"name": "DUP4"
										},
										{
											"begin": 6476,
											"end": 6487,
											"name": "ADD"
										},
										{
											"begin": 6469,
											"end": 6524,
											"name": "MSTORE"
										},
										{
											"begin": 6558,
											"end": 6565,
											"name": "PUSH",
											"value": "6174757265000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6553,
											"end": 6555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "DUP4"
										},
										{
											"begin": 6544,
											"end": 6556,
											"name": "ADD"
										},
										{
											"begin": 6537,
											"end": 6566,
											"name": "MSTORE"
										},
										{
											"begin": 6594,
											"end": 6596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP3"
										},
										{
											"begin": 6585,
											"end": 6597,
											"name": "ADD"
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "SWAP1"
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "POP"
										},
										{
											"begin": 6375,
											"end": 6603,
											"name": "SWAP2"
										},
										{
											"begin": 6375,
											"end": 6603,
											"name": "SWAP1"
										},
										{
											"begin": 6375,
											"end": 6603,
											"name": "POP"
										},
										{
											"begin": 6375,
											"end": 6603,
											"name": "JUMP"
										},
										{
											"begin": 6612,
											"end": 7089,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 6612,
											"end": 7089,
											"name": "JUMPDEST"
										},
										{
											"begin": 6612,
											"end": 7089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6875,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 6872,
											"end": 6874,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 6867,
											"end": 6870,
											"name": "DUP4"
										},
										{
											"begin": 6790,
											"end": 6875,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 6790,
											"end": 6875,
											"name": "JUMP"
										},
										{
											"begin": 6790,
											"end": 6875,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 6790,
											"end": 6875,
											"name": "JUMPDEST"
										},
										{
											"begin": 6783,
											"end": 6875,
											"name": "SWAP2"
										},
										{
											"begin": 6783,
											"end": 6875,
											"name": "POP"
										},
										{
											"begin": 6908,
											"end": 6942,
											"name": "PUSH",
											"value": "454950373132446F6D61696E28737472696E67206E616D652C75696E74323536"
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6899,
											"end": 6902,
											"name": "DUP4"
										},
										{
											"begin": 6895,
											"end": 6906,
											"name": "ADD"
										},
										{
											"begin": 6888,
											"end": 6943,
											"name": "MSTORE"
										},
										{
											"begin": 6977,
											"end": 7011,
											"name": "PUSH",
											"value": "20636861696E49642C6164647265737320766572696679696E67436F6E747261"
										},
										{
											"begin": 6972,
											"end": 6974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6967,
											"end": 6970,
											"name": "DUP4"
										},
										{
											"begin": 6963,
											"end": 6975,
											"name": "ADD"
										},
										{
											"begin": 6956,
											"end": 7012,
											"name": "MSTORE"
										},
										{
											"begin": 7046,
											"end": 7051,
											"name": "PUSH",
											"value": "6374290000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7041,
											"end": 7043,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7036,
											"end": 7039,
											"name": "DUP4"
										},
										{
											"begin": 7032,
											"end": 7044,
											"name": "ADD"
										},
										{
											"begin": 7025,
											"end": 7052,
											"name": "MSTORE"
										},
										{
											"begin": 7080,
											"end": 7082,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "DUP3"
										},
										{
											"begin": 7071,
											"end": 7083,
											"name": "ADD"
										},
										{
											"begin": 7064,
											"end": 7083,
											"name": "SWAP1"
										},
										{
											"begin": 7064,
											"end": 7083,
											"name": "POP"
										},
										{
											"begin": 6776,
											"end": 7089,
											"name": "SWAP2"
										},
										{
											"begin": 6776,
											"end": 7089,
											"name": "SWAP1"
										},
										{
											"begin": 6776,
											"end": 7089,
											"name": "POP"
										},
										{
											"begin": 6776,
											"end": 7089,
											"name": "JUMP"
										},
										{
											"begin": 7098,
											"end": 7472,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 7098,
											"end": 7472,
											"name": "JUMPDEST"
										},
										{
											"begin": 7098,
											"end": 7472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 7322,
											"end": 7324,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7317,
											"end": 7320,
											"name": "DUP4"
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "JUMP"
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "JUMPDEST"
										},
										{
											"begin": 7251,
											"end": 7325,
											"name": "SWAP2"
										},
										{
											"begin": 7251,
											"end": 7325,
											"name": "POP"
										},
										{
											"begin": 7358,
											"end": 7392,
											"name": "PUSH",
											"value": "4E69753A3A64656C656761746542795369673A207369676E6174757265206578"
										},
										{
											"begin": 7354,
											"end": 7355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "DUP4"
										},
										{
											"begin": 7345,
											"end": 7356,
											"name": "ADD"
										},
										{
											"begin": 7338,
											"end": 7393,
											"name": "MSTORE"
										},
										{
											"begin": 7427,
											"end": 7434,
											"name": "PUSH",
											"value": "7069726564000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7422,
											"end": 7424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7417,
											"end": 7420,
											"name": "DUP4"
										},
										{
											"begin": 7413,
											"end": 7425,
											"name": "ADD"
										},
										{
											"begin": 7406,
											"end": 7435,
											"name": "MSTORE"
										},
										{
											"begin": 7463,
											"end": 7465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7458,
											"end": 7461,
											"name": "DUP3"
										},
										{
											"begin": 7454,
											"end": 7466,
											"name": "ADD"
										},
										{
											"begin": 7447,
											"end": 7466,
											"name": "SWAP1"
										},
										{
											"begin": 7447,
											"end": 7466,
											"name": "POP"
										},
										{
											"begin": 7244,
											"end": 7472,
											"name": "SWAP2"
										},
										{
											"begin": 7244,
											"end": 7472,
											"name": "SWAP1"
										},
										{
											"begin": 7244,
											"end": 7472,
											"name": "POP"
										},
										{
											"begin": 7244,
											"end": 7472,
											"name": "JUMP"
										},
										{
											"begin": 7481,
											"end": 7851,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 7481,
											"end": 7851,
											"name": "JUMPDEST"
										},
										{
											"begin": 7481,
											"end": 7851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7708,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 7705,
											"end": 7707,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 7700,
											"end": 7703,
											"name": "DUP4"
										},
										{
											"begin": 7641,
											"end": 7708,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 7641,
											"end": 7708,
											"name": "JUMP"
										},
										{
											"begin": 7641,
											"end": 7708,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 7641,
											"end": 7708,
											"name": "JUMPDEST"
										},
										{
											"begin": 7634,
											"end": 7708,
											"name": "SWAP2"
										},
										{
											"begin": 7634,
											"end": 7708,
											"name": "POP"
										},
										{
											"begin": 7741,
											"end": 7775,
											"name": "PUSH",
											"value": "4E69753A3A64656C656761746542795369673A20696E76616C6964206E6F6E63"
										},
										{
											"begin": 7737,
											"end": 7738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7735,
											"name": "DUP4"
										},
										{
											"begin": 7728,
											"end": 7739,
											"name": "ADD"
										},
										{
											"begin": 7721,
											"end": 7776,
											"name": "MSTORE"
										},
										{
											"begin": 7810,
											"end": 7813,
											"name": "PUSH",
											"value": "6500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7805,
											"end": 7807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7800,
											"end": 7803,
											"name": "DUP4"
										},
										{
											"begin": 7796,
											"end": 7808,
											"name": "ADD"
										},
										{
											"begin": 7789,
											"end": 7814,
											"name": "MSTORE"
										},
										{
											"begin": 7842,
											"end": 7844,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7840,
											"name": "DUP3"
										},
										{
											"begin": 7833,
											"end": 7845,
											"name": "ADD"
										},
										{
											"begin": 7826,
											"end": 7845,
											"name": "SWAP1"
										},
										{
											"begin": 7826,
											"end": 7845,
											"name": "POP"
										},
										{
											"begin": 7627,
											"end": 7851,
											"name": "SWAP2"
										},
										{
											"begin": 7627,
											"end": 7851,
											"name": "SWAP1"
										},
										{
											"begin": 7627,
											"end": 7851,
											"name": "POP"
										},
										{
											"begin": 7627,
											"end": 7851,
											"name": "JUMP"
										},
										{
											"begin": 7860,
											"end": 8291,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 7860,
											"end": 8291,
											"name": "JUMPDEST"
										},
										{
											"begin": 7860,
											"end": 8291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8123,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 8120,
											"end": 8122,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 8115,
											"end": 8118,
											"name": "DUP4"
										},
										{
											"begin": 8038,
											"end": 8123,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8038,
											"end": 8123,
											"name": "JUMP"
										},
										{
											"begin": 8038,
											"end": 8123,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 8038,
											"end": 8123,
											"name": "JUMPDEST"
										},
										{
											"begin": 8031,
											"end": 8123,
											"name": "SWAP2"
										},
										{
											"begin": 8031,
											"end": 8123,
											"name": "POP"
										},
										{
											"begin": 8156,
											"end": 8190,
											"name": "PUSH",
											"value": "44656C65676174696F6E28616464726573732064656C6567617465652C75696E"
										},
										{
											"begin": 8152,
											"end": 8153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 8150,
											"name": "DUP4"
										},
										{
											"begin": 8143,
											"end": 8154,
											"name": "ADD"
										},
										{
											"begin": 8136,
											"end": 8191,
											"name": "MSTORE"
										},
										{
											"begin": 8225,
											"end": 8253,
											"name": "PUSH",
											"value": "74323536206E6F6E63652C75696E743235362065787069727929000000000000"
										},
										{
											"begin": 8220,
											"end": 8222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8215,
											"end": 8218,
											"name": "DUP4"
										},
										{
											"begin": 8211,
											"end": 8223,
											"name": "ADD"
										},
										{
											"begin": 8204,
											"end": 8254,
											"name": "MSTORE"
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP3"
										},
										{
											"begin": 8273,
											"end": 8285,
											"name": "ADD"
										},
										{
											"begin": 8266,
											"end": 8285,
											"name": "SWAP1"
										},
										{
											"begin": 8266,
											"end": 8285,
											"name": "POP"
										},
										{
											"begin": 8024,
											"end": 8291,
											"name": "SWAP2"
										},
										{
											"begin": 8024,
											"end": 8291,
											"name": "SWAP1"
										},
										{
											"begin": 8024,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8024,
											"end": 8291,
											"name": "JUMP"
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "JUMPDEST"
										},
										{
											"begin": 8382,
											"end": 8406,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 8400,
											"end": 8405,
											"name": "DUP2"
										},
										{
											"begin": 8382,
											"end": 8406,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 8382,
											"end": 8406,
											"name": "JUMP"
										},
										{
											"begin": 8382,
											"end": 8406,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 8382,
											"end": 8406,
											"name": "JUMPDEST"
										},
										{
											"begin": 8377,
											"end": 8380,
											"name": "DUP3"
										},
										{
											"begin": 8370,
											"end": 8407,
											"name": "MSTORE"
										},
										{
											"begin": 8364,
											"end": 8412,
											"name": "POP"
										},
										{
											"begin": 8364,
											"end": 8412,
											"name": "POP"
										},
										{
											"begin": 8364,
											"end": 8412,
											"name": "JUMP"
										},
										{
											"begin": 8419,
											"end": 8529,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 8419,
											"end": 8529,
											"name": "JUMPDEST"
										},
										{
											"begin": 8500,
											"end": 8523,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 8517,
											"end": 8522,
											"name": "DUP2"
										},
										{
											"begin": 8500,
											"end": 8523,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 8500,
											"end": 8523,
											"name": "JUMP"
										},
										{
											"begin": 8500,
											"end": 8523,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 8500,
											"end": 8523,
											"name": "JUMPDEST"
										},
										{
											"begin": 8495,
											"end": 8498,
											"name": "DUP3"
										},
										{
											"begin": 8488,
											"end": 8524,
											"name": "MSTORE"
										},
										{
											"begin": 8482,
											"end": 8529,
											"name": "POP"
										},
										{
											"begin": 8482,
											"end": 8529,
											"name": "POP"
										},
										{
											"begin": 8482,
											"end": 8529,
											"name": "JUMP"
										},
										{
											"begin": 8536,
											"end": 8643,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 8536,
											"end": 8643,
											"name": "JUMPDEST"
										},
										{
											"begin": 8615,
											"end": 8637,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 8631,
											"end": 8636,
											"name": "DUP2"
										},
										{
											"begin": 8615,
											"end": 8637,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 8615,
											"end": 8637,
											"name": "JUMP"
										},
										{
											"begin": 8615,
											"end": 8637,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 8615,
											"end": 8637,
											"name": "JUMPDEST"
										},
										{
											"begin": 8610,
											"end": 8613,
											"name": "DUP3"
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "MSTORE"
										},
										{
											"begin": 8597,
											"end": 8643,
											"name": "POP"
										},
										{
											"begin": 8597,
											"end": 8643,
											"name": "POP"
										},
										{
											"begin": 8597,
											"end": 8643,
											"name": "JUMP"
										},
										{
											"begin": 8650,
											"end": 8774,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 8650,
											"end": 8774,
											"name": "JUMPDEST"
										},
										{
											"begin": 8732,
											"end": 8768,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 8762,
											"end": 8767,
											"name": "DUP2"
										},
										{
											"begin": 8732,
											"end": 8768,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 8732,
											"end": 8768,
											"name": "JUMP"
										},
										{
											"begin": 8732,
											"end": 8768,
											"name": "tag",
											"value": "325"
										},
										{
											"begin": 8732,
											"end": 8768,
											"name": "JUMPDEST"
										},
										{
											"begin": 8727,
											"end": 8730,
											"name": "DUP3"
										},
										{
											"begin": 8720,
											"end": 8769,
											"name": "MSTORE"
										},
										{
											"begin": 8714,
											"end": 8774,
											"name": "POP"
										},
										{
											"begin": 8714,
											"end": 8774,
											"name": "POP"
										},
										{
											"begin": 8714,
											"end": 8774,
											"name": "JUMP"
										},
										{
											"begin": 8781,
											"end": 8891,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 8781,
											"end": 8891,
											"name": "JUMPDEST"
										},
										{
											"begin": 8862,
											"end": 8885,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 8879,
											"end": 8884,
											"name": "DUP2"
										},
										{
											"begin": 8862,
											"end": 8885,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 8862,
											"end": 8885,
											"name": "JUMP"
										},
										{
											"begin": 8862,
											"end": 8885,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 8862,
											"end": 8885,
											"name": "JUMPDEST"
										},
										{
											"begin": 8857,
											"end": 8860,
											"name": "DUP3"
										},
										{
											"begin": 8850,
											"end": 8886,
											"name": "MSTORE"
										},
										{
											"begin": 8844,
											"end": 8891,
											"name": "POP"
										},
										{
											"begin": 8844,
											"end": 8891,
											"name": "POP"
										},
										{
											"begin": 8844,
											"end": 8891,
											"name": "JUMP"
										},
										{
											"begin": 8898,
											"end": 9548,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 8898,
											"end": 9548,
											"name": "JUMPDEST"
										},
										{
											"begin": 8898,
											"end": 9548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9153,
											"end": 9301,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "DUP3"
										},
										{
											"begin": 9153,
											"end": 9301,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 9153,
											"end": 9301,
											"name": "JUMP"
										},
										{
											"begin": 9153,
											"end": 9301,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 9153,
											"end": 9301,
											"name": "JUMPDEST"
										},
										{
											"begin": 9146,
											"end": 9301,
											"name": "SWAP2"
										},
										{
											"begin": 9146,
											"end": 9301,
											"name": "POP"
										},
										{
											"begin": 9312,
											"end": 9387,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 9383,
											"end": 9386,
											"name": "DUP3"
										},
										{
											"begin": 9374,
											"end": 9380,
											"name": "DUP6"
										},
										{
											"begin": 9312,
											"end": 9387,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 9312,
											"end": 9387,
											"name": "JUMP"
										},
										{
											"begin": 9312,
											"end": 9387,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 9312,
											"end": 9387,
											"name": "JUMPDEST"
										},
										{
											"begin": 9409,
											"end": 9411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9404,
											"end": 9407,
											"name": "DUP3"
										},
										{
											"begin": 9400,
											"end": 9412,
											"name": "ADD"
										},
										{
											"begin": 9393,
											"end": 9412,
											"name": "SWAP2"
										},
										{
											"begin": 9393,
											"end": 9412,
											"name": "POP"
										},
										{
											"begin": 9423,
											"end": 9498,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 9494,
											"end": 9497,
											"name": "DUP3"
										},
										{
											"begin": 9485,
											"end": 9491,
											"name": "DUP5"
										},
										{
											"begin": 9423,
											"end": 9498,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 9423,
											"end": 9498,
											"name": "JUMP"
										},
										{
											"begin": 9423,
											"end": 9498,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 9423,
											"end": 9498,
											"name": "JUMPDEST"
										},
										{
											"begin": 9520,
											"end": 9522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9515,
											"end": 9518,
											"name": "DUP3"
										},
										{
											"begin": 9511,
											"end": 9523,
											"name": "ADD"
										},
										{
											"begin": 9504,
											"end": 9523,
											"name": "SWAP2"
										},
										{
											"begin": 9504,
											"end": 9523,
											"name": "POP"
										},
										{
											"begin": 9540,
											"end": 9543,
											"name": "DUP2"
										},
										{
											"begin": 9533,
											"end": 9543,
											"name": "SWAP1"
										},
										{
											"begin": 9533,
											"end": 9543,
											"name": "POP"
										},
										{
											"begin": 9134,
											"end": 9548,
											"name": "SWAP4"
										},
										{
											"begin": 9134,
											"end": 9548,
											"name": "SWAP3"
										},
										{
											"begin": 9134,
											"end": 9548,
											"name": "POP"
										},
										{
											"begin": 9134,
											"end": 9548,
											"name": "POP"
										},
										{
											"begin": 9134,
											"end": 9548,
											"name": "POP"
										},
										{
											"begin": 9134,
											"end": 9548,
											"name": "JUMP"
										},
										{
											"begin": 9555,
											"end": 9927,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 9555,
											"end": 9927,
											"name": "JUMPDEST"
										},
										{
											"begin": 9555,
											"end": 9927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9754,
											"end": 9902,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 9898,
											"end": 9901,
											"name": "DUP3"
										},
										{
											"begin": 9754,
											"end": 9902,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 9754,
											"end": 9902,
											"name": "JUMP"
										},
										{
											"begin": 9754,
											"end": 9902,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 9754,
											"end": 9902,
											"name": "JUMPDEST"
										},
										{
											"begin": 9747,
											"end": 9902,
											"name": "SWAP2"
										},
										{
											"begin": 9747,
											"end": 9902,
											"name": "POP"
										},
										{
											"begin": 9919,
											"end": 9922,
											"name": "DUP2"
										},
										{
											"begin": 9912,
											"end": 9922,
											"name": "SWAP1"
										},
										{
											"begin": 9912,
											"end": 9922,
											"name": "POP"
										},
										{
											"begin": 9735,
											"end": 9927,
											"name": "SWAP2"
										},
										{
											"begin": 9735,
											"end": 9927,
											"name": "SWAP1"
										},
										{
											"begin": 9735,
											"end": 9927,
											"name": "POP"
										},
										{
											"begin": 9735,
											"end": 9927,
											"name": "JUMP"
										},
										{
											"begin": 9934,
											"end": 10306,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 9934,
											"end": 10306,
											"name": "JUMPDEST"
										},
										{
											"begin": 9934,
											"end": 10306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10133,
											"end": 10281,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 10277,
											"end": 10280,
											"name": "DUP3"
										},
										{
											"begin": 10133,
											"end": 10281,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 10133,
											"end": 10281,
											"name": "JUMP"
										},
										{
											"begin": 10133,
											"end": 10281,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 10133,
											"end": 10281,
											"name": "JUMPDEST"
										},
										{
											"begin": 10126,
											"end": 10281,
											"name": "SWAP2"
										},
										{
											"begin": 10126,
											"end": 10281,
											"name": "POP"
										},
										{
											"begin": 10298,
											"end": 10301,
											"name": "DUP2"
										},
										{
											"begin": 10291,
											"end": 10301,
											"name": "SWAP1"
										},
										{
											"begin": 10291,
											"end": 10301,
											"name": "POP"
										},
										{
											"begin": 10114,
											"end": 10306,
											"name": "SWAP2"
										},
										{
											"begin": 10114,
											"end": 10306,
											"name": "SWAP1"
										},
										{
											"begin": 10114,
											"end": 10306,
											"name": "POP"
										},
										{
											"begin": 10114,
											"end": 10306,
											"name": "JUMP"
										},
										{
											"begin": 10313,
											"end": 10526,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 10313,
											"end": 10526,
											"name": "JUMPDEST"
										},
										{
											"begin": 10313,
											"end": 10526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP3"
										},
										{
											"begin": 10416,
											"end": 10434,
											"name": "ADD"
										},
										{
											"begin": 10408,
											"end": 10434,
											"name": "SWAP1"
										},
										{
											"begin": 10408,
											"end": 10434,
											"name": "POP"
										},
										{
											"begin": 10445,
											"end": 10516,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 10513,
											"end": 10514,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10502,
											"end": 10511,
											"name": "DUP4"
										},
										{
											"begin": 10498,
											"end": 10515,
											"name": "ADD"
										},
										{
											"begin": 10489,
											"end": 10495,
											"name": "DUP5"
										},
										{
											"begin": 10445,
											"end": 10516,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 10445,
											"end": 10516,
											"name": "JUMP"
										},
										{
											"begin": 10445,
											"end": 10516,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 10445,
											"end": 10516,
											"name": "JUMPDEST"
										},
										{
											"begin": 10402,
											"end": 10526,
											"name": "SWAP3"
										},
										{
											"begin": 10402,
											"end": 10526,
											"name": "SWAP2"
										},
										{
											"begin": 10402,
											"end": 10526,
											"name": "POP"
										},
										{
											"begin": 10402,
											"end": 10526,
											"name": "POP"
										},
										{
											"begin": 10402,
											"end": 10526,
											"name": "JUMP"
										},
										{
											"begin": 10533,
											"end": 10734,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 10533,
											"end": 10734,
											"name": "JUMPDEST"
										},
										{
											"begin": 10533,
											"end": 10734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10645,
											"end": 10647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10634,
											"end": 10643,
											"name": "DUP3"
										},
										{
											"begin": 10630,
											"end": 10648,
											"name": "ADD"
										},
										{
											"begin": 10622,
											"end": 10648,
											"name": "SWAP1"
										},
										{
											"begin": 10622,
											"end": 10648,
											"name": "POP"
										},
										{
											"begin": 10659,
											"end": 10724,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 10721,
											"end": 10722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10710,
											"end": 10719,
											"name": "DUP4"
										},
										{
											"begin": 10706,
											"end": 10723,
											"name": "ADD"
										},
										{
											"begin": 10697,
											"end": 10703,
											"name": "DUP5"
										},
										{
											"begin": 10659,
											"end": 10724,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 10659,
											"end": 10724,
											"name": "JUMP"
										},
										{
											"begin": 10659,
											"end": 10724,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 10659,
											"end": 10724,
											"name": "JUMPDEST"
										},
										{
											"begin": 10616,
											"end": 10734,
											"name": "SWAP3"
										},
										{
											"begin": 10616,
											"end": 10734,
											"name": "SWAP2"
										},
										{
											"begin": 10616,
											"end": 10734,
											"name": "POP"
										},
										{
											"begin": 10616,
											"end": 10734,
											"name": "POP"
										},
										{
											"begin": 10616,
											"end": 10734,
											"name": "JUMP"
										},
										{
											"begin": 10741,
											"end": 10954,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 10741,
											"end": 10954,
											"name": "JUMPDEST"
										},
										{
											"begin": 10741,
											"end": 10954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10859,
											"end": 10861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10848,
											"end": 10857,
											"name": "DUP3"
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "ADD"
										},
										{
											"begin": 10836,
											"end": 10862,
											"name": "SWAP1"
										},
										{
											"begin": 10836,
											"end": 10862,
											"name": "POP"
										},
										{
											"begin": 10873,
											"end": 10944,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 10941,
											"end": 10942,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10930,
											"end": 10939,
											"name": "DUP4"
										},
										{
											"begin": 10926,
											"end": 10943,
											"name": "ADD"
										},
										{
											"begin": 10917,
											"end": 10923,
											"name": "DUP5"
										},
										{
											"begin": 10873,
											"end": 10944,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 10873,
											"end": 10944,
											"name": "JUMP"
										},
										{
											"begin": 10873,
											"end": 10944,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 10873,
											"end": 10944,
											"name": "JUMPDEST"
										},
										{
											"begin": 10830,
											"end": 10954,
											"name": "SWAP3"
										},
										{
											"begin": 10830,
											"end": 10954,
											"name": "SWAP2"
										},
										{
											"begin": 10830,
											"end": 10954,
											"name": "POP"
										},
										{
											"begin": 10830,
											"end": 10954,
											"name": "POP"
										},
										{
											"begin": 10830,
											"end": 10954,
											"name": "JUMP"
										},
										{
											"begin": 10961,
											"end": 11508,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 10961,
											"end": 11508,
											"name": "JUMPDEST"
										},
										{
											"begin": 10961,
											"end": 11508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11163,
											"end": 11166,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11152,
											"end": 11161,
											"name": "DUP3"
										},
										{
											"begin": 11148,
											"end": 11167,
											"name": "ADD"
										},
										{
											"begin": 11140,
											"end": 11167,
											"name": "SWAP1"
										},
										{
											"begin": 11140,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11178,
											"end": 11249,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 11246,
											"end": 11247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11235,
											"end": 11244,
											"name": "DUP4"
										},
										{
											"begin": 11231,
											"end": 11248,
											"name": "ADD"
										},
										{
											"begin": 11222,
											"end": 11228,
											"name": "DUP8"
										},
										{
											"begin": 11178,
											"end": 11249,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 11178,
											"end": 11249,
											"name": "JUMP"
										},
										{
											"begin": 11178,
											"end": 11249,
											"name": "tag",
											"value": "338"
										},
										{
											"begin": 11178,
											"end": 11249,
											"name": "JUMPDEST"
										},
										{
											"begin": 11260,
											"end": 11332,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 11328,
											"end": 11330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11317,
											"end": 11326,
											"name": "DUP4"
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "ADD"
										},
										{
											"begin": 11304,
											"end": 11310,
											"name": "DUP7"
										},
										{
											"begin": 11260,
											"end": 11332,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 11260,
											"end": 11332,
											"name": "JUMP"
										},
										{
											"begin": 11260,
											"end": 11332,
											"name": "tag",
											"value": "339"
										},
										{
											"begin": 11260,
											"end": 11332,
											"name": "JUMPDEST"
										},
										{
											"begin": 11343,
											"end": 11415,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 11411,
											"end": 11413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11400,
											"end": 11409,
											"name": "DUP4"
										},
										{
											"begin": 11396,
											"end": 11414,
											"name": "ADD"
										},
										{
											"begin": 11387,
											"end": 11393,
											"name": "DUP6"
										},
										{
											"begin": 11343,
											"end": 11415,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 11343,
											"end": 11415,
											"name": "JUMP"
										},
										{
											"begin": 11343,
											"end": 11415,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 11343,
											"end": 11415,
											"name": "JUMPDEST"
										},
										{
											"begin": 11426,
											"end": 11498,
											"name": "PUSH [tag]",
											"value": "341"
										},
										{
											"begin": 11494,
											"end": 11496,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11483,
											"end": 11492,
											"name": "DUP4"
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "ADD"
										},
										{
											"begin": 11470,
											"end": 11476,
											"name": "DUP5"
										},
										{
											"begin": 11426,
											"end": 11498,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 11426,
											"end": 11498,
											"name": "JUMP"
										},
										{
											"begin": 11426,
											"end": 11498,
											"name": "tag",
											"value": "341"
										},
										{
											"begin": 11426,
											"end": 11498,
											"name": "JUMPDEST"
										},
										{
											"begin": 11134,
											"end": 11508,
											"name": "SWAP6"
										},
										{
											"begin": 11134,
											"end": 11508,
											"name": "SWAP5"
										},
										{
											"begin": 11134,
											"end": 11508,
											"name": "POP"
										},
										{
											"begin": 11134,
											"end": 11508,
											"name": "POP"
										},
										{
											"begin": 11134,
											"end": 11508,
											"name": "POP"
										},
										{
											"begin": 11134,
											"end": 11508,
											"name": "POP"
										},
										{
											"begin": 11134,
											"end": 11508,
											"name": "POP"
										},
										{
											"begin": 11134,
											"end": 11508,
											"name": "JUMP"
										},
										{
											"begin": 11515,
											"end": 12062,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 11515,
											"end": 12062,
											"name": "JUMPDEST"
										},
										{
											"begin": 11515,
											"end": 12062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11717,
											"end": 11720,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11706,
											"end": 11715,
											"name": "DUP3"
										},
										{
											"begin": 11702,
											"end": 11721,
											"name": "ADD"
										},
										{
											"begin": 11694,
											"end": 11721,
											"name": "SWAP1"
										},
										{
											"begin": 11694,
											"end": 11721,
											"name": "POP"
										},
										{
											"begin": 11732,
											"end": 11803,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 11800,
											"end": 11801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11789,
											"end": 11798,
											"name": "DUP4"
										},
										{
											"begin": 11785,
											"end": 11802,
											"name": "ADD"
										},
										{
											"begin": 11776,
											"end": 11782,
											"name": "DUP8"
										},
										{
											"begin": 11732,
											"end": 11803,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 11732,
											"end": 11803,
											"name": "JUMP"
										},
										{
											"begin": 11732,
											"end": 11803,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 11732,
											"end": 11803,
											"name": "JUMPDEST"
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 11882,
											"end": 11884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "DUP4"
										},
										{
											"begin": 11867,
											"end": 11885,
											"name": "ADD"
										},
										{
											"begin": 11858,
											"end": 11864,
											"name": "DUP7"
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "JUMP"
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "tag",
											"value": "343"
										},
										{
											"begin": 11814,
											"end": 11886,
											"name": "JUMPDEST"
										},
										{
											"begin": 11897,
											"end": 11969,
											"name": "PUSH [tag]",
											"value": "344"
										},
										{
											"begin": 11965,
											"end": 11967,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11954,
											"end": 11963,
											"name": "DUP4"
										},
										{
											"begin": 11950,
											"end": 11968,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11947,
											"name": "DUP6"
										},
										{
											"begin": 11897,
											"end": 11969,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 11897,
											"end": 11969,
											"name": "JUMP"
										},
										{
											"begin": 11897,
											"end": 11969,
											"name": "tag",
											"value": "344"
										},
										{
											"begin": 11897,
											"end": 11969,
											"name": "JUMPDEST"
										},
										{
											"begin": 11980,
											"end": 12052,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 12048,
											"end": 12050,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "DUP4"
										},
										{
											"begin": 12033,
											"end": 12051,
											"name": "ADD"
										},
										{
											"begin": 12024,
											"end": 12030,
											"name": "DUP5"
										},
										{
											"begin": 11980,
											"end": 12052,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 11980,
											"end": 12052,
											"name": "JUMP"
										},
										{
											"begin": 11980,
											"end": 12052,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 11980,
											"end": 12052,
											"name": "JUMPDEST"
										},
										{
											"begin": 11688,
											"end": 12062,
											"name": "SWAP6"
										},
										{
											"begin": 11688,
											"end": 12062,
											"name": "SWAP5"
										},
										{
											"begin": 11688,
											"end": 12062,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 12062,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 12062,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 12062,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 12062,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 12062,
											"name": "JUMP"
										},
										{
											"begin": 12069,
											"end": 12608,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 12069,
											"end": 12608,
											"name": "JUMPDEST"
										},
										{
											"begin": 12069,
											"end": 12608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12270,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 12256,
											"end": 12265,
											"name": "DUP3"
										},
										{
											"begin": 12252,
											"end": 12271,
											"name": "ADD"
										},
										{
											"begin": 12244,
											"end": 12271,
											"name": "SWAP1"
										},
										{
											"begin": 12244,
											"end": 12271,
											"name": "POP"
										},
										{
											"begin": 12282,
											"end": 12353,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 12350,
											"end": 12351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12339,
											"end": 12348,
											"name": "DUP4"
										},
										{
											"begin": 12335,
											"end": 12352,
											"name": "ADD"
										},
										{
											"begin": 12326,
											"end": 12332,
											"name": "DUP8"
										},
										{
											"begin": 12282,
											"end": 12353,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 12282,
											"end": 12353,
											"name": "JUMP"
										},
										{
											"begin": 12282,
											"end": 12353,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 12282,
											"end": 12353,
											"name": "JUMPDEST"
										},
										{
											"begin": 12364,
											"end": 12432,
											"name": "PUSH [tag]",
											"value": "347"
										},
										{
											"begin": 12428,
											"end": 12430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12417,
											"end": 12426,
											"name": "DUP4"
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12404,
											"end": 12410,
											"name": "DUP7"
										},
										{
											"begin": 12364,
											"end": 12432,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 12364,
											"end": 12432,
											"name": "JUMP"
										},
										{
											"begin": 12364,
											"end": 12432,
											"name": "tag",
											"value": "347"
										},
										{
											"begin": 12364,
											"end": 12432,
											"name": "JUMPDEST"
										},
										{
											"begin": 12443,
											"end": 12515,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 12511,
											"end": 12513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "DUP4"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "ADD"
										},
										{
											"begin": 12487,
											"end": 12493,
											"name": "DUP6"
										},
										{
											"begin": 12443,
											"end": 12515,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 12443,
											"end": 12515,
											"name": "JUMP"
										},
										{
											"begin": 12443,
											"end": 12515,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 12443,
											"end": 12515,
											"name": "JUMPDEST"
										},
										{
											"begin": 12526,
											"end": 12598,
											"name": "PUSH [tag]",
											"value": "349"
										},
										{
											"begin": 12594,
											"end": 12596,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12583,
											"end": 12592,
											"name": "DUP4"
										},
										{
											"begin": 12579,
											"end": 12597,
											"name": "ADD"
										},
										{
											"begin": 12570,
											"end": 12576,
											"name": "DUP5"
										},
										{
											"begin": 12526,
											"end": 12598,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 12526,
											"end": 12598,
											"name": "JUMP"
										},
										{
											"begin": 12526,
											"end": 12598,
											"name": "tag",
											"value": "349"
										},
										{
											"begin": 12526,
											"end": 12598,
											"name": "JUMPDEST"
										},
										{
											"begin": 12238,
											"end": 12608,
											"name": "SWAP6"
										},
										{
											"begin": 12238,
											"end": 12608,
											"name": "SWAP5"
										},
										{
											"begin": 12238,
											"end": 12608,
											"name": "POP"
										},
										{
											"begin": 12238,
											"end": 12608,
											"name": "POP"
										},
										{
											"begin": 12238,
											"end": 12608,
											"name": "POP"
										},
										{
											"begin": 12238,
											"end": 12608,
											"name": "POP"
										},
										{
											"begin": 12238,
											"end": 12608,
											"name": "POP"
										},
										{
											"begin": 12238,
											"end": 12608,
											"name": "JUMP"
										},
										{
											"begin": 12615,
											"end": 12908,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 12615,
											"end": 12908,
											"name": "JUMPDEST"
										},
										{
											"begin": 12615,
											"end": 12908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12738,
											"end": 12747,
											"name": "DUP3"
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "ADD"
										},
										{
											"begin": 12726,
											"end": 12752,
											"name": "SWAP1"
										},
										{
											"begin": 12726,
											"end": 12752,
											"name": "POP"
										},
										{
											"begin": 12799,
											"end": 12808,
											"name": "DUP2"
										},
										{
											"begin": 12793,
											"end": 12797,
											"name": "DUP2"
										},
										{
											"begin": 12789,
											"end": 12809,
											"name": "SUB"
										},
										{
											"begin": 12785,
											"end": 12786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12774,
											"end": 12783,
											"name": "DUP4"
										},
										{
											"begin": 12770,
											"end": 12787,
											"name": "ADD"
										},
										{
											"begin": 12763,
											"end": 12810,
											"name": "MSTORE"
										},
										{
											"begin": 12824,
											"end": 12898,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 12893,
											"end": 12897,
											"name": "DUP2"
										},
										{
											"begin": 12884,
											"end": 12890,
											"name": "DUP5"
										},
										{
											"begin": 12824,
											"end": 12898,
											"name": "PUSH [tag]",
											"value": "290"
										},
										{
											"begin": 12824,
											"end": 12898,
											"name": "JUMP"
										},
										{
											"begin": 12824,
											"end": 12898,
											"name": "tag",
											"value": "350"
										},
										{
											"begin": 12824,
											"end": 12898,
											"name": "JUMPDEST"
										},
										{
											"begin": 12816,
											"end": 12898,
											"name": "SWAP1"
										},
										{
											"begin": 12816,
											"end": 12898,
											"name": "POP"
										},
										{
											"begin": 12720,
											"end": 12908,
											"name": "SWAP3"
										},
										{
											"begin": 12720,
											"end": 12908,
											"name": "SWAP2"
										},
										{
											"begin": 12720,
											"end": 12908,
											"name": "POP"
										},
										{
											"begin": 12720,
											"end": 12908,
											"name": "POP"
										},
										{
											"begin": 12720,
											"end": 12908,
											"name": "JUMP"
										},
										{
											"begin": 12915,
											"end": 13216,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 12915,
											"end": 13216,
											"name": "JUMPDEST"
										},
										{
											"begin": 12915,
											"end": 13216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13053,
											"end": 13055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13042,
											"end": 13051,
											"name": "DUP3"
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "ADD"
										},
										{
											"begin": 13030,
											"end": 13056,
											"name": "SWAP1"
										},
										{
											"begin": 13030,
											"end": 13056,
											"name": "POP"
										},
										{
											"begin": 13103,
											"end": 13112,
											"name": "DUP2"
										},
										{
											"begin": 13097,
											"end": 13101,
											"name": "DUP2"
										},
										{
											"begin": 13093,
											"end": 13113,
											"name": "SUB"
										},
										{
											"begin": 13089,
											"end": 13090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13078,
											"end": 13087,
											"name": "DUP4"
										},
										{
											"begin": 13074,
											"end": 13091,
											"name": "ADD"
										},
										{
											"begin": 13067,
											"end": 13114,
											"name": "MSTORE"
										},
										{
											"begin": 13128,
											"end": 13206,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 13201,
											"end": 13205,
											"name": "DUP2"
										},
										{
											"begin": 13192,
											"end": 13198,
											"name": "DUP5"
										},
										{
											"begin": 13128,
											"end": 13206,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 13128,
											"end": 13206,
											"name": "JUMP"
										},
										{
											"begin": 13128,
											"end": 13206,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 13128,
											"end": 13206,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13206,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13206,
											"name": "POP"
										},
										{
											"begin": 13024,
											"end": 13216,
											"name": "SWAP3"
										},
										{
											"begin": 13024,
											"end": 13216,
											"name": "SWAP2"
										},
										{
											"begin": 13024,
											"end": 13216,
											"name": "POP"
										},
										{
											"begin": 13024,
											"end": 13216,
											"name": "POP"
										},
										{
											"begin": 13024,
											"end": 13216,
											"name": "JUMP"
										},
										{
											"begin": 13223,
											"end": 13630,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 13223,
											"end": 13630,
											"name": "JUMPDEST"
										},
										{
											"begin": 13223,
											"end": 13630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13414,
											"end": 13416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13403,
											"end": 13412,
											"name": "DUP3"
										},
										{
											"begin": 13399,
											"end": 13417,
											"name": "ADD"
										},
										{
											"begin": 13391,
											"end": 13417,
											"name": "SWAP1"
										},
										{
											"begin": 13391,
											"end": 13417,
											"name": "POP"
										},
										{
											"begin": 13464,
											"end": 13473,
											"name": "DUP2"
										},
										{
											"begin": 13458,
											"end": 13462,
											"name": "DUP2"
										},
										{
											"begin": 13454,
											"end": 13474,
											"name": "SUB"
										},
										{
											"begin": 13450,
											"end": 13451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13439,
											"end": 13448,
											"name": "DUP4"
										},
										{
											"begin": 13435,
											"end": 13452,
											"name": "ADD"
										},
										{
											"begin": 13428,
											"end": 13475,
											"name": "MSTORE"
										},
										{
											"begin": 13489,
											"end": 13620,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 13615,
											"end": 13619,
											"name": "DUP2"
										},
										{
											"begin": 13489,
											"end": 13620,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 13489,
											"end": 13620,
											"name": "JUMP"
										},
										{
											"begin": 13489,
											"end": 13620,
											"name": "tag",
											"value": "352"
										},
										{
											"begin": 13489,
											"end": 13620,
											"name": "JUMPDEST"
										},
										{
											"begin": 13481,
											"end": 13620,
											"name": "SWAP1"
										},
										{
											"begin": 13481,
											"end": 13620,
											"name": "POP"
										},
										{
											"begin": 13385,
											"end": 13630,
											"name": "SWAP2"
										},
										{
											"begin": 13385,
											"end": 13630,
											"name": "SWAP1"
										},
										{
											"begin": 13385,
											"end": 13630,
											"name": "POP"
										},
										{
											"begin": 13385,
											"end": 13630,
											"name": "JUMP"
										},
										{
											"begin": 13637,
											"end": 14044,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 13637,
											"end": 14044,
											"name": "JUMPDEST"
										},
										{
											"begin": 13637,
											"end": 14044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13828,
											"end": 13830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13817,
											"end": 13826,
											"name": "DUP3"
										},
										{
											"begin": 13813,
											"end": 13831,
											"name": "ADD"
										},
										{
											"begin": 13805,
											"end": 13831,
											"name": "SWAP1"
										},
										{
											"begin": 13805,
											"end": 13831,
											"name": "POP"
										},
										{
											"begin": 13878,
											"end": 13887,
											"name": "DUP2"
										},
										{
											"begin": 13872,
											"end": 13876,
											"name": "DUP2"
										},
										{
											"begin": 13868,
											"end": 13888,
											"name": "SUB"
										},
										{
											"begin": 13864,
											"end": 13865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13853,
											"end": 13862,
											"name": "DUP4"
										},
										{
											"begin": 13849,
											"end": 13866,
											"name": "ADD"
										},
										{
											"begin": 13842,
											"end": 13889,
											"name": "MSTORE"
										},
										{
											"begin": 13903,
											"end": 14034,
											"name": "PUSH [tag]",
											"value": "353"
										},
										{
											"begin": 14029,
											"end": 14033,
											"name": "DUP2"
										},
										{
											"begin": 13903,
											"end": 14034,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 13903,
											"end": 14034,
											"name": "JUMP"
										},
										{
											"begin": 13903,
											"end": 14034,
											"name": "tag",
											"value": "353"
										},
										{
											"begin": 13903,
											"end": 14034,
											"name": "JUMPDEST"
										},
										{
											"begin": 13895,
											"end": 14034,
											"name": "SWAP1"
										},
										{
											"begin": 13895,
											"end": 14034,
											"name": "POP"
										},
										{
											"begin": 13799,
											"end": 14044,
											"name": "SWAP2"
										},
										{
											"begin": 13799,
											"end": 14044,
											"name": "SWAP1"
										},
										{
											"begin": 13799,
											"end": 14044,
											"name": "POP"
										},
										{
											"begin": 13799,
											"end": 14044,
											"name": "JUMP"
										},
										{
											"begin": 14051,
											"end": 14458,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 14051,
											"end": 14458,
											"name": "JUMPDEST"
										},
										{
											"begin": 14051,
											"end": 14458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14242,
											"end": 14244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14231,
											"end": 14240,
											"name": "DUP3"
										},
										{
											"begin": 14227,
											"end": 14245,
											"name": "ADD"
										},
										{
											"begin": 14219,
											"end": 14245,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14245,
											"name": "POP"
										},
										{
											"begin": 14292,
											"end": 14301,
											"name": "DUP2"
										},
										{
											"begin": 14286,
											"end": 14290,
											"name": "DUP2"
										},
										{
											"begin": 14282,
											"end": 14302,
											"name": "SUB"
										},
										{
											"begin": 14278,
											"end": 14279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14267,
											"end": 14276,
											"name": "DUP4"
										},
										{
											"begin": 14263,
											"end": 14280,
											"name": "ADD"
										},
										{
											"begin": 14256,
											"end": 14303,
											"name": "MSTORE"
										},
										{
											"begin": 14317,
											"end": 14448,
											"name": "PUSH [tag]",
											"value": "354"
										},
										{
											"begin": 14443,
											"end": 14447,
											"name": "DUP2"
										},
										{
											"begin": 14317,
											"end": 14448,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 14317,
											"end": 14448,
											"name": "JUMP"
										},
										{
											"begin": 14317,
											"end": 14448,
											"name": "tag",
											"value": "354"
										},
										{
											"begin": 14317,
											"end": 14448,
											"name": "JUMPDEST"
										},
										{
											"begin": 14309,
											"end": 14448,
											"name": "SWAP1"
										},
										{
											"begin": 14309,
											"end": 14448,
											"name": "POP"
										},
										{
											"begin": 14213,
											"end": 14458,
											"name": "SWAP2"
										},
										{
											"begin": 14213,
											"end": 14458,
											"name": "SWAP1"
										},
										{
											"begin": 14213,
											"end": 14458,
											"name": "POP"
										},
										{
											"begin": 14213,
											"end": 14458,
											"name": "JUMP"
										},
										{
											"begin": 14465,
											"end": 14872,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 14465,
											"end": 14872,
											"name": "JUMPDEST"
										},
										{
											"begin": 14465,
											"end": 14872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14656,
											"end": 14658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14645,
											"end": 14654,
											"name": "DUP3"
										},
										{
											"begin": 14641,
											"end": 14659,
											"name": "ADD"
										},
										{
											"begin": 14633,
											"end": 14659,
											"name": "SWAP1"
										},
										{
											"begin": 14633,
											"end": 14659,
											"name": "POP"
										},
										{
											"begin": 14706,
											"end": 14715,
											"name": "DUP2"
										},
										{
											"begin": 14700,
											"end": 14704,
											"name": "DUP2"
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "SUB"
										},
										{
											"begin": 14692,
											"end": 14693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14681,
											"end": 14690,
											"name": "DUP4"
										},
										{
											"begin": 14677,
											"end": 14694,
											"name": "ADD"
										},
										{
											"begin": 14670,
											"end": 14717,
											"name": "MSTORE"
										},
										{
											"begin": 14731,
											"end": 14862,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 14857,
											"end": 14861,
											"name": "DUP2"
										},
										{
											"begin": 14731,
											"end": 14862,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 14731,
											"end": 14862,
											"name": "JUMP"
										},
										{
											"begin": 14731,
											"end": 14862,
											"name": "tag",
											"value": "355"
										},
										{
											"begin": 14731,
											"end": 14862,
											"name": "JUMPDEST"
										},
										{
											"begin": 14723,
											"end": 14862,
											"name": "SWAP1"
										},
										{
											"begin": 14723,
											"end": 14862,
											"name": "POP"
										},
										{
											"begin": 14627,
											"end": 14872,
											"name": "SWAP2"
										},
										{
											"begin": 14627,
											"end": 14872,
											"name": "SWAP1"
										},
										{
											"begin": 14627,
											"end": 14872,
											"name": "POP"
										},
										{
											"begin": 14627,
											"end": 14872,
											"name": "JUMP"
										},
										{
											"begin": 14879,
											"end": 15286,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 14879,
											"end": 15286,
											"name": "JUMPDEST"
										},
										{
											"begin": 14879,
											"end": 15286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15070,
											"end": 15072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15059,
											"end": 15068,
											"name": "DUP3"
										},
										{
											"begin": 15055,
											"end": 15073,
											"name": "ADD"
										},
										{
											"begin": 15047,
											"end": 15073,
											"name": "SWAP1"
										},
										{
											"begin": 15047,
											"end": 15073,
											"name": "POP"
										},
										{
											"begin": 15120,
											"end": 15129,
											"name": "DUP2"
										},
										{
											"begin": 15114,
											"end": 15118,
											"name": "DUP2"
										},
										{
											"begin": 15110,
											"end": 15130,
											"name": "SUB"
										},
										{
											"begin": 15106,
											"end": 15107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15095,
											"end": 15104,
											"name": "DUP4"
										},
										{
											"begin": 15091,
											"end": 15108,
											"name": "ADD"
										},
										{
											"begin": 15084,
											"end": 15131,
											"name": "MSTORE"
										},
										{
											"begin": 15145,
											"end": 15276,
											"name": "PUSH [tag]",
											"value": "356"
										},
										{
											"begin": 15271,
											"end": 15275,
											"name": "DUP2"
										},
										{
											"begin": 15145,
											"end": 15276,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 15145,
											"end": 15276,
											"name": "JUMP"
										},
										{
											"begin": 15145,
											"end": 15276,
											"name": "tag",
											"value": "356"
										},
										{
											"begin": 15145,
											"end": 15276,
											"name": "JUMPDEST"
										},
										{
											"begin": 15137,
											"end": 15276,
											"name": "SWAP1"
										},
										{
											"begin": 15137,
											"end": 15276,
											"name": "POP"
										},
										{
											"begin": 15041,
											"end": 15286,
											"name": "SWAP2"
										},
										{
											"begin": 15041,
											"end": 15286,
											"name": "SWAP1"
										},
										{
											"begin": 15041,
											"end": 15286,
											"name": "POP"
										},
										{
											"begin": 15041,
											"end": 15286,
											"name": "JUMP"
										},
										{
											"begin": 15293,
											"end": 15700,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 15293,
											"end": 15700,
											"name": "JUMPDEST"
										},
										{
											"begin": 15293,
											"end": 15700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15484,
											"end": 15486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15473,
											"end": 15482,
											"name": "DUP3"
										},
										{
											"begin": 15469,
											"end": 15487,
											"name": "ADD"
										},
										{
											"begin": 15461,
											"end": 15487,
											"name": "SWAP1"
										},
										{
											"begin": 15461,
											"end": 15487,
											"name": "POP"
										},
										{
											"begin": 15534,
											"end": 15543,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15532,
											"name": "DUP2"
										},
										{
											"begin": 15524,
											"end": 15544,
											"name": "SUB"
										},
										{
											"begin": 15520,
											"end": 15521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15509,
											"end": 15518,
											"name": "DUP4"
										},
										{
											"begin": 15505,
											"end": 15522,
											"name": "ADD"
										},
										{
											"begin": 15498,
											"end": 15545,
											"name": "MSTORE"
										},
										{
											"begin": 15559,
											"end": 15690,
											"name": "PUSH [tag]",
											"value": "357"
										},
										{
											"begin": 15685,
											"end": 15689,
											"name": "DUP2"
										},
										{
											"begin": 15559,
											"end": 15690,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 15559,
											"end": 15690,
											"name": "JUMP"
										},
										{
											"begin": 15559,
											"end": 15690,
											"name": "tag",
											"value": "357"
										},
										{
											"begin": 15559,
											"end": 15690,
											"name": "JUMPDEST"
										},
										{
											"begin": 15551,
											"end": 15690,
											"name": "SWAP1"
										},
										{
											"begin": 15551,
											"end": 15690,
											"name": "POP"
										},
										{
											"begin": 15455,
											"end": 15700,
											"name": "SWAP2"
										},
										{
											"begin": 15455,
											"end": 15700,
											"name": "SWAP1"
										},
										{
											"begin": 15455,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15455,
											"end": 15700,
											"name": "JUMP"
										},
										{
											"begin": 15707,
											"end": 15920,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 15707,
											"end": 15920,
											"name": "JUMPDEST"
										},
										{
											"begin": 15707,
											"end": 15920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15825,
											"end": 15827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15814,
											"end": 15823,
											"name": "DUP3"
										},
										{
											"begin": 15810,
											"end": 15828,
											"name": "ADD"
										},
										{
											"begin": 15802,
											"end": 15828,
											"name": "SWAP1"
										},
										{
											"begin": 15802,
											"end": 15828,
											"name": "POP"
										},
										{
											"begin": 15839,
											"end": 15910,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 15907,
											"end": 15908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15896,
											"end": 15905,
											"name": "DUP4"
										},
										{
											"begin": 15892,
											"end": 15909,
											"name": "ADD"
										},
										{
											"begin": 15883,
											"end": 15889,
											"name": "DUP5"
										},
										{
											"begin": 15839,
											"end": 15910,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 15839,
											"end": 15910,
											"name": "JUMP"
										},
										{
											"begin": 15839,
											"end": 15910,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 15839,
											"end": 15910,
											"name": "JUMPDEST"
										},
										{
											"begin": 15796,
											"end": 15920,
											"name": "SWAP3"
										},
										{
											"begin": 15796,
											"end": 15920,
											"name": "SWAP2"
										},
										{
											"begin": 15796,
											"end": 15920,
											"name": "POP"
										},
										{
											"begin": 15796,
											"end": 15920,
											"name": "POP"
										},
										{
											"begin": 15796,
											"end": 15920,
											"name": "JUMP"
										},
										{
											"begin": 15927,
											"end": 16136,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 15927,
											"end": 16136,
											"name": "JUMPDEST"
										},
										{
											"begin": 15927,
											"end": 16136,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16043,
											"end": 16045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16032,
											"end": 16041,
											"name": "DUP3"
										},
										{
											"begin": 16028,
											"end": 16046,
											"name": "ADD"
										},
										{
											"begin": 16020,
											"end": 16046,
											"name": "SWAP1"
										},
										{
											"begin": 16020,
											"end": 16046,
											"name": "POP"
										},
										{
											"begin": 16057,
											"end": 16126,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 16123,
											"end": 16124,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16112,
											"end": 16121,
											"name": "DUP4"
										},
										{
											"begin": 16108,
											"end": 16125,
											"name": "ADD"
										},
										{
											"begin": 16099,
											"end": 16105,
											"name": "DUP5"
										},
										{
											"begin": 16057,
											"end": 16126,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 16057,
											"end": 16126,
											"name": "JUMP"
										},
										{
											"begin": 16057,
											"end": 16126,
											"name": "tag",
											"value": "359"
										},
										{
											"begin": 16057,
											"end": 16126,
											"name": "JUMPDEST"
										},
										{
											"begin": 16014,
											"end": 16136,
											"name": "SWAP3"
										},
										{
											"begin": 16014,
											"end": 16136,
											"name": "SWAP2"
										},
										{
											"begin": 16014,
											"end": 16136,
											"name": "POP"
										},
										{
											"begin": 16014,
											"end": 16136,
											"name": "POP"
										},
										{
											"begin": 16014,
											"end": 16136,
											"name": "JUMP"
										},
										{
											"begin": 16143,
											"end": 16459,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 16143,
											"end": 16459,
											"name": "JUMPDEST"
										},
										{
											"begin": 16143,
											"end": 16459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16285,
											"end": 16287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16274,
											"end": 16283,
											"name": "DUP3"
										},
										{
											"begin": 16270,
											"end": 16288,
											"name": "ADD"
										},
										{
											"begin": 16262,
											"end": 16288,
											"name": "SWAP1"
										},
										{
											"begin": 16262,
											"end": 16288,
											"name": "POP"
										},
										{
											"begin": 16299,
											"end": 16368,
											"name": "PUSH [tag]",
											"value": "360"
										},
										{
											"begin": 16365,
											"end": 16366,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16354,
											"end": 16363,
											"name": "DUP4"
										},
										{
											"begin": 16350,
											"end": 16367,
											"name": "ADD"
										},
										{
											"begin": 16341,
											"end": 16347,
											"name": "DUP6"
										},
										{
											"begin": 16299,
											"end": 16368,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 16299,
											"end": 16368,
											"name": "JUMP"
										},
										{
											"begin": 16299,
											"end": 16368,
											"name": "tag",
											"value": "360"
										},
										{
											"begin": 16299,
											"end": 16368,
											"name": "JUMPDEST"
										},
										{
											"begin": 16379,
											"end": 16449,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 16445,
											"end": 16447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16434,
											"end": 16443,
											"name": "DUP4"
										},
										{
											"begin": 16430,
											"end": 16448,
											"name": "ADD"
										},
										{
											"begin": 16421,
											"end": 16427,
											"name": "DUP5"
										},
										{
											"begin": 16379,
											"end": 16449,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 16379,
											"end": 16449,
											"name": "JUMP"
										},
										{
											"begin": 16379,
											"end": 16449,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 16379,
											"end": 16449,
											"name": "JUMPDEST"
										},
										{
											"begin": 16256,
											"end": 16459,
											"name": "SWAP4"
										},
										{
											"begin": 16256,
											"end": 16459,
											"name": "SWAP3"
										},
										{
											"begin": 16256,
											"end": 16459,
											"name": "POP"
										},
										{
											"begin": 16256,
											"end": 16459,
											"name": "POP"
										},
										{
											"begin": 16256,
											"end": 16459,
											"name": "POP"
										},
										{
											"begin": 16256,
											"end": 16459,
											"name": "JUMP"
										},
										{
											"begin": 16466,
											"end": 16671,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 16466,
											"end": 16671,
											"name": "JUMPDEST"
										},
										{
											"begin": 16466,
											"end": 16671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16580,
											"end": 16582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16569,
											"end": 16578,
											"name": "DUP3"
										},
										{
											"begin": 16565,
											"end": 16583,
											"name": "ADD"
										},
										{
											"begin": 16557,
											"end": 16583,
											"name": "SWAP1"
										},
										{
											"begin": 16557,
											"end": 16583,
											"name": "POP"
										},
										{
											"begin": 16594,
											"end": 16661,
											"name": "PUSH [tag]",
											"value": "362"
										},
										{
											"begin": 16658,
											"end": 16659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16656,
											"name": "DUP4"
										},
										{
											"begin": 16643,
											"end": 16660,
											"name": "ADD"
										},
										{
											"begin": 16634,
											"end": 16640,
											"name": "DUP5"
										},
										{
											"begin": 16594,
											"end": 16661,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 16594,
											"end": 16661,
											"name": "JUMP"
										},
										{
											"begin": 16594,
											"end": 16661,
											"name": "tag",
											"value": "362"
										},
										{
											"begin": 16594,
											"end": 16661,
											"name": "JUMPDEST"
										},
										{
											"begin": 16551,
											"end": 16671,
											"name": "SWAP3"
										},
										{
											"begin": 16551,
											"end": 16671,
											"name": "SWAP2"
										},
										{
											"begin": 16551,
											"end": 16671,
											"name": "POP"
										},
										{
											"begin": 16551,
											"end": 16671,
											"name": "POP"
										},
										{
											"begin": 16551,
											"end": 16671,
											"name": "JUMP"
										},
										{
											"begin": 16678,
											"end": 16889,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 16678,
											"end": 16889,
											"name": "JUMPDEST"
										},
										{
											"begin": 16678,
											"end": 16889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16795,
											"end": 16797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16784,
											"end": 16793,
											"name": "DUP3"
										},
										{
											"begin": 16780,
											"end": 16798,
											"name": "ADD"
										},
										{
											"begin": 16772,
											"end": 16798,
											"name": "SWAP1"
										},
										{
											"begin": 16772,
											"end": 16798,
											"name": "POP"
										},
										{
											"begin": 16809,
											"end": 16879,
											"name": "PUSH [tag]",
											"value": "363"
										},
										{
											"begin": 16876,
											"end": 16877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16865,
											"end": 16874,
											"name": "DUP4"
										},
										{
											"begin": 16861,
											"end": 16878,
											"name": "ADD"
										},
										{
											"begin": 16852,
											"end": 16858,
											"name": "DUP5"
										},
										{
											"begin": 16809,
											"end": 16879,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 16809,
											"end": 16879,
											"name": "JUMP"
										},
										{
											"begin": 16809,
											"end": 16879,
											"name": "tag",
											"value": "363"
										},
										{
											"begin": 16809,
											"end": 16879,
											"name": "JUMPDEST"
										},
										{
											"begin": 16766,
											"end": 16889,
											"name": "SWAP3"
										},
										{
											"begin": 16766,
											"end": 16889,
											"name": "SWAP2"
										},
										{
											"begin": 16766,
											"end": 16889,
											"name": "POP"
										},
										{
											"begin": 16766,
											"end": 16889,
											"name": "POP"
										},
										{
											"begin": 16766,
											"end": 16889,
											"name": "JUMP"
										},
										{
											"begin": 16896,
											"end": 17105,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 16896,
											"end": 17105,
											"name": "JUMPDEST"
										},
										{
											"begin": 16896,
											"end": 17105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17012,
											"end": 17014,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17001,
											"end": 17010,
											"name": "DUP3"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "ADD"
										},
										{
											"begin": 16989,
											"end": 17015,
											"name": "SWAP1"
										},
										{
											"begin": 16989,
											"end": 17015,
											"name": "POP"
										},
										{
											"begin": 17026,
											"end": 17095,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 17092,
											"end": 17093,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17081,
											"end": 17090,
											"name": "DUP4"
										},
										{
											"begin": 17077,
											"end": 17094,
											"name": "ADD"
										},
										{
											"begin": 17068,
											"end": 17074,
											"name": "DUP5"
										},
										{
											"begin": 17026,
											"end": 17095,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 17026,
											"end": 17095,
											"name": "JUMP"
										},
										{
											"begin": 17026,
											"end": 17095,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 17026,
											"end": 17095,
											"name": "JUMPDEST"
										},
										{
											"begin": 16983,
											"end": 17105,
											"name": "SWAP3"
										},
										{
											"begin": 16983,
											"end": 17105,
											"name": "SWAP2"
										},
										{
											"begin": 16983,
											"end": 17105,
											"name": "POP"
										},
										{
											"begin": 16983,
											"end": 17105,
											"name": "POP"
										},
										{
											"begin": 16983,
											"end": 17105,
											"name": "JUMP"
										},
										{
											"begin": 17112,
											"end": 17432,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 17112,
											"end": 17432,
											"name": "JUMPDEST"
										},
										{
											"begin": 17112,
											"end": 17432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17256,
											"end": 17258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17245,
											"end": 17254,
											"name": "DUP3"
										},
										{
											"begin": 17241,
											"end": 17259,
											"name": "ADD"
										},
										{
											"begin": 17233,
											"end": 17259,
											"name": "SWAP1"
										},
										{
											"begin": 17233,
											"end": 17259,
											"name": "POP"
										},
										{
											"begin": 17270,
											"end": 17340,
											"name": "PUSH [tag]",
											"value": "365"
										},
										{
											"begin": 17337,
											"end": 17338,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17326,
											"end": 17335,
											"name": "DUP4"
										},
										{
											"begin": 17322,
											"end": 17339,
											"name": "ADD"
										},
										{
											"begin": 17313,
											"end": 17319,
											"name": "DUP6"
										},
										{
											"begin": 17270,
											"end": 17340,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 17270,
											"end": 17340,
											"name": "JUMP"
										},
										{
											"begin": 17270,
											"end": 17340,
											"name": "tag",
											"value": "365"
										},
										{
											"begin": 17270,
											"end": 17340,
											"name": "JUMPDEST"
										},
										{
											"begin": 17351,
											"end": 17422,
											"name": "PUSH [tag]",
											"value": "366"
										},
										{
											"begin": 17418,
											"end": 17420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17407,
											"end": 17416,
											"name": "DUP4"
										},
										{
											"begin": 17403,
											"end": 17421,
											"name": "ADD"
										},
										{
											"begin": 17394,
											"end": 17400,
											"name": "DUP5"
										},
										{
											"begin": 17351,
											"end": 17422,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 17351,
											"end": 17422,
											"name": "JUMP"
										},
										{
											"begin": 17351,
											"end": 17422,
											"name": "tag",
											"value": "366"
										},
										{
											"begin": 17351,
											"end": 17422,
											"name": "JUMPDEST"
										},
										{
											"begin": 17227,
											"end": 17432,
											"name": "SWAP4"
										},
										{
											"begin": 17227,
											"end": 17432,
											"name": "SWAP3"
										},
										{
											"begin": 17227,
											"end": 17432,
											"name": "POP"
										},
										{
											"begin": 17227,
											"end": 17432,
											"name": "POP"
										},
										{
											"begin": 17227,
											"end": 17432,
											"name": "POP"
										},
										{
											"begin": 17227,
											"end": 17432,
											"name": "JUMP"
										},
										{
											"begin": 17439,
											"end": 17557,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 17439,
											"end": 17557,
											"name": "JUMPDEST"
										},
										{
											"begin": 17439,
											"end": 17557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17529,
											"end": 17534,
											"name": "DUP2"
										},
										{
											"begin": 17523,
											"end": 17535,
											"name": "MLOAD"
										},
										{
											"begin": 17513,
											"end": 17535,
											"name": "SWAP1"
										},
										{
											"begin": 17513,
											"end": 17535,
											"name": "POP"
										},
										{
											"begin": 17494,
											"end": 17557,
											"name": "SWAP2"
										},
										{
											"begin": 17494,
											"end": 17557,
											"name": "SWAP1"
										},
										{
											"begin": 17494,
											"end": 17557,
											"name": "POP"
										},
										{
											"begin": 17494,
											"end": 17557,
											"name": "JUMP"
										},
										{
											"begin": 17564,
											"end": 17686,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 17564,
											"end": 17686,
											"name": "JUMPDEST"
										},
										{
											"begin": 17564,
											"end": 17686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17658,
											"end": 17663,
											"name": "DUP2"
										},
										{
											"begin": 17652,
											"end": 17664,
											"name": "MLOAD"
										},
										{
											"begin": 17642,
											"end": 17664,
											"name": "SWAP1"
										},
										{
											"begin": 17642,
											"end": 17664,
											"name": "POP"
										},
										{
											"begin": 17623,
											"end": 17686,
											"name": "SWAP2"
										},
										{
											"begin": 17623,
											"end": 17686,
											"name": "SWAP1"
										},
										{
											"begin": 17623,
											"end": 17686,
											"name": "POP"
										},
										{
											"begin": 17623,
											"end": 17686,
											"name": "JUMP"
										},
										{
											"begin": 17694,
											"end": 17857,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 17694,
											"end": 17857,
											"name": "JUMPDEST"
										},
										{
											"begin": 17694,
											"end": 17857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17809,
											"end": 17815,
											"name": "DUP3"
										},
										{
											"begin": 17804,
											"end": 17807,
											"name": "DUP3"
										},
										{
											"begin": 17797,
											"end": 17816,
											"name": "MSTORE"
										},
										{
											"begin": 17846,
											"end": 17850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17841,
											"end": 17844,
											"name": "DUP3"
										},
										{
											"begin": 17837,
											"end": 17851,
											"name": "ADD"
										},
										{
											"begin": 17822,
											"end": 17851,
											"name": "SWAP1"
										},
										{
											"begin": 17822,
											"end": 17851,
											"name": "POP"
										},
										{
											"begin": 17790,
											"end": 17857,
											"name": "SWAP3"
										},
										{
											"begin": 17790,
											"end": 17857,
											"name": "SWAP2"
										},
										{
											"begin": 17790,
											"end": 17857,
											"name": "POP"
										},
										{
											"begin": 17790,
											"end": 17857,
											"name": "POP"
										},
										{
											"begin": 17790,
											"end": 17857,
											"name": "JUMP"
										},
										{
											"begin": 17866,
											"end": 18011,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 17866,
											"end": 18011,
											"name": "JUMPDEST"
										},
										{
											"begin": 17866,
											"end": 18011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18002,
											"end": 18005,
											"name": "DUP2"
										},
										{
											"begin": 17987,
											"end": 18005,
											"name": "SWAP1"
										},
										{
											"begin": 17987,
											"end": 18005,
											"name": "POP"
										},
										{
											"begin": 17980,
											"end": 18011,
											"name": "SWAP3"
										},
										{
											"begin": 17980,
											"end": 18011,
											"name": "SWAP2"
										},
										{
											"begin": 17980,
											"end": 18011,
											"name": "POP"
										},
										{
											"begin": 17980,
											"end": 18011,
											"name": "POP"
										},
										{
											"begin": 17980,
											"end": 18011,
											"name": "JUMP"
										},
										{
											"begin": 18019,
											"end": 18110,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 18019,
											"end": 18110,
											"name": "JUMPDEST"
										},
										{
											"begin": 18019,
											"end": 18110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18081,
											"end": 18105,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 18099,
											"end": 18104,
											"name": "DUP3"
										},
										{
											"begin": 18081,
											"end": 18105,
											"name": "PUSH [tag]",
											"value": "368"
										},
										{
											"begin": 18081,
											"end": 18105,
											"name": "JUMP"
										},
										{
											"begin": 18081,
											"end": 18105,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 18081,
											"end": 18105,
											"name": "JUMPDEST"
										},
										{
											"begin": 18070,
											"end": 18105,
											"name": "SWAP1"
										},
										{
											"begin": 18070,
											"end": 18105,
											"name": "POP"
										},
										{
											"begin": 18064,
											"end": 18110,
											"name": "SWAP2"
										},
										{
											"begin": 18064,
											"end": 18110,
											"name": "SWAP1"
										},
										{
											"begin": 18064,
											"end": 18110,
											"name": "POP"
										},
										{
											"begin": 18064,
											"end": 18110,
											"name": "JUMP"
										},
										{
											"begin": 18117,
											"end": 18202,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 18117,
											"end": 18202,
											"name": "JUMPDEST"
										},
										{
											"begin": 18117,
											"end": 18202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18190,
											"end": 18195,
											"name": "DUP2"
										},
										{
											"begin": 18183,
											"end": 18196,
											"name": "ISZERO"
										},
										{
											"begin": 18176,
											"end": 18197,
											"name": "ISZERO"
										},
										{
											"begin": 18165,
											"end": 18197,
											"name": "SWAP1"
										},
										{
											"begin": 18165,
											"end": 18197,
											"name": "POP"
										},
										{
											"begin": 18159,
											"end": 18202,
											"name": "SWAP2"
										},
										{
											"begin": 18159,
											"end": 18202,
											"name": "SWAP1"
										},
										{
											"begin": 18159,
											"end": 18202,
											"name": "POP"
										},
										{
											"begin": 18159,
											"end": 18202,
											"name": "JUMP"
										},
										{
											"begin": 18209,
											"end": 18281,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 18209,
											"end": 18281,
											"name": "JUMPDEST"
										},
										{
											"begin": 18209,
											"end": 18281,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18271,
											"end": 18276,
											"name": "DUP2"
										},
										{
											"begin": 18260,
											"end": 18276,
											"name": "SWAP1"
										},
										{
											"begin": 18260,
											"end": 18276,
											"name": "POP"
										},
										{
											"begin": 18254,
											"end": 18281,
											"name": "SWAP2"
										},
										{
											"begin": 18254,
											"end": 18281,
											"name": "SWAP1"
										},
										{
											"begin": 18254,
											"end": 18281,
											"name": "POP"
										},
										{
											"begin": 18254,
											"end": 18281,
											"name": "JUMP"
										},
										{
											"begin": 18288,
											"end": 18409,
											"name": "tag",
											"value": "368"
										},
										{
											"begin": 18288,
											"end": 18409,
											"name": "JUMPDEST"
										},
										{
											"begin": 18288,
											"end": 18409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18361,
											"end": 18403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18354,
											"end": 18359,
											"name": "DUP3"
										},
										{
											"begin": 18350,
											"end": 18404,
											"name": "AND"
										},
										{
											"begin": 18339,
											"end": 18404,
											"name": "SWAP1"
										},
										{
											"begin": 18339,
											"end": 18404,
											"name": "POP"
										},
										{
											"begin": 18333,
											"end": 18409,
											"name": "SWAP2"
										},
										{
											"begin": 18333,
											"end": 18409,
											"name": "SWAP1"
										},
										{
											"begin": 18333,
											"end": 18409,
											"name": "POP"
										},
										{
											"begin": 18333,
											"end": 18409,
											"name": "JUMP"
										},
										{
											"begin": 18416,
											"end": 18488,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 18416,
											"end": 18488,
											"name": "JUMPDEST"
										},
										{
											"begin": 18416,
											"end": 18488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18478,
											"end": 18483,
											"name": "DUP2"
										},
										{
											"begin": 18467,
											"end": 18483,
											"name": "SWAP1"
										},
										{
											"begin": 18467,
											"end": 18483,
											"name": "POP"
										},
										{
											"begin": 18461,
											"end": 18488,
											"name": "SWAP2"
										},
										{
											"begin": 18461,
											"end": 18488,
											"name": "SWAP1"
										},
										{
											"begin": 18461,
											"end": 18488,
											"name": "POP"
										},
										{
											"begin": 18461,
											"end": 18488,
											"name": "JUMP"
										},
										{
											"begin": 18495,
											"end": 18583,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 18495,
											"end": 18583,
											"name": "JUMPDEST"
										},
										{
											"begin": 18495,
											"end": 18583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18567,
											"end": 18577,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18560,
											"end": 18565,
											"name": "DUP3"
										},
										{
											"begin": 18556,
											"end": 18578,
											"name": "AND"
										},
										{
											"begin": 18545,
											"end": 18578,
											"name": "SWAP1"
										},
										{
											"begin": 18545,
											"end": 18578,
											"name": "POP"
										},
										{
											"begin": 18539,
											"end": 18583,
											"name": "SWAP2"
										},
										{
											"begin": 18539,
											"end": 18583,
											"name": "SWAP1"
										},
										{
											"begin": 18539,
											"end": 18583,
											"name": "POP"
										},
										{
											"begin": 18539,
											"end": 18583,
											"name": "JUMP"
										},
										{
											"begin": 18590,
											"end": 18671,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 18590,
											"end": 18671,
											"name": "JUMPDEST"
										},
										{
											"begin": 18590,
											"end": 18671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18661,
											"end": 18665,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18654,
											"end": 18659,
											"name": "DUP3"
										},
										{
											"begin": 18650,
											"end": 18666,
											"name": "AND"
										},
										{
											"begin": 18639,
											"end": 18666,
											"name": "SWAP1"
										},
										{
											"begin": 18639,
											"end": 18666,
											"name": "POP"
										},
										{
											"begin": 18633,
											"end": 18671,
											"name": "SWAP2"
										},
										{
											"begin": 18633,
											"end": 18671,
											"name": "SWAP1"
										},
										{
											"begin": 18633,
											"end": 18671,
											"name": "POP"
										},
										{
											"begin": 18633,
											"end": 18671,
											"name": "JUMP"
										},
										{
											"begin": 18678,
											"end": 18782,
											"name": "tag",
											"value": "329"
										},
										{
											"begin": 18678,
											"end": 18782,
											"name": "JUMPDEST"
										},
										{
											"begin": 18678,
											"end": 18782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18750,
											"end": 18776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18743,
											"end": 18748,
											"name": "DUP3"
										},
										{
											"begin": 18739,
											"end": 18777,
											"name": "AND"
										},
										{
											"begin": 18728,
											"end": 18777,
											"name": "SWAP1"
										},
										{
											"begin": 18728,
											"end": 18777,
											"name": "POP"
										},
										{
											"begin": 18722,
											"end": 18782,
											"name": "SWAP2"
										},
										{
											"begin": 18722,
											"end": 18782,
											"name": "SWAP1"
										},
										{
											"begin": 18722,
											"end": 18782,
											"name": "POP"
										},
										{
											"begin": 18722,
											"end": 18782,
											"name": "JUMP"
										},
										{
											"begin": 18789,
											"end": 18895,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 18789,
											"end": 18895,
											"name": "JUMPDEST"
										},
										{
											"begin": 18789,
											"end": 18895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18867,
											"end": 18890,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 18884,
											"end": 18889,
											"name": "DUP3"
										},
										{
											"begin": 18867,
											"end": 18890,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 18867,
											"end": 18890,
											"name": "JUMP"
										},
										{
											"begin": 18867,
											"end": 18890,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 18867,
											"end": 18890,
											"name": "JUMPDEST"
										},
										{
											"begin": 18854,
											"end": 18890,
											"name": "SWAP1"
										},
										{
											"begin": 18854,
											"end": 18890,
											"name": "POP"
										},
										{
											"begin": 18848,
											"end": 18895,
											"name": "SWAP2"
										},
										{
											"begin": 18848,
											"end": 18895,
											"name": "SWAP1"
										},
										{
											"begin": 18848,
											"end": 18895,
											"name": "POP"
										},
										{
											"begin": 18848,
											"end": 18895,
											"name": "JUMP"
										},
										{
											"begin": 18903,
											"end": 19171,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 18903,
											"end": 19171,
											"name": "JUMPDEST"
										},
										{
											"begin": 18968,
											"end": 18969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18975,
											"end": 19076,
											"name": "tag",
											"value": "370"
										},
										{
											"begin": 18975,
											"end": 19076,
											"name": "JUMPDEST"
										},
										{
											"begin": 18989,
											"end": 18995,
											"name": "DUP4"
										},
										{
											"begin": 18986,
											"end": 18987,
											"name": "DUP2"
										},
										{
											"begin": 18983,
											"end": 18996,
											"name": "LT"
										},
										{
											"begin": 18975,
											"end": 19076,
											"name": "ISZERO"
										},
										{
											"begin": 18975,
											"end": 19076,
											"name": "PUSH [tag]",
											"value": "372"
										},
										{
											"begin": 18975,
											"end": 19076,
											"name": "JUMPI"
										},
										{
											"begin": 19065,
											"end": 19066,
											"name": "DUP1"
										},
										{
											"begin": 19060,
											"end": 19063,
											"name": "DUP3"
										},
										{
											"begin": 19056,
											"end": 19067,
											"name": "ADD"
										},
										{
											"begin": 19050,
											"end": 19068,
											"name": "MLOAD"
										},
										{
											"begin": 19046,
											"end": 19047,
											"name": "DUP2"
										},
										{
											"begin": 19041,
											"end": 19044,
											"name": "DUP5"
										},
										{
											"begin": 19037,
											"end": 19048,
											"name": "ADD"
										},
										{
											"begin": 19030,
											"end": 19069,
											"name": "MSTORE"
										},
										{
											"begin": 19011,
											"end": 19013,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19008,
											"end": 19009,
											"name": "DUP2"
										},
										{
											"begin": 19004,
											"end": 19014,
											"name": "ADD"
										},
										{
											"begin": 18999,
											"end": 19014,
											"name": "SWAP1"
										},
										{
											"begin": 18999,
											"end": 19014,
											"name": "POP"
										},
										{
											"begin": 18975,
											"end": 19076,
											"name": "PUSH [tag]",
											"value": "370"
										},
										{
											"begin": 18975,
											"end": 19076,
											"name": "JUMP"
										},
										{
											"begin": 18975,
											"end": 19076,
											"name": "tag",
											"value": "372"
										},
										{
											"begin": 18975,
											"end": 19076,
											"name": "JUMPDEST"
										},
										{
											"begin": 19091,
											"end": 19097,
											"name": "DUP4"
										},
										{
											"begin": 19088,
											"end": 19089,
											"name": "DUP2"
										},
										{
											"begin": 19085,
											"end": 19098,
											"name": "GT"
										},
										{
											"begin": 19082,
											"end": 19084,
											"name": "ISZERO"
										},
										{
											"begin": 19082,
											"end": 19084,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 19082,
											"end": 19084,
											"name": "JUMPI"
										},
										{
											"begin": 19156,
											"end": 19157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19147,
											"end": 19153,
											"name": "DUP5"
										},
										{
											"begin": 19142,
											"end": 19145,
											"name": "DUP5"
										},
										{
											"begin": 19138,
											"end": 19154,
											"name": "ADD"
										},
										{
											"begin": 19131,
											"end": 19158,
											"name": "MSTORE"
										},
										{
											"begin": 19082,
											"end": 19084,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 19082,
											"end": 19084,
											"name": "JUMPDEST"
										},
										{
											"begin": 18952,
											"end": 19171,
											"name": "POP"
										},
										{
											"begin": 18952,
											"end": 19171,
											"name": "POP"
										},
										{
											"begin": 18952,
											"end": 19171,
											"name": "POP"
										},
										{
											"begin": 18952,
											"end": 19171,
											"name": "POP"
										},
										{
											"begin": 18952,
											"end": 19171,
											"name": "JUMP"
										},
										{
											"begin": 19179,
											"end": 19253,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 19179,
											"end": 19253,
											"name": "JUMPDEST"
										},
										{
											"begin": 19179,
											"end": 19253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19243,
											"end": 19248,
											"name": "DUP2"
										},
										{
											"begin": 19232,
											"end": 19248,
											"name": "SWAP1"
										},
										{
											"begin": 19232,
											"end": 19248,
											"name": "POP"
										},
										{
											"begin": 19226,
											"end": 19253,
											"name": "SWAP2"
										},
										{
											"begin": 19226,
											"end": 19253,
											"name": "SWAP1"
										},
										{
											"begin": 19226,
											"end": 19253,
											"name": "POP"
										},
										{
											"begin": 19226,
											"end": 19253,
											"name": "JUMP"
										},
										{
											"begin": 19260,
											"end": 19357,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 19260,
											"end": 19357,
											"name": "JUMPDEST"
										},
										{
											"begin": 19260,
											"end": 19357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19348,
											"end": 19350,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19344,
											"end": 19351,
											"name": "NOT"
										},
										{
											"begin": 19339,
											"end": 19341,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19332,
											"end": 19337,
											"name": "DUP4"
										},
										{
											"begin": 19328,
											"end": 19342,
											"name": "ADD"
										},
										{
											"begin": 19324,
											"end": 19352,
											"name": "AND"
										},
										{
											"begin": 19314,
											"end": 19352,
											"name": "SWAP1"
										},
										{
											"begin": 19314,
											"end": 19352,
											"name": "POP"
										},
										{
											"begin": 19308,
											"end": 19357,
											"name": "SWAP2"
										},
										{
											"begin": 19308,
											"end": 19357,
											"name": "SWAP1"
										},
										{
											"begin": 19308,
											"end": 19357,
											"name": "POP"
										},
										{
											"begin": 19308,
											"end": 19357,
											"name": "JUMP"
										},
										{
											"begin": 19365,
											"end": 19482,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 19365,
											"end": 19482,
											"name": "JUMPDEST"
										},
										{
											"begin": 19434,
											"end": 19458,
											"name": "PUSH [tag]",
											"value": "374"
										},
										{
											"begin": 19452,
											"end": 19457,
											"name": "DUP2"
										},
										{
											"begin": 19434,
											"end": 19458,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 19434,
											"end": 19458,
											"name": "JUMP"
										},
										{
											"begin": 19434,
											"end": 19458,
											"name": "tag",
											"value": "374"
										},
										{
											"begin": 19434,
											"end": 19458,
											"name": "JUMPDEST"
										},
										{
											"begin": 19427,
											"end": 19432,
											"name": "DUP2"
										},
										{
											"begin": 19424,
											"end": 19459,
											"name": "EQ"
										},
										{
											"begin": 19414,
											"end": 19416,
											"name": "PUSH [tag]",
											"value": "375"
										},
										{
											"begin": 19414,
											"end": 19416,
											"name": "JUMPI"
										},
										{
											"begin": 19473,
											"end": 19474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19470,
											"end": 19471,
											"name": "DUP1"
										},
										{
											"begin": 19463,
											"end": 19475,
											"name": "REVERT"
										},
										{
											"begin": 19414,
											"end": 19416,
											"name": "tag",
											"value": "375"
										},
										{
											"begin": 19414,
											"end": 19416,
											"name": "JUMPDEST"
										},
										{
											"begin": 19408,
											"end": 19482,
											"name": "POP"
										},
										{
											"begin": 19408,
											"end": 19482,
											"name": "JUMP"
										},
										{
											"begin": 19489,
											"end": 19606,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 19489,
											"end": 19606,
											"name": "JUMPDEST"
										},
										{
											"begin": 19558,
											"end": 19582,
											"name": "PUSH [tag]",
											"value": "376"
										},
										{
											"begin": 19576,
											"end": 19581,
											"name": "DUP2"
										},
										{
											"begin": 19558,
											"end": 19582,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 19558,
											"end": 19582,
											"name": "JUMP"
										},
										{
											"begin": 19558,
											"end": 19582,
											"name": "tag",
											"value": "376"
										},
										{
											"begin": 19558,
											"end": 19582,
											"name": "JUMPDEST"
										},
										{
											"begin": 19551,
											"end": 19556,
											"name": "DUP2"
										},
										{
											"begin": 19548,
											"end": 19583,
											"name": "EQ"
										},
										{
											"begin": 19538,
											"end": 19540,
											"name": "PUSH [tag]",
											"value": "377"
										},
										{
											"begin": 19538,
											"end": 19540,
											"name": "JUMPI"
										},
										{
											"begin": 19597,
											"end": 19598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19594,
											"end": 19595,
											"name": "DUP1"
										},
										{
											"begin": 19587,
											"end": 19599,
											"name": "REVERT"
										},
										{
											"begin": 19538,
											"end": 19540,
											"name": "tag",
											"value": "377"
										},
										{
											"begin": 19538,
											"end": 19540,
											"name": "JUMPDEST"
										},
										{
											"begin": 19532,
											"end": 19606,
											"name": "POP"
										},
										{
											"begin": 19532,
											"end": 19606,
											"name": "JUMP"
										},
										{
											"begin": 19613,
											"end": 19730,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 19613,
											"end": 19730,
											"name": "JUMPDEST"
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 19700,
											"end": 19705,
											"name": "DUP2"
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "JUMP"
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "tag",
											"value": "378"
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "JUMPDEST"
										},
										{
											"begin": 19675,
											"end": 19680,
											"name": "DUP2"
										},
										{
											"begin": 19672,
											"end": 19707,
											"name": "EQ"
										},
										{
											"begin": 19662,
											"end": 19664,
											"name": "PUSH [tag]",
											"value": "379"
										},
										{
											"begin": 19662,
											"end": 19664,
											"name": "JUMPI"
										},
										{
											"begin": 19721,
											"end": 19722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19718,
											"end": 19719,
											"name": "DUP1"
										},
										{
											"begin": 19711,
											"end": 19723,
											"name": "REVERT"
										},
										{
											"begin": 19662,
											"end": 19664,
											"name": "tag",
											"value": "379"
										},
										{
											"begin": 19662,
											"end": 19664,
											"name": "JUMPDEST"
										},
										{
											"begin": 19656,
											"end": 19730,
											"name": "POP"
										},
										{
											"begin": 19656,
											"end": 19730,
											"name": "JUMP"
										},
										{
											"begin": 19737,
											"end": 19852,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 19737,
											"end": 19852,
											"name": "JUMPDEST"
										},
										{
											"begin": 19805,
											"end": 19828,
											"name": "PUSH [tag]",
											"value": "380"
										},
										{
											"begin": 19822,
											"end": 19827,
											"name": "DUP2"
										},
										{
											"begin": 19805,
											"end": 19828,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 19805,
											"end": 19828,
											"name": "JUMP"
										},
										{
											"begin": 19805,
											"end": 19828,
											"name": "tag",
											"value": "380"
										},
										{
											"begin": 19805,
											"end": 19828,
											"name": "JUMPDEST"
										},
										{
											"begin": 19798,
											"end": 19803,
											"name": "DUP2"
										},
										{
											"begin": 19795,
											"end": 19829,
											"name": "EQ"
										},
										{
											"begin": 19785,
											"end": 19787,
											"name": "PUSH [tag]",
											"value": "381"
										},
										{
											"begin": 19785,
											"end": 19787,
											"name": "JUMPI"
										},
										{
											"begin": 19843,
											"end": 19844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19840,
											"end": 19841,
											"name": "DUP1"
										},
										{
											"begin": 19833,
											"end": 19845,
											"name": "REVERT"
										},
										{
											"begin": 19785,
											"end": 19787,
											"name": "tag",
											"value": "381"
										},
										{
											"begin": 19785,
											"end": 19787,
											"name": "JUMPDEST"
										},
										{
											"begin": 19779,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19779,
											"end": 19852,
											"name": "JUMP"
										},
										{
											"begin": 19859,
											"end": 19972,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 19859,
											"end": 19972,
											"name": "JUMPDEST"
										},
										{
											"begin": 19926,
											"end": 19948,
											"name": "PUSH [tag]",
											"value": "382"
										},
										{
											"begin": 19942,
											"end": 19947,
											"name": "DUP2"
										},
										{
											"begin": 19926,
											"end": 19948,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 19926,
											"end": 19948,
											"name": "JUMP"
										},
										{
											"begin": 19926,
											"end": 19948,
											"name": "tag",
											"value": "382"
										},
										{
											"begin": 19926,
											"end": 19948,
											"name": "JUMPDEST"
										},
										{
											"begin": 19919,
											"end": 19924,
											"name": "DUP2"
										},
										{
											"begin": 19916,
											"end": 19949,
											"name": "EQ"
										},
										{
											"begin": 19906,
											"end": 19908,
											"name": "PUSH [tag]",
											"value": "383"
										},
										{
											"begin": 19906,
											"end": 19908,
											"name": "JUMPI"
										},
										{
											"begin": 19963,
											"end": 19964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19960,
											"end": 19961,
											"name": "DUP1"
										},
										{
											"begin": 19953,
											"end": 19965,
											"name": "REVERT"
										},
										{
											"begin": 19906,
											"end": 19908,
											"name": "tag",
											"value": "383"
										},
										{
											"begin": 19906,
											"end": 19908,
											"name": "JUMPDEST"
										},
										{
											"begin": 19900,
											"end": 19972,
											"name": "POP"
										},
										{
											"begin": 19900,
											"end": 19972,
											"name": "JUMP"
										}
									],
									".data": {
										"286B94815EF9C969765B740F7C02D7497DEC20279D87A9D16DB942AD7A7E336F": "4e69753a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
										"30D69E93A362E57830EE2B32181E5A9483403AF4F744004141E5032F52BB8302": "4e69753a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
										"3572F2E3A73D8992FFD14BBDC492A68EA3425B205FA2E411C1A12014BC6F8444": "4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
										"4BECE53613AC1432B74B912202F09EB50CB0DCB5908CBBD578098234A3A7791C": "4e69753a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"692EC8C90BC6D060B4B8461E07E5E6DF665FC0757847ED6B4E3F21B09D8256CA": "4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"AA0434F77A6C4F1D00FE7BA5B4B950CBB617A74B279E346F2C71F484BDA86400": "4e69753a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
										"B162A08CDD346994D7A9C03EEE20F68EE11C6DA5CE67892863A5B8B47F9F80CF": "4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
										"BA9D0177EED180B5D6A2C76DFC689B87BFD0698268C3A8DB9E79A797CB697239": "4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"account\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"return\":\"The number of tokens approved\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"return\":\"The number of tokens held\"},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\"}},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"return\":\"The number of current votes for `account`\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"return\":\"The number of votes the account had as of the given block\"},\"transfer(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\",\"src\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"constructor\":\"Construct a new Niu token\",\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}}}},\"settings\":{\"compilationTarget\":{\"Governance/Niu.sol\":\"Niu\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Governance/Niu.sol\":{\"keccak256\":\"0xc9d5d3bd72012ed55809a5b5e68a331e25bb16d9a3ca8e5480f8a4352beab7d8\",\"urls\":[\"bzz-raw://26717cfc7aa921a8e4cab17985695221bb3863dddb56bbe6b54da11a32379b99\",\"dweb:/ipfs/QmfQHaGZ2uamzQRUWVBpNC1xYFPGksKnPWAivwtN1dbBGa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "Governance/Niu.sol:Niu",
								"label": "allowances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint96))"
							},
							{
								"astId": 24,
								"contract": "Governance/Niu.sol:Niu",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint96)"
							},
							{
								"astId": 28,
								"contract": "Governance/Niu.sol:Niu",
								"label": "delegates",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 39,
								"contract": "Governance/Niu.sol:Niu",
								"label": "checkpoints",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)33_storage))"
							},
							{
								"astId": 43,
								"contract": "Governance/Niu.sol:Niu",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 57,
								"contract": "Governance/Niu.sol:Niu",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint96))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint96))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint96)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)33_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct Niu.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)33_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_address,t_uint96)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint96)",
								"numberOfBytes": "32",
								"value": "t_uint96"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)33_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct Niu.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)33_storage"
							},
							"t_struct(Checkpoint)33_storage": {
								"encoding": "inplace",
								"label": "struct Niu.Checkpoint",
								"members": [
									{
										"astId": 30,
										"contract": "Governance/Niu.sol:Niu",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 32,
										"contract": "Governance/Niu.sol:Niu",
										"label": "votes",
										"offset": 4,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"methods": {
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"constructor": "Construct a new Niu token",
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Governance/Niu.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n",
				"message": "Experimental features are turned on. Do not use experimental features on live deployments.",
				"severity": "warning",
				"sourceLocation": {
					"end": 58,
					"file": "Governance/Niu.sol",
					"start": 25
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Governance/Niu.sol": {
				"ast": {
					"absolutePath": "Governance/Niu.sol",
					"exportedSymbols": {
						"Niu": [
							957
						]
					},
					"id": 958,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "25:33:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957
							],
							"name": "Niu",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "128:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 3,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "128:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e697572616c",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "158:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_51305411a44c430b5d7eb9b2f42f0f0a804b1cae2f15c9dcffd9bc2731cbd9f7",
											"typeString": "literal_string \"Niural\""
										},
										"value": "Niural"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 8,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "224:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 6,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "224:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e4955",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "256:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b3ae5ecac71b78114bec824c246f1c5a3249bb871a7c023c10c5f05cc25e5f55",
											"typeString": "literal_string \"NIU\""
										},
										"value": "NIU"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 11,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "321:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 9,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "321:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "354:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "417:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "417:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130303030303030653138",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "452:11:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"value": "10000000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"name": "allowances",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "542:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
										"typeString": "mapping(address => mapping(address => uint96))"
									},
									"typeName": {
										"id": 19,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "551:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "542:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
											"typeString": "mapping(address => mapping(address => uint96))"
										},
										"valueType": {
											"id": 18,
											"keyType": {
												"id": 16,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "571:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "562:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
												"typeString": "mapping(address => uint96)"
											},
											"valueType": {
												"id": 17,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "582:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 24,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "684:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
										"typeString": "mapping(address => uint96)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "693:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "684:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
											"typeString": "mapping(address => uint96)"
										},
										"valueType": {
											"id": 22,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "704:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 28,
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "787:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 27,
										"keyType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "796:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "787:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "807:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "Niu.Checkpoint",
									"id": 33,
									"members": [
										{
											"constant": false,
											"id": 30,
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "943:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 29,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "943:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "969:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 31,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "969:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 957,
									"src": "915:73:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 39,
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "1067:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint))"
									},
									"typeName": {
										"id": 38,
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1067:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint))"
										},
										"valueType": {
											"id": 37,
											"keyType": {
												"id": 35,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1096:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "1087:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
												"typeString": "mapping(uint32 => struct Niu.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 36,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 33,
												"src": "1106:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$33_storage_ptr",
													"typeString": "struct Niu.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 43,
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "1203:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1203:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 41,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1223:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 48,
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "1322:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 44,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1322:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 46,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1374:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 45,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 966,
											"src": "1364:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1364:80:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 53,
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "1535:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 49,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1535:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 51,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1591:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 50,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 966,
											"src": "1581:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 52,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1581:71:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 57,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "1730:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 56,
										"keyType": {
											"id": 54,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1739:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1730:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 55,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1750:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when an account changes its delegate",
									"id": 65,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"indexed": true,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1874:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1901:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1931:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1873:85:0"
									},
									"src": "1852:107:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when a delegate account's vote balance changes",
									"id": 73,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2078:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": false,
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2104:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2104:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": false,
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2126:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2077:65:0"
									},
									"src": "2051:92:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard EIP-20 transfer event",
									"id": 81,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2215:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2237:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2257:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2214:58:0"
									},
									"src": "2200:73:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard EIP-20 approval event",
									"id": 89,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2345:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2368:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2393:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2344:64:0"
									},
									"src": "2330:79:0"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2574:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 94,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2584:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 96,
														"indexExpression": {
															"argumentTypes": null,
															"id": 95,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2584:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 98,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "2611:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": "uint96"
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2604:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "2584:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2584:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2655:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2647:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2647:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 106,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2659:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 107,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "2668:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 102,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "2638:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2638:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2633:47:0"
											}
										]
									},
									"documentation": "@notice Construct a new Niu token\n@param account The initial account to grant all the tokens",
									"id": 111,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2550:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2549:17:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2574:0:0"
									},
									"scope": 957,
									"src": "2538:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "3065:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 120,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "3082:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 122,
														"indexExpression": {
															"argumentTypes": null,
															"id": 121,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3082:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 124,
													"indexExpression": {
														"argumentTypes": null,
														"id": 123,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "3102:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3082:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 119,
												"id": 125,
												"nodeType": "Return",
												"src": "3075:35:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n@param account The address of the account holding the funds\n@param spender The address of the account spending the funds\n@return The number of tokens approved",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3002:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3019:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3001:34:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3059:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3059:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3058:6:0"
									},
									"scope": 957,
									"src": "2983:134:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "3659:332:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "3669:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 136,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "3669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3669:13:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "rawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "3696:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "3714:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3715:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3709:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3709:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3696:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "3769:91:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 153,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "3783:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 155,
																			"name": "rawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 131,
																			"src": "3799:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "4e69753a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
																			"id": 156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3810:38:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302",
																				"typeString": "literal_string \"Niu::approve: amount exceeds 96 bits\""
																			},
																			"value": "Niu::approve: amount exceeds 96 bits"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302",
																				"typeString": "literal_string \"Niu::approve: amount exceeds 96 bits\""
																			}
																		],
																		"id": 154,
																		"name": "safe96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "3792:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																			"typeString": "function (uint256,string memory) pure returns (uint96)"
																		}
																	},
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3792:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "3783:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 159,
															"nodeType": "ExpressionStatement",
															"src": "3783:66:0"
														}
													]
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "3692:168:0",
												"trueBody": {
													"id": 152,
													"nodeType": "Block",
													"src": "3719:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 145,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "3733:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "3749:2:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3750:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3742:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": "uint96"
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3742:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "3733:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 151,
															"nodeType": "ExpressionStatement",
															"src": "3733:19:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 162,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "3870:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 166,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 163,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "3881:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3881:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3870:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 167,
														"indexExpression": {
															"argumentTypes": null,
															"id": 165,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3870:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 168,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "3904:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3870:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "3870:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 172,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "3935:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3935:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "3956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 171,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "3926:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "3921:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3980:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 135,
												"id": 179,
												"nodeType": "Return",
												"src": "3973:11:0"
											}
										]
									},
									"documentation": "@notice Approve `spender` to transfer up to `amount` from `src`\n@dev This will overwrite the approval amount for `spender`\n and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n@param spender The address of the account which may transfer tokens\n@param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n@return Whether or not the approval succeeded",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3619:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3601:33:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3653:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3652:6:0"
									},
									"scope": 957,
									"src": "3585:406:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4252:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 188,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "4269:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 190,
													"indexExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "4278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4269:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 187,
												"id": 191,
												"nodeType": "Return",
												"src": "4262:24:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens held by the `account`\n@param account The address of the account to get the balance of\n@return The number of tokens held",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4205:17:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4246:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4245:6:0"
									},
									"scope": 957,
									"src": "4187:106:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "4620:162:0",
										"statements": [
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 218,
														"src": "4630:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 202,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4630:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 205,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4653:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4664:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa0434f77a6c4f1d00fe7ba5b4b950cbb617a74b279e346f2c71f484bda86400",
																"typeString": "literal_string \"Niu::transfer: amount exceeds 96 bits\""
															},
															"value": "Niu::transfer: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_aa0434f77a6c4f1d00fe7ba5b4b950cbb617a74b279e346f2c71f484bda86400",
																"typeString": "literal_string \"Niu::transfer: amount exceeds 96 bits\""
															}
														],
														"id": 204,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "4646:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4630:74:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 210,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "4730:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4730:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "4742:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "4747:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 209,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "4714:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4714:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "4714:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4771:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 201,
												"id": 217,
												"nodeType": "Return",
												"src": "4764:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `msg.sender` to `dst`\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "4567:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "4580:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4580:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4566:29:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "4614:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4613:6:0"
									},
									"scope": 957,
									"src": "4549:233:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "5171:568:0",
										"statements": [
											{
												"assignments": [
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 231,
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "5181:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 230,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5181:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 232,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "5199:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "5199:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5181:28:0"
											},
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"name": "spenderAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "5219:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 235,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "5219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 237,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "5245:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 239,
														"indexExpression": {
															"argumentTypes": null,
															"id": 238,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "5256:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5245:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 241,
													"indexExpression": {
														"argumentTypes": null,
														"id": 240,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "5261:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5245:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5219:50:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "5279:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 243,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "5279:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 246,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "5302:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5313:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302",
																"typeString": "literal_string \"Niu::approve: amount exceeds 96 bits\""
															},
															"value": "Niu::approve: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_30d69e93a362e57830ee2b32181e5a9483403af4f744004141e5032f52bb8302",
																"typeString": "literal_string \"Niu::approve: amount exceeds 96 bits\""
															}
														],
														"id": 245,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "5295:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5295:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5279:73:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 250,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 251,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "5378:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5367:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 253,
															"name": "spenderAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "5385:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "5412:2:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5413:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5405:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint96_$",
																	"typeString": "type(uint96)"
																},
																"typeName": "uint96"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5405:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"src": "5385:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5367:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 283,
												"nodeType": "IfStatement",
												"src": "5363:305:0",
												"trueBody": {
													"id": 282,
													"nodeType": "Block",
													"src": "5417:251:0",
													"statements": [
														{
															"assignments": [
																261
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 261,
																	"name": "newAllowance",
																	"nodeType": "VariableDeclaration",
																	"scope": 282,
																	"src": "5431:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 260,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "5431:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 267,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 263,
																		"name": "spenderAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "5459:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 264,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "5477:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4e69753a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5485:62:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_286b94815ef9c969765b740f7c02d7497dec20279d87a9d16db942ad7a7e336f",
																			"typeString": "literal_string \"Niu::transferFrom: transfer amount exceeds spender allowance\""
																		},
																		"value": "Niu::transferFrom: transfer amount exceeds spender allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_286b94815ef9c969765b740f7c02d7497dec20279d87a9d16db942ad7a7e336f",
																			"typeString": "literal_string \"Niu::transferFrom: transfer amount exceeds spender allowance\""
																		}
																	],
																	"id": 262,
																	"name": "sub96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "5453:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																		"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5453:95:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5431:117:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 268,
																			"name": "allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 20,
																			"src": "5562:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																				"typeString": "mapping(address => mapping(address => uint96))"
																			}
																		},
																		"id": 271,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 269,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "5573:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5562:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																			"typeString": "mapping(address => uint96)"
																		}
																	},
																	"id": 272,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 270,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 231,
																		"src": "5578:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5562:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 273,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "5589:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5562:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 275,
															"nodeType": "ExpressionStatement",
															"src": "5562:39:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 277,
																		"name": "src",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "5630:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 278,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 231,
																		"src": "5635:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 279,
																		"name": "newAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "5644:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 276,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "5621:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5621:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 281,
															"nodeType": "EmitStatement",
															"src": "5616:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "5694:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 286,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "5699:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 287,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "5704:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 284,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "5678:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5678:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "5678:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5728:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 229,
												"id": 291,
												"nodeType": "Return",
												"src": "5721:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `src` to `dst`\n@param src The address of the source account\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5105:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5118:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5131:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5104:42:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5165:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5164:6:0"
									},
									"scope": 957,
									"src": "5083:656:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "5925:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "5952:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5952:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 301,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5964:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 298,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "5942:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 297,
												"id": 303,
												"nodeType": "Return",
												"src": "5935:39:0"
											}
										]
									},
									"documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegatee The address to delegate votes to",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5899:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5898:19:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5925:0:0"
									},
									"scope": 957,
									"src": "5881:100:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "6509:672:0",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "6519:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 320,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 325,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "6566:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 328,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "6599:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				],
																				"id": 327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6593:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": "bytes"
																			},
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6593:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 326,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "6583:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6583:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 331,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "6607:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6607:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 334,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "6629:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Niu_$957",
																				"typeString": "contract Niu"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Niu_$957",
																				"typeString": "contract Niu"
																			}
																		],
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6621:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6621:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 323,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "6555:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6555:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6555:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 322,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "6545:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6545:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6519:117:0"
											},
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "6646:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 339,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6646:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 344,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "6688:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 345,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6709:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 346,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "6720:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 347,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6727:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 342,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "6677:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6677:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6677:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 341,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "6667:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6667:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6646:89:0"
											},
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "6745:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 351,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6745:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6789:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 357,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "6801:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 358,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "6818:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 354,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "6772:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6772:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6772:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 353,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "6762:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6762:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6745:85:0"
											},
											{
												"assignments": [
													363
												],
												"declarations": [
													{
														"constant": false,
														"id": 363,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "6840:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 362,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6840:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 365,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6870:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 366,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "6878:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 367,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6881:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 368,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "6884:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 364,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "6860:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6860:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6840:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 372,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "6904:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6925:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6917:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6917:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6904:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6929:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a3ad0c608c33832a3ff514e5c3e57dbcd9e3501f3d02bdba4dd75e8b3694dbc",
																"typeString": "literal_string \"Niu::delegateBySig: invalid signature\""
															},
															"value": "Niu::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a3ad0c608c33832a3ff514e5c3e57dbcd9e3501f3d02bdba4dd75e8b3694dbc",
																"typeString": "literal_string \"Niu::delegateBySig: invalid signature\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "6896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6896:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "6896:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 381,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6987:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6996:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 382,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "6996:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 384,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 383,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "7003:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6996:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6987:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7017:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd7149fe72a1be87be4ead6dc6a1d98fa245ff2213cc4223f269de7a7c707425",
																"typeString": "literal_string \"Niu::delegateBySig: invalid nonce\""
															},
															"value": "Niu::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd7149fe72a1be87be4ead6dc6a1d98fa245ff2213cc4223f269de7a7c707425",
																"typeString": "literal_string \"Niu::delegateBySig: invalid nonce\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "6979:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6979:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "6979:74:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 391,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "7071:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 392,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "7078:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7071:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7086:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94d278442953e8a40a7fdf141370ff55e3b6df6e750d2f5cde258c09c5a35c64",
																"typeString": "literal_string \"Niu::delegateBySig: signature expired\""
															},
															"value": "Niu::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94d278442953e8a40a7fdf141370ff55e3b6df6e750d2f5cde258c09c5a35c64",
																"typeString": "literal_string \"Niu::delegateBySig: signature expired\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "7063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7063:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "7063:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 398,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "7153:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 399,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "7164:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "7143:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7143:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 319,
												"id": 401,
												"nodeType": "Return",
												"src": "7136:38:0"
											}
										]
									},
									"documentation": "@notice Delegates votes from signatory to `delegatee`\n@param delegatee The address to delegate votes to\n@param nonce The contract state required to match the signature\n@param expiry The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "6427:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "6446:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6446:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "6458:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "6471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 312,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6471:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "6480:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "6491:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6426:75:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6509:0:0"
									},
									"scope": 957,
									"src": "6404:777:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "7448:146:0",
										"statements": [
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "7458:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 410,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "7458:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 412,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "7480:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 414,
													"indexExpression": {
														"argumentTypes": null,
														"id": 413,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "7495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7480:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7458:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 416,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "7520:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7535:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7520:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7586:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7520:67:0",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 419,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "7539:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																	}
																},
																"id": 421,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 420,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "7551:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7539:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																	"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																}
															},
															"id": 425,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 422,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "7560:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7575:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7560:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7539:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																"typeString": "struct Niu.Checkpoint storage ref"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "7539:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 409,
												"id": 429,
												"nodeType": "Return",
												"src": "7513:74:0"
											}
										]
									},
									"documentation": "@notice Gets the current votes balance for `account`\n@param account The address to get votes balance\n@return The number of current votes for `account`",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "7400:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7399:17:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "7440:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 407,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "7440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7439:8:0"
									},
									"scope": 957,
									"src": "7375:219:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "8103:1098:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 441,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "8121:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 442,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "8135:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8135:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8121:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8149:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23d2c3e584d2dae5a522f6448e0710df72687f4acd6e4ed038125be6ad063474",
																"typeString": "literal_string \"Niu::getPriorVotes: not yet determined\""
															},
															"value": "Niu::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23d2c3e584d2dae5a522f6448e0710df72687f4acd6e4ed038125be6ad063474",
																"typeString": "literal_string \"Niu::getPriorVotes: not yet determined\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "8113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8113:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "8113:77:0"
											},
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "8201:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 448,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8201:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 450,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "8223:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 452,
													"indexExpression": {
														"argumentTypes": null,
														"id": 451,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "8238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8223:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8201:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 454,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "8260:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8276:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8260:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 460,
												"nodeType": "IfStatement",
												"src": "8256:56:0",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "8279:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8300:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 439,
															"id": 458,
															"nodeType": "Return",
															"src": "8293:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 461,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "8369:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																	}
																},
																"id": 463,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 462,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "8381:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8369:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																	"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																}
															},
															"id": 467,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 464,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "8390:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8405:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8390:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8369:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																"typeString": "struct Niu.Checkpoint storage ref"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 30,
														"src": "8369:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 469,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "8421:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8369:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 481,
												"nodeType": "IfStatement",
												"src": "8365:145:0",
												"trueBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "8434:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 471,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 39,
																			"src": "8455:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																			}
																		},
																		"id": 473,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 472,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "8467:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8455:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																			"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																		}
																	},
																	"id": 477,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 474,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "8476:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8491:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8476:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8455:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																		"typeString": "struct Niu.Checkpoint storage ref"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "8455:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 439,
															"id": 479,
															"nodeType": "Return",
															"src": "8448:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 482,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "8568:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																	}
																},
																"id": 484,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 483,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "8580:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8568:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																	"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																}
															},
															"id": 486,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8589:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8568:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																"typeString": "struct Niu.Checkpoint storage ref"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 30,
														"src": "8568:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 488,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "8604:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8568:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 493,
												"nodeType": "IfStatement",
												"src": "8564:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "8617:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8638:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 439,
															"id": 491,
															"nodeType": "Return",
															"src": "8631:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "8660:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 494,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 497,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8675:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8660:16:0"
											},
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "8686:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 498,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8686:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 500,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "8701:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8716:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8701:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8686:31:0"
											},
											{
												"body": {
													"id": 552,
													"nodeType": "Block",
													"src": "8749:396:0",
													"statements": [
														{
															"assignments": [
																508
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 508,
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"scope": 552,
																	"src": "8763:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 507,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "8763:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 517,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 509,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "8779:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 510,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 499,
																					"src": "8788:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 511,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 495,
																					"src": "8796:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "8788:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 513,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8787:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8805:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "8787:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8779:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8763:43:0"
														},
														{
															"assignments": [
																519
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 519,
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"scope": 552,
																	"src": "8847:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$33_memory_ptr",
																		"typeString": "struct Niu.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 518,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 33,
																		"src": "8847:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$33_storage_ptr",
																			"typeString": "struct Niu.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 525,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 520,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "8870:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																		}
																	},
																	"id": 522,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 521,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "8882:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8870:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																		"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																	}
																},
																"id": 524,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 523,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "8891:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8870:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																	"typeString": "struct Niu.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8847:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 526,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "8916:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$33_memory_ptr",
																			"typeString": "struct Niu.Checkpoint memory"
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 30,
																	"src": "8916:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 528,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "8932:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8916:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 534,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "9003:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$33_memory_ptr",
																				"typeString": "struct Niu.Checkpoint memory"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 30,
																		"src": "9003:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 536,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "9018:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9003:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 549,
																	"nodeType": "Block",
																	"src": "9084:51:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 543,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 499,
																					"src": "9102:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 546,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 544,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 508,
																						"src": "9110:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 545,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9119:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "9110:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "9102:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 548,
																			"nodeType": "ExpressionStatement",
																			"src": "9102:18:0"
																		}
																	]
																},
																"id": 550,
																"nodeType": "IfStatement",
																"src": "8999:136:0",
																"trueBody": {
																	"id": 542,
																	"nodeType": "Block",
																	"src": "9031:47:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 538,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 495,
																					"src": "9049:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 539,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "9057:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "9049:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 541,
																			"nodeType": "ExpressionStatement",
																			"src": "9049:14:0"
																		}
																	]
																}
															},
															"id": 551,
															"nodeType": "IfStatement",
															"src": "8912:223:0",
															"trueBody": {
																"id": 533,
																"nodeType": "Block",
																"src": "8945:48:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 530,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "8970:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$33_memory_ptr",
																					"typeString": "struct Niu.Checkpoint memory"
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 32,
																			"src": "8970:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 439,
																		"id": 532,
																		"nodeType": "Return",
																		"src": "8963:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 504,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "8734:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 505,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "8742:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "8734:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "WhileStatement",
												"src": "8727:418:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 554,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "9161:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																}
															},
															"id": 556,
															"indexExpression": {
																"argumentTypes": null,
																"id": 555,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "9173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9161:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
															}
														},
														"id": 558,
														"indexExpression": {
															"argumentTypes": null,
															"id": 557,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "9182:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9161:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
															"typeString": "struct Niu.Checkpoint storage ref"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 32,
													"src": "9161:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 439,
												"id": 560,
												"nodeType": "Return",
												"src": "9154:40:0"
											}
										]
									},
									"documentation": "@notice Determine the prior number of votes for an account as of a block number\n@dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n@param account The address of the account to check\n@param blockNumber The block number to get the vote balance at\n@return The number of votes the account had as of the given block",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "8039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "8056:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8038:35:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "8095:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 437,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "8095:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8094:8:0"
									},
									"scope": 957,
									"src": "8016:1185:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "9273:301:0",
										"statements": [
											{
												"assignments": [
													570
												],
												"declarations": [
													{
														"constant": false,
														"id": 570,
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"scope": 599,
														"src": "9283:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 569,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9283:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 571,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "9309:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 573,
													"indexExpression": {
														"argumentTypes": null,
														"id": 572,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "9319:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9309:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9283:46:0"
											},
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"scope": 599,
														"src": "9339:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 575,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "9339:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 580,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 577,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "9365:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 579,
													"indexExpression": {
														"argumentTypes": null,
														"id": 578,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "9374:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9365:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9339:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 581,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "9394:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 583,
														"indexExpression": {
															"argumentTypes": null,
															"id": 582,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9404:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9394:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 584,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "9417:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9394:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "9394:32:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 588,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9458:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 589,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "9469:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 590,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "9486:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 587,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "9442:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9442:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "EmitStatement",
												"src": "9437:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 594,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "9522:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 595,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "9539:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 596,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "9550:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 593,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "9507:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9507:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "9507:60:0"
											}
										]
									},
									"documentation": null,
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "9226:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "9245:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9225:38:0"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9273:0:0"
									},
									"scope": 957,
									"src": "9207:367:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "9655:526:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 610,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "9673:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9688:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9680:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9680:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9673:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9692:61:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_146cacfb4bc260431b89ec63c777a908ad6748f2b07fb7fc90e13e19e310da71",
																"typeString": "literal_string \"Niu::_transferTokens: cannot transfer from the zero address\""
															},
															"value": "Niu::_transferTokens: cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_146cacfb4bc260431b89ec63c777a908ad6748f2b07fb7fc90e13e19e310da71",
																"typeString": "literal_string \"Niu::_transferTokens: cannot transfer from the zero address\""
															}
														],
														"id": 609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "9665:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9665:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "9665:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 619,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "9772:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9787:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9779:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9779:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9772:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9791:59:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0cc2fd9bbb55c782798aa8161c0ac56a8edb953c83dd31cc403717eed7058eb6",
																"typeString": "literal_string \"Niu::_transferTokens: cannot transfer to the zero address\""
															},
															"value": "Niu::_transferTokens: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0cc2fd9bbb55c782798aa8161c0ac56a8edb953c83dd31cc403717eed7058eb6",
																"typeString": "literal_string \"Niu::_transferTokens: cannot transfer to the zero address\""
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "9764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9764:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "9764:87:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 627,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "9862:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 629,
														"indexExpression": {
															"argumentTypes": null,
															"id": 628,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "9871:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9862:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 631,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "9884:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 633,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 632,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "9893:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9884:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 634,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "9899:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9907:55:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_692ec8c90bc6d060b4b8461e07e5e6df665fc0757847ed6b4e3f21b09d8256ca",
																	"typeString": "literal_string \"Niu::_transferTokens: transfer amount exceeds balance\""
																},
																"value": "Niu::_transferTokens: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_692ec8c90bc6d060b4b8461e07e5e6df665fc0757847ed6b4e3f21b09d8256ca",
																	"typeString": "literal_string \"Niu::_transferTokens: transfer amount exceeds balance\""
																}
															],
															"id": 630,
															"name": "sub96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "9878:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9878:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "9862:101:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "9862:101:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 639,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "9973:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 641,
														"indexExpression": {
															"argumentTypes": null,
															"id": 640,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9982:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9973:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 643,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "9995:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 645,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 644,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "10004:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9995:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 646,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "10010:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4e69753a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10018:49:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b162a08cdd346994d7a9c03eee20f68ee11c6da5ce67892863a5b8b47f9f80cf",
																	"typeString": "literal_string \"Niu::_transferTokens: transfer amount overflows\""
																},
																"value": "Niu::_transferTokens: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_b162a08cdd346994d7a9c03eee20f68ee11c6da5ce67892863a5b8b47f9f80cf",
																	"typeString": "literal_string \"Niu::_transferTokens: transfer amount overflows\""
																}
															],
															"id": 642,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "9989:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9989:79:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "9973:95:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "9973:95:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 652,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "10092:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 653,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "10097:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 654,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "10102:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 651,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "10083:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10083:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "EmitStatement",
												"src": "10078:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 658,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "10135:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 660,
															"indexExpression": {
																"argumentTypes": null,
																"id": 659,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "10145:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10135:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 661,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "10151:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 663,
															"indexExpression": {
																"argumentTypes": null,
																"id": 662,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "10161:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10151:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 664,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "10167:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 657,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "10120:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10120:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "10120:54:0"
											}
										]
									},
									"documentation": null,
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "9605:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "9618:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "9631:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 605,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "9631:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9604:41:0"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9655:0:0"
									},
									"scope": 957,
									"src": "9580:601:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "10267:841:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 677,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "10281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 678,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "10291:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10281:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 680,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "10301:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10310:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10301:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10281:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 773,
												"nodeType": "IfStatement",
												"src": "10277:825:0",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "10313:789:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 684,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "10331:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10341:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10341:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "10331:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 727,
															"nodeType": "IfStatement",
															"src": "10327:376:0",
															"trueBody": {
																"id": 726,
																"nodeType": "Block",
																"src": "10353:350:0",
																"statements": [
																	{
																		"assignments": [
																			690
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 690,
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 726,
																				"src": "10371:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 689,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "10371:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 694,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 691,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 43,
																				"src": "10390:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 693,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 692,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 670,
																				"src": "10405:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10390:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10371:41:0"
																	},
																	{
																		"assignments": [
																			696
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 696,
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 726,
																				"src": "10430:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 695,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "10430:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 710,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 697,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 690,
																					"src": "10449:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 698,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10461:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "10449:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10508:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "10449:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 700,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 39,
																							"src": "10465:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																							}
																						},
																						"id": 702,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 701,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 670,
																							"src": "10477:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10465:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																							"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																						}
																					},
																					"id": 706,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 705,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 703,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 690,
																							"src": "10485:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 704,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10497:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "10485:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10465:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																						"typeString": "struct Niu.Checkpoint storage ref"
																					}
																				},
																				"id": 707,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 32,
																				"src": "10465:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10430:79:0"
																	},
																	{
																		"assignments": [
																			712
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 712,
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 726,
																				"src": "10527:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 711,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "10527:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 718,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 714,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 696,
																					"src": "10552:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 715,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10563:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 716,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10571:41:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3572f2e3a73d8992ffd14bbdc492a68ea3425b205fa2e411c1a12014bc6f8444",
																						"typeString": "literal_string \"Niu::_moveVotes: vote amount underflows\""
																					},
																					"value": "Niu::_moveVotes: vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3572f2e3a73d8992ffd14bbdc492a68ea3425b205fa2e411c1a12014bc6f8444",
																						"typeString": "literal_string \"Niu::_moveVotes: vote amount underflows\""
																					}
																				],
																				"id": 713,
																				"name": "sub96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "10546:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10546:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10527:86:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 720,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 670,
																					"src": "10648:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 721,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 690,
																					"src": "10656:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 722,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 696,
																					"src": "10667:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 723,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "10678:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 719,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "10631:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10631:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 725,
																		"nodeType": "ExpressionStatement",
																		"src": "10631:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 728,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10721:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10739:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10731:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10731:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "10721:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 771,
															"nodeType": "IfStatement",
															"src": "10717:375:0",
															"trueBody": {
																"id": 770,
																"nodeType": "Block",
																"src": "10743:349:0",
																"statements": [
																	{
																		"assignments": [
																			734
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 734,
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 770,
																				"src": "10761:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 733,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "10761:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 738,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 735,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 43,
																				"src": "10780:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 737,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 736,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "10795:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10780:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10761:41:0"
																	},
																	{
																		"assignments": [
																			740
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 740,
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 770,
																				"src": "10820:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 739,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "10820:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 754,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 741,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "10839:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10851:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "10839:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10898:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "10839:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 744,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 39,
																							"src": "10855:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																							}
																						},
																						"id": 746,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 745,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 672,
																							"src": "10867:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10855:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																							"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																						}
																					},
																					"id": 750,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 749,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 747,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 734,
																							"src": "10875:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 748,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10887:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "10875:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10855:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																						"typeString": "struct Niu.Checkpoint storage ref"
																					}
																				},
																				"id": 751,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 32,
																				"src": "10855:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10820:79:0"
																	},
																	{
																		"assignments": [
																			756
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 756,
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 770,
																				"src": "10917:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 755,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "10917:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 762,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 758,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 740,
																					"src": "10942:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 759,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10953:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "4e69753a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
																					"id": 760,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10961:40:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ba9d0177eed180b5d6a2c76dfc689b87bfd0698268c3a8db9e79a797cb697239",
																						"typeString": "literal_string \"Niu::_moveVotes: vote amount overflows\""
																					},
																					"value": "Niu::_moveVotes: vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ba9d0177eed180b5d6a2c76dfc689b87bfd0698268c3a8db9e79a797cb697239",
																						"typeString": "literal_string \"Niu::_moveVotes: vote amount overflows\""
																					}
																				],
																				"id": 757,
																				"name": "add96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 921,
																				"src": "10936:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:66:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10917:85:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 764,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 672,
																					"src": "11037:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 765,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "11045:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 766,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 740,
																					"src": "11056:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 767,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 756,
																					"src": "11067:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 763,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "11020:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11020:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 769,
																		"nodeType": "ExpressionStatement",
																		"src": "11020:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "10211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "10227:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "10243:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 673,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "10243:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10210:47:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10267:0:0"
									},
									"scope": 957,
									"src": "10187:921:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "11223:508:0",
										"statements": [
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "11231:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 786,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "11231:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 789,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "11259:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11259:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e69753a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11273:53:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4bece53613ac1432b74b912202f09eb50cb0dcb5908cbbd578098234a3a7791c",
																"typeString": "literal_string \"Niu::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "Niu::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_4bece53613ac1432b74b912202f09eb50cb0dcb5908cbbd578098234a3a7791c",
																"typeString": "literal_string \"Niu::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 788,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "11252:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11252:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11231:96:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 794,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "11340:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11355:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11340:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 797,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "11360:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																		}
																	},
																	"id": 799,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 798,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "11372:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11360:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																		"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																	}
																},
																"id": 803,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 800,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "11383:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11398:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "11383:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11360:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																	"typeString": "struct Niu.Checkpoint storage ref"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 30,
															"src": "11360:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 805,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "11414:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "11360:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11340:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "11511:149:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 820,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 39,
																			"src": "11523:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																			}
																		},
																		"id": 823,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 821,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "11535:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11523:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																			"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																		}
																	},
																	"id": 824,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 822,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "11546:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11523:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																		"typeString": "struct Niu.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 826,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 787,
																			"src": "11573:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 827,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 783,
																			"src": "11586:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"id": 825,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "11562:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$33_storage_ptr_$",
																			"typeString": "type(struct Niu.Checkpoint storage pointer)"
																		}
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11562:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$33_memory",
																		"typeString": "struct Niu.Checkpoint memory"
																	}
																},
																"src": "11523:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																	"typeString": "struct Niu.Checkpoint storage ref"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "11523:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 831,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "11607:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 833,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 832,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "11622:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11607:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 834,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "11635:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11650:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "11635:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "11607:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 838,
															"nodeType": "ExpressionStatement",
															"src": "11607:44:0"
														}
													]
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "11336:324:0",
												"trueBody": {
													"id": 819,
													"nodeType": "Block",
													"src": "11427:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 808,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 39,
																				"src": "11439:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct Niu.Checkpoint storage ref))"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 809,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "11451:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11439:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$33_storage_$",
																				"typeString": "mapping(uint32 => struct Niu.Checkpoint storage ref)"
																			}
																		},
																		"id": 814,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 810,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "11462:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11477:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "11462:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11439:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$33_storage",
																			"typeString": "struct Niu.Checkpoint storage ref"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 32,
																	"src": "11439:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 816,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "11488:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "11439:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 818,
															"nodeType": "ExpressionStatement",
															"src": "11439:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 842,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "11694:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "11705:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"argumentTypes": null,
															"id": 844,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "11715:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 841,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "11673:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11673:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "11668:56:0"
											}
										]
									},
									"documentation": null,
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "11140:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "11159:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 778,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "11159:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "11180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 780,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11180:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "11197:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 782,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11139:74:0"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11223:0:0"
									},
									"scope": 957,
									"src": "11114:617:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "11820:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 858,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "11838:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11842:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11845:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11842:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "11838:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 863,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "11849:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 857,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "11830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11830:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "11830:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 867,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "11886:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11879:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11879:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 856,
												"id": 869,
												"nodeType": "Return",
												"src": "11872:16:0"
											}
										]
									},
									"documentation": null,
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "11753:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11753:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "11761:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11761:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11752:36:0"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "11812:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 854,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "11812:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11811:8:0"
									},
									"scope": 957,
									"src": "11737:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "11984:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 881,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "12002:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12006:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3936",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12009:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_96_by_1",
																		"typeString": "int_const 96"
																	},
																	"value": "96"
																},
																"src": "12006:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																}
															},
															"src": "12002:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 886,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12013:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "11994:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11994:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "11994:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 890,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "12050:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12043:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": "uint96"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12043:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 879,
												"id": 892,
												"nodeType": "Return",
												"src": "12036:16:0"
											}
										]
									},
									"documentation": null,
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "11917:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11917:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "11925:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 874,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11925:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11916:36:0"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "11976:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 877,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11976:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11975:8:0"
									},
									"scope": 957,
									"src": "11901:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "12159:90:0",
										"statements": [
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 920,
														"src": "12169:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 905,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "12169:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 910,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 907,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "12180:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 908,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "12184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "12180:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12169:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 912,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "12203:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 913,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "12208:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "12203:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 915,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "12211:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "12195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12195:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "12195:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 918,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 906,
													"src": "12241:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 904,
												"id": 919,
												"nodeType": "Return",
												"src": "12234:8:0"
											}
										]
									},
									"documentation": null,
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "12080:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 895,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12080:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "12090:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 897,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12090:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "12100:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12100:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12079:48:0"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "12151:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 902,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12151:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12150:8:0"
									},
									"scope": 957,
									"src": "12065:184:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "12349:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 933,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "12367:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 934,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "12372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "12367:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 936,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "12375:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 932,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															976
														],
														"referencedDeclaration": 976,
														"src": "12359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12359:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "12359:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 939,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "12405:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 940,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "12409:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "12405:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 931,
												"id": 942,
												"nodeType": "Return",
												"src": "12398:12:0"
											}
										]
									},
									"documentation": null,
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "12270:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 922,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12270:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "12280:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 924,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12280:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "12290:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 926,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12290:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12269:48:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "12341:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 929,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12340:8:0"
									},
									"scope": 957,
									"src": "12255:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "12474:98:0",
										"statements": [
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "12484:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12484:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 951,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12484:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 950,
															"isOffset": false,
															"isSlot": false,
															"src": "12520:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 952,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "12509:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 953,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "12558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 948,
												"id": 954,
												"nodeType": "Return",
												"src": "12551:14:0"
											}
										]
									},
									"documentation": null,
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12442:2:0"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "12468:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12468:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12467:6:0"
									},
									"scope": 957,
									"src": "12423:149:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 958,
							"src": "60:12514:0"
						}
					],
					"src": "0:12575:0"
				},
				"id": 0
			}
		}
	}
}