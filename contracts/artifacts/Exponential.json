{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"linkReferences": {},
			"object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723158201fdfeedaf12604d3785c734415f136ef56988c46a351fdc5de4c06ccfb454fca64736f6c63430005110032",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x1F 0xDF 0xEE 0xDA CALL 0x26 DIV 0xD3 PUSH25 0x5C734415F136EF56988C46A351FDC5DE4C06CCFB454FCA6473 PUSH16 0x6C634300051100320000000000000000 ",
			"sourceMap": "24616:6460:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24616:6460:0;;;;;;;"
		},
		"deployedBytecode": {
			"linkReferences": {},
			"object": "6080604052600080fdfea265627a7a723158201fdfeedaf12604d3785c734415f136ef56988c46a351fdc5de4c06ccfb454fca64736f6c63430005110032",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x1F 0xDF 0xEE 0xDA CALL 0x26 DIV 0xD3 PUSH25 0x5C734415F136EF56988C46A351FDC5DE4C06CCFB454FCA6473 PUSH16 0x6C634300051100320000000000000000 ",
			"sourceMap": "24616:6460:0:-;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "12400",
				"executionCost": "66",
				"totalCost": "12466"
			},
			"internal": {
				"addExp(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"divExp(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"divScalar(struct ExponentialNoError.Exp memory,uint256)": "infinite",
				"divScalarByExp(uint256,struct ExponentialNoError.Exp memory)": "infinite",
				"divScalarByExpTruncate(uint256,struct ExponentialNoError.Exp memory)": "infinite",
				"getExp(uint256,uint256)": "infinite",
				"mulExp(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"mulExp(uint256,uint256)": "infinite",
				"mulExp3(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"mulScalar(struct ExponentialNoError.Exp memory,uint256)": "infinite",
				"mulScalarTruncate(struct ExponentialNoError.Exp memory,uint256)": "infinite",
				"mulScalarTruncateAddUInt(struct ExponentialNoError.Exp memory,uint256,uint256)": "infinite",
				"subExp(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": []
}