{
	"compiler": {
		"version": "0.5.17+commit.d19bba13"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "action",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "pauseState",
						"type": "bool"
					}
				],
				"name": "ActionPaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "action",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "pauseState",
						"type": "bool"
					}
				],
				"name": "ActionPaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newSpeed",
						"type": "uint256"
					}
				],
				"name": "ContributorNiuSpeedUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "niuDelta",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "niuBorrowIndex",
						"type": "uint256"
					}
				],
				"name": "DistributedBorrowerNiu",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "supplier",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "niuDelta",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "niuSupplyIndex",
						"type": "uint256"
					}
				],
				"name": "DistributedSupplierNiu",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "error",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "info",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "detail",
						"type": "uint256"
					}
				],
				"name": "Failure",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "MarketEntered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "MarketExited",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					}
				],
				"name": "MarketListed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBorrowCap",
						"type": "uint256"
					}
				],
				"name": "NewBorrowCap",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldBorrowCapGuardian",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newBorrowCapGuardian",
						"type": "address"
					}
				],
				"name": "NewBorrowCapGuardian",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldCloseFactorMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newCloseFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "NewCloseFactor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldCollateralFactorMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newCollateralFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "NewCollateralFactor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldLiquidationIncentiveMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newLiquidationIncentiveMantissa",
						"type": "uint256"
					}
				],
				"name": "NewLiquidationIncentive",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldPauseGuardian",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newPauseGuardian",
						"type": "address"
					}
				],
				"name": "NewPauseGuardian",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract PriceOracle",
						"name": "oldPriceOracle",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "contract PriceOracle",
						"name": "newPriceOracle",
						"type": "address"
					}
				],
				"name": "NewPriceOracle",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "NiuGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newSpeed",
						"type": "uint256"
					}
				],
				"name": "NiuSpeedUpdated",
				"type": "event"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract Unitroller",
						"name": "unitroller",
						"type": "address"
					}
				],
				"name": "_become",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "_borrowGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "_grantNiu",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "_mintGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newBorrowCapGuardian",
						"type": "address"
					}
				],
				"name": "_setBorrowCapGuardian",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "_setBorrowPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newCloseFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "_setCloseFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "newCollateralFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "_setCollateralFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "niuSpeed",
						"type": "uint256"
					}
				],
				"name": "_setContributorNiuSpeed",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newLiquidationIncentiveMantissa",
						"type": "uint256"
					}
				],
				"name": "_setLiquidationIncentive",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract NToken[]",
						"name": "nTokens",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "newBorrowCaps",
						"type": "uint256[]"
					}
				],
				"name": "_setMarketBorrowCaps",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "_setMintPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "niuSpeed",
						"type": "uint256"
					}
				],
				"name": "_setNiuSpeed",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newPauseGuardian",
						"type": "address"
					}
				],
				"name": "_setPauseGuardian",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract PriceOracle",
						"name": "newOracle",
						"type": "address"
					}
				],
				"name": "_setPriceOracle",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "_setSeizePaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "_setTransferPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					}
				],
				"name": "_supportMarket",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "accountAssets",
				"outputs": [
					{
						"internalType": "contract NToken",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allMarkets",
				"outputs": [
					{
						"internalType": "contract NToken",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "borrowAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "borrowCapGuardian",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "borrowCaps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "borrowGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "borrowVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "contract NToken",
						"name": "nToken",
						"type": "address"
					}
				],
				"name": "checkMembership",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					}
				],
				"name": "claimNiu",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address[]",
						"name": "holders",
						"type": "address[]"
					},
					{
						"internalType": "contract NToken[]",
						"name": "nTokens",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "borrowers",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "suppliers",
						"type": "bool"
					}
				],
				"name": "claimNiu",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					},
					{
						"internalType": "contract NToken[]",
						"name": "nTokens",
						"type": "address[]"
					}
				],
				"name": "claimNiu",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "closeFactorMantissa",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address[]",
						"name": "nTokens",
						"type": "address[]"
					}
				],
				"name": "enterMarkets",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nTokenAddress",
						"type": "address"
					}
				],
				"name": "exitMarket",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getAccountLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getAllMarkets",
				"outputs": [
					{
						"internalType": "contract NToken[]",
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getAssetsIn",
				"outputs": [
					{
						"internalType": "contract NToken[]",
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getBlockNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "nTokenModify",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "getHypotheticalAccountLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getNiuAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isNiutroller",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lastContributorBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "nTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "repayAmount",
						"type": "uint256"
					}
				],
				"name": "liquidateBorrowAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "nTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualRepayAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "liquidateBorrowVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "nTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "nTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualRepayAmount",
						"type": "uint256"
					}
				],
				"name": "liquidateCalculateSeizeTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "liquidationIncentiveMantissa",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "markets",
				"outputs": [
					{
						"internalType": "bool",
						"name": "isListed",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "collateralFactorMantissa",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isNiued",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "maxAssets",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "mintAmount",
						"type": "uint256"
					}
				],
				"name": "mintAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "mintGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualMintAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "mintTokens",
						"type": "uint256"
					}
				],
				"name": "mintVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "niuAccrued",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "niuBorrowState",
				"outputs": [
					{
						"internalType": "uint224",
						"name": "index",
						"type": "uint224"
					},
					{
						"internalType": "uint32",
						"name": "block",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "niuBorrowerIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "niuContributorSpeeds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "niuInitialIndex",
				"outputs": [
					{
						"internalType": "uint224",
						"name": "",
						"type": "uint224"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "niuRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "niuSpeeds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "niuSupplierIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "niuSupplyState",
				"outputs": [
					{
						"internalType": "uint224",
						"name": "index",
						"type": "uint224"
					},
					{
						"internalType": "uint32",
						"name": "block",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "niutrollerImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "oracle",
				"outputs": [
					{
						"internalType": "contract PriceOracle",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pauseGuardian",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pendingAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pendingNiutrollerImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "redeemer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					}
				],
				"name": "redeemAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "redeemer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "redeemAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					}
				],
				"name": "redeemVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "payer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "repayAmount",
						"type": "uint256"
					}
				],
				"name": "repayBorrowAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "payer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualRepayAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowerIndex",
						"type": "uint256"
					}
				],
				"name": "repayBorrowVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "nTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "seizeAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "seizeGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "nTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "seizeVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "src",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "transferTokens",
						"type": "uint256"
					}
				],
				"name": "transferAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "transferGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "nToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "src",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "transferTokens",
						"type": "uint256"
					}
				],
				"name": "transferVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					}
				],
				"name": "updateContributorRewards",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Niural",
			"methods": {
				"_grantNiu(address,uint256)": {
					"details": "Note: If there is not enough NIU, we do not perform the transfer all.",
					"params": {
						"amount": "The amount of NIU to (possibly) transfer",
						"recipient": "The address of the recipient to transfer NIU to"
					}
				},
				"_setBorrowCapGuardian(address)": {
					"params": {
						"newBorrowCapGuardian": "The address of the new Borrow Cap Guardian"
					}
				},
				"_setCloseFactor(uint256)": {
					"details": "Admin function to set closeFactor",
					"params": {
						"newCloseFactorMantissa": "New close factor, scaled by 1e18"
					},
					"return": "uint 0=success, otherwise a failure"
				},
				"_setCollateralFactor(address,uint256)": {
					"details": "Admin function to set per-market collateralFactor",
					"params": {
						"nToken": "The market to set the factor on",
						"newCollateralFactorMantissa": "The new collateral factor, scaled by 1e18"
					},
					"return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
				},
				"_setContributorNiuSpeed(address,uint256)": {
					"params": {
						"contributor": "The contributor whose NIU speed to update",
						"niuSpeed": "New NIU speed for contributor"
					}
				},
				"_setLiquidationIncentive(uint256)": {
					"details": "Admin function to set liquidationIncentive",
					"params": {
						"newLiquidationIncentiveMantissa": "New liquidationIncentive scaled by 1e18"
					},
					"return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
				},
				"_setMarketBorrowCaps(address[],uint256[])": {
					"details": "Admin or borrowCapGuardian function to set the borrow caps. A borrow cap of 0 corresponds to unlimited borrowing.",
					"params": {
						"nTokens": "The addresses of the markets (tokens) to change the borrow caps for",
						"newBorrowCaps": "The new borrow cap values in underlying to be set. A value of 0 corresponds to unlimited borrowing."
					}
				},
				"_setNiuSpeed(address,uint256)": {
					"params": {
						"nToken": "The market whose NIU speed to update",
						"niuSpeed": "New NIU speed for market"
					}
				},
				"_setPauseGuardian(address)": {
					"params": {
						"newPauseGuardian": "The address of the new Pause Guardian"
					},
					"return": "uint 0=success, otherwise a failure. (See enum Error for details)"
				},
				"_setPriceOracle(address)": {
					"details": "Admin function to set a new price oracle",
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"_supportMarket(address)": {
					"details": "Admin function to set isListed and add support for the market",
					"params": {
						"nToken": "The address of the market (token) to list"
					},
					"return": "uint 0=success, otherwise a failure. (See enum Error for details)"
				},
				"borrowAllowed(address,address,uint256)": {
					"params": {
						"borrowAmount": "The amount of underlying the account would borrow",
						"borrower": "The account which would borrow the asset",
						"nToken": "The market to verify the borrow against"
					},
					"return": "0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"borrowVerify(address,address,uint256)": {
					"params": {
						"borrowAmount": "The amount of the underlying asset requested to borrow",
						"borrower": "The address borrowing the underlying",
						"nToken": "Asset whose underlying is being borrowed"
					}
				},
				"checkMembership(address,address)": {
					"params": {
						"account": "The address of the account to check",
						"nToken": "The nToken to check"
					},
					"return": "True if the account is in the asset, otherwise false."
				},
				"claimNiu(address)": {
					"params": {
						"holder": "The address to claim NIU for"
					}
				},
				"claimNiu(address,address[])": {
					"params": {
						"holder": "The address to claim NIU for",
						"nTokens": "The list of markets to claim NIU in"
					}
				},
				"claimNiu(address[],address[],bool,bool)": {
					"params": {
						"borrowers": "Whether or not to claim NIU earned by borrowing",
						"holders": "The addresses to claim NIU for",
						"nTokens": "The list of markets to claim NIU in",
						"suppliers": "Whether or not to claim NIU earned by supplying"
					}
				},
				"enterMarkets(address[])": {
					"params": {
						"nTokens": "The list of addresses of the nToken markets to be enabled"
					},
					"return": "Success indicator for whether each corresponding market was entered"
				},
				"exitMarket(address)": {
					"details": "Sender must not have an outstanding borrow balance in the asset, or be providing necessary collateral for an outstanding borrow.",
					"params": {
						"nTokenAddress": "The address of the asset to be removed"
					},
					"return": "Whether or not the account successfully exited the market"
				},
				"getAccountLiquidity(address)": {
					"return": "(possible error code (semi-opaque), account liquidity in excess of collateral requirements,         account shortfall below collateral requirements)"
				},
				"getAllMarkets()": {
					"details": "The automatic getter may be used to access an individual market.",
					"return": "The list of market addresses"
				},
				"getAssetsIn(address)": {
					"params": {
						"account": "The address of the account to pull assets for"
					},
					"return": "A dynamic list with the assets the account has entered"
				},
				"getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
					"params": {
						"account": "The account to determine liquidity for",
						"borrowAmount": "The amount of underlying to hypothetically borrow",
						"nTokenModify": "The market to hypothetically redeem/borrow in",
						"redeemTokens": "The number of tokens to hypothetically redeem"
					},
					"return": "(possible error code (semi-opaque), hypothetical account liquidity in excess of collateral requirements,         hypothetical account shortfall below collateral requirements)"
				},
				"getNiuAddress()": {
					"return": "The address of NIU"
				},
				"liquidateBorrowAllowed(address,address,address,address,uint256)": {
					"params": {
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"nTokenBorrowed": "Asset which was borrowed by the borrower",
						"nTokenCollateral": "Asset which was used as collateral and will be seized",
						"repayAmount": "The amount of underlying being repaid"
					}
				},
				"liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
					"params": {
						"actualRepayAmount": "The amount of underlying being repaid",
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"nTokenBorrowed": "Asset which was borrowed by the borrower",
						"nTokenCollateral": "Asset which was used as collateral and will be seized"
					}
				},
				"liquidateCalculateSeizeTokens(address,address,uint256)": {
					"details": "Used in liquidation (called in nToken.liquidateBorrowFresh)",
					"params": {
						"actualRepayAmount": "The amount of nTokenBorrowed underlying to convert into nTokenCollateral tokens",
						"nTokenBorrowed": "The address of the borrowed nToken",
						"nTokenCollateral": "The address of the collateral nToken"
					},
					"return": "(errorCode, number of nTokenCollateral tokens to be seized in a liquidation)"
				},
				"mintAllowed(address,address,uint256)": {
					"params": {
						"mintAmount": "The amount of underlying being supplied to the market in exchange for tokens",
						"minter": "The account which would get the minted tokens",
						"nToken": "The market to verify the mint against"
					},
					"return": "0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"mintVerify(address,address,uint256,uint256)": {
					"params": {
						"actualMintAmount": "The amount of the underlying asset being minted",
						"mintTokens": "The number of tokens being minted",
						"minter": "The address minting the tokens",
						"nToken": "Asset being minted"
					}
				},
				"redeemAllowed(address,address,uint256)": {
					"params": {
						"nToken": "The market to verify the redeem against",
						"redeemTokens": "The number of nTokens to exchange for the underlying asset in the market",
						"redeemer": "The account which would redeem the tokens"
					},
					"return": "0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"redeemVerify(address,address,uint256,uint256)": {
					"params": {
						"nToken": "Asset being redeemed",
						"redeemAmount": "The amount of the underlying asset being redeemed",
						"redeemTokens": "The number of tokens being redeemed",
						"redeemer": "The address redeeming the tokens"
					}
				},
				"repayBorrowAllowed(address,address,address,uint256)": {
					"params": {
						"borrower": "The account which would borrowed the asset",
						"nToken": "The market to verify the repay against",
						"payer": "The account which would repay the asset",
						"repayAmount": "The amount of the underlying asset the account would repay"
					},
					"return": "0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"repayBorrowVerify(address,address,address,uint256,uint256)": {
					"params": {
						"actualRepayAmount": "The amount of underlying being repaid",
						"borrower": "The address of the borrower",
						"nToken": "Asset being repaid",
						"payer": "The address repaying the borrow"
					}
				},
				"seizeAllowed(address,address,address,address,uint256)": {
					"params": {
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"nTokenBorrowed": "Asset which was borrowed by the borrower",
						"nTokenCollateral": "Asset which was used as collateral and will be seized",
						"seizeTokens": "The number of collateral tokens to seize"
					}
				},
				"seizeVerify(address,address,address,address,uint256)": {
					"params": {
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"nTokenBorrowed": "Asset which was borrowed by the borrower",
						"nTokenCollateral": "Asset which was used as collateral and will be seized",
						"seizeTokens": "The number of collateral tokens to seize"
					}
				},
				"transferAllowed(address,address,address,uint256)": {
					"params": {
						"dst": "The account which receives the tokens",
						"nToken": "The market to verify the transfer against",
						"src": "The account which sources the tokens",
						"transferTokens": "The number of nTokens to transfer"
					},
					"return": "0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"transferVerify(address,address,address,uint256)": {
					"params": {
						"dst": "The account which receives the tokens",
						"nToken": "Asset being transferred",
						"src": "The account which sources the tokens",
						"transferTokens": "The number of nTokens to transfer"
					}
				},
				"updateContributorRewards(address)": {
					"params": {
						"contributor": "The address to calculate contributor rewards for"
					}
				}
			},
			"title": "Niural's Niutroller Contract"
		},
		"userdoc": {
			"methods": {
				"_grantNiu(address,uint256)": {
					"notice": "Transfer NIU to the recipient"
				},
				"_setBorrowCapGuardian(address)": {
					"notice": "Admin function to change the Borrow Cap Guardian"
				},
				"_setCloseFactor(uint256)": {
					"notice": "Sets the closeFactor used when liquidating borrows"
				},
				"_setCollateralFactor(address,uint256)": {
					"notice": "Sets the collateralFactor for a market"
				},
				"_setContributorNiuSpeed(address,uint256)": {
					"notice": "Set NIU speed for a single contributor"
				},
				"_setLiquidationIncentive(uint256)": {
					"notice": "Sets liquidationIncentive"
				},
				"_setMarketBorrowCaps(address[],uint256[])": {
					"notice": "Set the given borrow caps for the given nToken markets. Borrowing that brings total borrows to or above borrow cap will revert."
				},
				"_setNiuSpeed(address,uint256)": {
					"notice": "Set NIU speed for a single market"
				},
				"_setPauseGuardian(address)": {
					"notice": "Admin function to change the Pause Guardian"
				},
				"_setPriceOracle(address)": {
					"notice": "Sets a new price oracle for the niutroller"
				},
				"_supportMarket(address)": {
					"notice": "Add the market to the markets mapping and set it as listed"
				},
				"borrowAllowed(address,address,uint256)": {
					"notice": "Checks if the account should be allowed to borrow the underlying asset of the given market"
				},
				"borrowVerify(address,address,uint256)": {
					"notice": "Validates borrow and reverts on rejection. May emit logs."
				},
				"checkMembership(address,address)": {
					"notice": "Returns whether the given account is entered in the given asset"
				},
				"claimNiu(address)": {
					"notice": "Claim all the niu accrued by holder in all markets"
				},
				"claimNiu(address,address[])": {
					"notice": "Claim all the niu accrued by holder in the specified markets"
				},
				"claimNiu(address[],address[],bool,bool)": {
					"notice": "Claim all niu accrued by the holders"
				},
				"enterMarkets(address[])": {
					"notice": "Add assets to be included in account liquidity calculation"
				},
				"exitMarket(address)": {
					"notice": "Removes asset from sender's account liquidity calculation"
				},
				"getAccountLiquidity(address)": {
					"notice": "Determine the current account liquidity wrt collateral requirements"
				},
				"getAllMarkets()": {
					"notice": "Return all of the markets"
				},
				"getAssetsIn(address)": {
					"notice": "Returns the assets an account has entered"
				},
				"getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
					"notice": "Determine what the account liquidity would be if the given amounts were redeemed/borrowed"
				},
				"getNiuAddress()": {
					"notice": "Return the address of the NIU token"
				},
				"liquidateBorrowAllowed(address,address,address,address,uint256)": {
					"notice": "Checks if the liquidation should be allowed to occur"
				},
				"liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
					"notice": "Validates liquidateBorrow and reverts on rejection. May emit logs."
				},
				"liquidateCalculateSeizeTokens(address,address,uint256)": {
					"notice": "Calculate number of tokens of collateral asset to seize given an underlying amount"
				},
				"mintAllowed(address,address,uint256)": {
					"notice": "Checks if the account should be allowed to mint tokens in the given market"
				},
				"mintVerify(address,address,uint256,uint256)": {
					"notice": "Validates mint and reverts on rejection. May emit logs."
				},
				"redeemAllowed(address,address,uint256)": {
					"notice": "Checks if the account should be allowed to redeem tokens in the given market"
				},
				"redeemVerify(address,address,uint256,uint256)": {
					"notice": "Validates redeem and reverts on rejection. May emit logs."
				},
				"repayBorrowAllowed(address,address,address,uint256)": {
					"notice": "Checks if the account should be allowed to repay a borrow in the given market"
				},
				"repayBorrowVerify(address,address,address,uint256,uint256)": {
					"notice": "Validates repayBorrow and reverts on rejection. May emit logs."
				},
				"seizeAllowed(address,address,address,address,uint256)": {
					"notice": "Checks if the seizing of assets should be allowed to occur"
				},
				"seizeVerify(address,address,address,address,uint256)": {
					"notice": "Validates seize and reverts on rejection. May emit logs."
				},
				"transferAllowed(address,address,address,uint256)": {
					"notice": "Checks if the account should be allowed to transfer tokens in the given market"
				},
				"transferVerify(address,address,address,uint256)": {
					"notice": "Validates transfer and reverts on rejection. May emit logs."
				},
				"updateContributorRewards(address)": {
					"notice": "Calculate additional accrued NIU for a contributor since last accrual"
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"NiutrollerG1.sol": "NiutrollerG7"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"CarefulMath.sol": {
			"keccak256": "0x7de4cd47844d3794b0a371d890708d3cd57b4c77746554b6a1b14c09cb86fb5e",
			"urls": [
				"bzz-raw://7417da7f1ba7f3c00df87c132197f43e4abf05ecd2bc9b5b01f1f1bb0f203d46",
				"dweb:/ipfs/QmV9NFLys7runFxdEZ7rmXHu23RgjKshcSjayDgorNMWMD"
			]
		},
		"EIP20Interface.sol": {
			"keccak256": "0xfd8ed2eac6d0b4d9ee6b32628ba68bae17544b66f190a5f7ce0c6ad024579dc8",
			"urls": [
				"bzz-raw://701be308137fe36f221f1d7c815247a272638df40917e7d1456b3b16e8402897",
				"dweb:/ipfs/QmPDkPoKiWXMjwpGa65JHBjo5NH8AA3q1nMhsewfUZHjpx"
			]
		},
		"EIP20NonStandardInterface.sol": {
			"keccak256": "0x9719f12e4b80b51147ac195553a198cf8b0c516e7e4d04fc324a23ed15cbafb2",
			"urls": [
				"bzz-raw://50c3ba49b80106c88b0171390aa4127edc86f7b29607abe3dc6d08eaefebf837",
				"dweb:/ipfs/QmP6AHNmFdwYwWUeHnhYi3drCQy4dpnnqUbkMeU3oAtokj"
			]
		},
		"ErrorReporter.sol": {
			"keccak256": "0x2417d8e0c87e0823b7d22cac44c7830d0581c7b08510c72a2675ef82f5fa48e8",
			"urls": [
				"bzz-raw://6119ab3413685ca79955d88578b5d8d85f041c3ccb52ac8e99b4fd9819376c8e",
				"dweb:/ipfs/Qma5ponYp7tF6G2E4iZDzqsAXoNxoYupWrsZG1E7hTr357"
			]
		},
		"Exponential.sol": {
			"keccak256": "0x3477591bd3b63cb1a822e7f47b777471db36f13ce5570b6f1c4fa6995674b296",
			"urls": [
				"bzz-raw://05620feb9bf7925e3f617313eea504c50d3df3abbddb6acf403c72b24d6165e3",
				"dweb:/ipfs/QmTYitnvqiyek81sUCUGjyDsDGxhmUBaGAmsX2acEyCH5m"
			]
		},
		"ExponentialNoError.sol": {
			"keccak256": "0x94e189b0feea42d6daa8d7e93198d27abddb7ee907e14b343bf5a0c6d94b9bce",
			"urls": [
				"bzz-raw://1edd1cad3881bd74f94536152ec0114740358db3dd88675c7a3fbd2e97b394bc",
				"dweb:/ipfs/Qmaoum14Xw2CBQdjrFYQAKAqAnNjwezNwPkBgXWugCxxLj"
			]
		},
		"Governance/Niu.sol": {
			"keccak256": "0x58a97913365095c0d0c4b77d108fce0b83b34882370fe91c7bd3d0397177df46",
			"urls": [
				"bzz-raw://54d2399b258866aa4274f18b298f3b84cd82d90e9303c6049ab56e626edf72a5",
				"dweb:/ipfs/QmbupiQ44khoxmYb1wsjvgPYBLL61DNDGLJ1hTCRouyUat"
			]
		},
		"InterestRateModel.sol": {
			"keccak256": "0x17ec0d9796f0a0c133ad5ce2a3e0888316c84425aa7fa0e9a14b2f3a7b257289",
			"urls": [
				"bzz-raw://b3b0dc219a79c3f0f0be9c607be9e9adbee19b17ec1790294235d7338cbd36bf",
				"dweb:/ipfs/QmY7D2ScK2wqEYb57kgv5MQf9HMrFzS9irVzJaWcVAecwf"
			]
		},
		"InterestRateModelInterface.sol": {
			"keccak256": "0x99b15cdba6390a7699263ef733bc1a5dfae9379fedf50bbce4bef43a3f755c1e",
			"urls": [
				"bzz-raw://80241dfee4af251b2d90678885730e94e4c1670702bb70ca092af37bd6b53dc7",
				"dweb:/ipfs/QmYQaQes35qHr5ztkAj6vqzG2vY2k5C1We3P4739WMUU6P"
			]
		},
		"NToken.sol": {
			"keccak256": "0x7f0d5a701279b4d1134f3da44db9f5187d96a32aabd56ec87d0f535288d56ac1",
			"urls": [
				"bzz-raw://1e6acae101ab9513b20b091cedc7262c359bfa7541cef839a7e72cee51a0a24e",
				"dweb:/ipfs/Qmcc4L3K1ZDXYsQvHN6djSaZJUX9Mv8nPxeR9hnpbS5RVC"
			]
		},
		"NTokenInterfaces.sol": {
			"keccak256": "0x2c89a4e0e43fcaa048683d483860b3a921f9a716b025ee13b4b16bdf23a52930",
			"urls": [
				"bzz-raw://e21572602c75690644b029f970f0045b5f6b028f9e468410407501788ff4c07b",
				"dweb:/ipfs/QmaJDYsuCq97JLfPRcb9cJyP8MaaPzpGmy8iXUdfKbTB4m"
			]
		},
		"NiutrollerG1.sol": {
			"keccak256": "0xad7da3b4db564ce62e8b08230f13426911d104c99fb19b9f0f19c922437afc5f",
			"urls": [
				"bzz-raw://aa23e0a8e4272bb9c59f7755e74d8e678b929b2b25ff34ed3d7a1050e533eb3c",
				"dweb:/ipfs/QmUcwX7s4LEJt9dnHH6G3GyyJoKmpwkDSiGSzrdGcFS6HQ"
			]
		},
		"NiutrollerInterface.sol": {
			"keccak256": "0x54a1555ff6db1b9e92b5df65abae552082b8355051f5903925aba2e45b7cf964",
			"urls": [
				"bzz-raw://249991018e34b81b300b9e89ebb56c704294632ff6cc8a31a318f6b5cf2ccd34",
				"dweb:/ipfs/QmW4u4f56wd6yh7UHqcgAX5WUUf9y5HaBbASK8MLpcSVxV"
			]
		},
		"NiutrollerStorage.sol": {
			"keccak256": "0x593f21f39e00bba87c255be13de72e83c4093d74eb4b31447dfb89a5a4407d42",
			"urls": [
				"bzz-raw://8b924c2fe93051e6347f2f6a9d2c021d4c74ea63bf8d4c5ef7ae819569e0ac04",
				"dweb:/ipfs/QmcjzUaNT6fBq2ZrzzWbUYFMN5wJvwPsDEAFHHWgbcZ3Ea"
			]
		},
		"OpenZeppelin/SafeMath.sol": {
			"keccak256": "0x6653e37ff57a02b7b7f20199bb0fd5685756ced19a67f53328b42c9d2167ffd2",
			"urls": [
				"bzz-raw://1ab0575cc97bfb6c741c4e76fbb36a87fe320458d23dea7b6394259c9356ddcf",
				"dweb:/ipfs/QmbH6Qu2JSAmSgfhUA7gMmp7BBks9BBsufdGepewqpHssf"
			]
		},
		"PriceOracle.sol": {
			"keccak256": "0x6560530253f71465d69d943ec4d66b1ec44ed6ca13acf4e14f152066b09a311b",
			"urls": [
				"bzz-raw://65b0f8664ed7c6a2063d19a3cb7249c9b5f14a4a9dc4210cc6faf3691e1babb7",
				"dweb:/ipfs/Qmbe4378Yodsi8yiYy6dwNDu7uDqGxXqki3B6w7CzhxsDT"
			]
		},
		"Unitroller.sol": {
			"keccak256": "0x27fee20f311248ded8a1b033cde4ae13595343dcf2af322b33587b575e227b70",
			"urls": [
				"bzz-raw://1f09f7c2e83de199f1560deddccb86463ac58d526d3cb932d2855ff7a5ff4eab",
				"dweb:/ipfs/Qmaf8KbgxuZPWTN32Vxw7DPpuZKY7UR9yHF9wZbaaeraAE"
			]
		}
	},
	"version": 1
}